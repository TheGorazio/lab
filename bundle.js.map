{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 239b6535d43be39bd003","webpack:///./~/core-js/modules/_export.js","webpack:///./~/core-js/modules/_an-object.js","webpack:///./~/core-js/modules/_global.js","webpack:///./~/core-js/modules/_fails.js","webpack:///./~/core-js/modules/_is-object.js","webpack:///./~/core-js/modules/_wks.js","webpack:///./~/core-js/modules/_descriptors.js","webpack:///./~/core-js/modules/_object-dp.js","webpack:///./~/core-js/modules/_to-length.js","webpack:///./~/core-js/modules/_to-object.js","webpack:///./~/core-js/modules/_has.js","webpack:///./~/core-js/modules/_a-function.js","webpack:///./~/core-js/modules/_hide.js","webpack:///./~/core-js/modules/_redefine.js","webpack:///./~/core-js/modules/_string-html.js","webpack:///./~/core-js/modules/_to-iobject.js","webpack:///./~/core-js/modules/_object-gopd.js","webpack:///./~/core-js/modules/_object-gpo.js","webpack:///./~/core-js/modules/_cof.js","webpack:///./~/core-js/modules/_defined.js","webpack:///./~/core-js/modules/_strict-method.js","webpack:///./~/core-js/modules/_array-methods.js","webpack:///./~/core-js/modules/_object-sap.js","webpack:///./~/core-js/modules/_to-primitive.js","webpack:///./~/core-js/modules/_core.js","webpack:///./~/core-js/modules/_ctx.js","webpack:///./~/core-js/modules/_metadata.js","webpack:///./~/core-js/modules/_typed-array.js","webpack:///./~/core-js/modules/_meta.js","webpack:///./~/core-js/modules/_property-desc.js","webpack:///./~/core-js/modules/_to-integer.js","webpack:///./~/konva/konva.js","webpack:///./~/core-js/modules/_an-instance.js","webpack:///./~/core-js/modules/_library.js","webpack:///./~/core-js/modules/_object-create.js","webpack:///./~/core-js/modules/_object-gopn.js","webpack:///./~/core-js/modules/_object-keys.js","webpack:///./~/core-js/modules/_redefine-all.js","webpack:///./~/core-js/modules/_set-species.js","webpack:///./~/core-js/modules/_to-index.js","webpack:///./~/core-js/modules/_uid.js","webpack:///./~/core-js/modules/_add-to-unscopables.js","webpack:///./~/core-js/modules/_for-of.js","webpack:///./~/core-js/modules/_iterators.js","webpack:///./~/core-js/modules/_set-to-string-tag.js","webpack:///./~/core-js/modules/_string-trim.js","webpack:///./~/core-js/modules/_classof.js","webpack:///./~/core-js/modules/_iobject.js","webpack:///./~/core-js/modules/_object-pie.js","webpack:///./src/scripts/StandComponents/Screen.js","webpack:///./~/core-js/modules/_array-includes.js","webpack:///./~/core-js/modules/_collection.js","webpack:///./~/core-js/modules/_fix-re-wks.js","webpack:///./~/core-js/modules/_flags.js","webpack:///./~/core-js/modules/_invoke.js","webpack:///./~/core-js/modules/_is-regexp.js","webpack:///./~/core-js/modules/_iter-detect.js","webpack:///./~/core-js/modules/_object-forced-pam.js","webpack:///./~/core-js/modules/_object-gops.js","webpack:///./~/core-js/modules/_shared.js","webpack:///./~/core-js/modules/_typed.js","webpack:///./~/core-js/modules/_array-fill.js","webpack:///./~/core-js/modules/_create-property.js","webpack:///./~/core-js/modules/_dom-create.js","webpack:///./~/core-js/modules/_enum-bug-keys.js","webpack:///./~/core-js/modules/_fails-is-regexp.js","webpack:///./~/core-js/modules/_html.js","webpack:///./~/core-js/modules/_inherit-if-required.js","webpack:///./~/core-js/modules/_is-array-iter.js","webpack:///./~/core-js/modules/_is-array.js","webpack:///./~/core-js/modules/_iter-create.js","webpack:///./~/core-js/modules/_iter-define.js","webpack:///./~/core-js/modules/_math-expm1.js","webpack:///./~/core-js/modules/_math-sign.js","webpack:///./~/core-js/modules/_microtask.js","webpack:///./~/core-js/modules/_set-proto.js","webpack:///./~/core-js/modules/_shared-key.js","webpack:///./~/core-js/modules/_species-constructor.js","webpack:///./~/core-js/modules/_string-at.js","webpack:///./~/core-js/modules/_string-context.js","webpack:///./~/core-js/modules/_string-repeat.js","webpack:///./~/core-js/modules/_string-ws.js","webpack:///./~/core-js/modules/_task.js","webpack:///./~/core-js/modules/_typed-buffer.js","webpack:///./~/core-js/modules/_wks-define.js","webpack:///./~/core-js/modules/core.get-iterator-method.js","webpack:///./~/core-js/modules/es6.array.iterator.js","webpack:///./src/scripts/StandComponents/Input.js","webpack:///./~/core-js/modules/_a-number-value.js","webpack:///./~/core-js/modules/_array-copy-within.js","webpack:///./~/core-js/modules/_array-from-iterable.js","webpack:///./~/core-js/modules/_array-reduce.js","webpack:///./~/core-js/modules/_bind.js","webpack:///./~/core-js/modules/_collection-strong.js","webpack:///./~/core-js/modules/_collection-to-json.js","webpack:///./~/core-js/modules/_collection-weak.js","webpack:///./~/core-js/modules/_ie8-dom-define.js","webpack:///./~/core-js/modules/_is-integer.js","webpack:///./~/core-js/modules/_iter-call.js","webpack:///./~/core-js/modules/_iter-step.js","webpack:///./~/core-js/modules/_math-log1p.js","webpack:///./~/core-js/modules/_object-assign.js","webpack:///./~/core-js/modules/_object-dps.js","webpack:///./~/core-js/modules/_object-gopn-ext.js","webpack:///./~/core-js/modules/_object-keys-internal.js","webpack:///./~/core-js/modules/_object-to-array.js","webpack:///./~/core-js/modules/_own-keys.js","webpack:///./~/core-js/modules/_parse-float.js","webpack:///./~/core-js/modules/_parse-int.js","webpack:///./~/core-js/modules/_same-value.js","webpack:///./~/core-js/modules/_string-pad.js","webpack:///./~/core-js/modules/_wks-ext.js","webpack:///./~/core-js/modules/es6.map.js","webpack:///./~/core-js/modules/es6.regexp.flags.js","webpack:///./~/core-js/modules/es6.set.js","webpack:///./~/core-js/modules/es6.weak-map.js","webpack:///./src/scripts/StandComponents/Capacity.js","webpack:///./src/scripts/StandComponents/Inductivity.js","webpack:///./src/scripts/StandComponents/Regulator.js","webpack:///./src/scripts/StandComponents/Resistor.js","webpack:///./src/scripts/StandComponents/Stand.js","webpack:///./src/scripts/StandComponents/Wire.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/standBuilder.js","webpack:///./~/babel-polyfill/lib/index.js","webpack:///./~/core-js/fn/regexp/escape.js","webpack:///./~/core-js/modules/_array-species-constructor.js","webpack:///./~/core-js/modules/_array-species-create.js","webpack:///./~/core-js/modules/_date-to-primitive.js","webpack:///./~/core-js/modules/_enum-keys.js","webpack:///./~/core-js/modules/_keyof.js","webpack:///./~/core-js/modules/_partial.js","webpack:///./~/core-js/modules/_path.js","webpack:///./~/core-js/modules/_replacer.js","webpack:///./~/core-js/modules/core.regexp.escape.js","webpack:///./~/core-js/modules/es6.array.copy-within.js","webpack:///./~/core-js/modules/es6.array.every.js","webpack:///./~/core-js/modules/es6.array.fill.js","webpack:///./~/core-js/modules/es6.array.filter.js","webpack:///./~/core-js/modules/es6.array.find-index.js","webpack:///./~/core-js/modules/es6.array.find.js","webpack:///./~/core-js/modules/es6.array.for-each.js","webpack:///./~/core-js/modules/es6.array.from.js","webpack:///./~/core-js/modules/es6.array.index-of.js","webpack:///./~/core-js/modules/es6.array.is-array.js","webpack:///./~/core-js/modules/es6.array.join.js","webpack:///./~/core-js/modules/es6.array.last-index-of.js","webpack:///./~/core-js/modules/es6.array.map.js","webpack:///./~/core-js/modules/es6.array.of.js","webpack:///./~/core-js/modules/es6.array.reduce-right.js","webpack:///./~/core-js/modules/es6.array.reduce.js","webpack:///./~/core-js/modules/es6.array.slice.js","webpack:///./~/core-js/modules/es6.array.some.js","webpack:///./~/core-js/modules/es6.array.sort.js","webpack:///./~/core-js/modules/es6.array.species.js","webpack:///./~/core-js/modules/es6.date.now.js","webpack:///./~/core-js/modules/es6.date.to-iso-string.js","webpack:///./~/core-js/modules/es6.date.to-json.js","webpack:///./~/core-js/modules/es6.date.to-primitive.js","webpack:///./~/core-js/modules/es6.date.to-string.js","webpack:///./~/core-js/modules/es6.function.bind.js","webpack:///./~/core-js/modules/es6.function.has-instance.js","webpack:///./~/core-js/modules/es6.function.name.js","webpack:///./~/core-js/modules/es6.math.acosh.js","webpack:///./~/core-js/modules/es6.math.asinh.js","webpack:///./~/core-js/modules/es6.math.atanh.js","webpack:///./~/core-js/modules/es6.math.cbrt.js","webpack:///./~/core-js/modules/es6.math.clz32.js","webpack:///./~/core-js/modules/es6.math.cosh.js","webpack:///./~/core-js/modules/es6.math.expm1.js","webpack:///./~/core-js/modules/es6.math.fround.js","webpack:///./~/core-js/modules/es6.math.hypot.js","webpack:///./~/core-js/modules/es6.math.imul.js","webpack:///./~/core-js/modules/es6.math.log10.js","webpack:///./~/core-js/modules/es6.math.log1p.js","webpack:///./~/core-js/modules/es6.math.log2.js","webpack:///./~/core-js/modules/es6.math.sign.js","webpack:///./~/core-js/modules/es6.math.sinh.js","webpack:///./~/core-js/modules/es6.math.tanh.js","webpack:///./~/core-js/modules/es6.math.trunc.js","webpack:///./~/core-js/modules/es6.number.constructor.js","webpack:///./~/core-js/modules/es6.number.epsilon.js","webpack:///./~/core-js/modules/es6.number.is-finite.js","webpack:///./~/core-js/modules/es6.number.is-integer.js","webpack:///./~/core-js/modules/es6.number.is-nan.js","webpack:///./~/core-js/modules/es6.number.is-safe-integer.js","webpack:///./~/core-js/modules/es6.number.max-safe-integer.js","webpack:///./~/core-js/modules/es6.number.min-safe-integer.js","webpack:///./~/core-js/modules/es6.number.parse-float.js","webpack:///./~/core-js/modules/es6.number.parse-int.js","webpack:///./~/core-js/modules/es6.number.to-fixed.js","webpack:///./~/core-js/modules/es6.number.to-precision.js","webpack:///./~/core-js/modules/es6.object.assign.js","webpack:///./~/core-js/modules/es6.object.create.js","webpack:///./~/core-js/modules/es6.object.define-properties.js","webpack:///./~/core-js/modules/es6.object.define-property.js","webpack:///./~/core-js/modules/es6.object.freeze.js","webpack:///./~/core-js/modules/es6.object.get-own-property-descriptor.js","webpack:///./~/core-js/modules/es6.object.get-own-property-names.js","webpack:///./~/core-js/modules/es6.object.get-prototype-of.js","webpack:///./~/core-js/modules/es6.object.is-extensible.js","webpack:///./~/core-js/modules/es6.object.is-frozen.js","webpack:///./~/core-js/modules/es6.object.is-sealed.js","webpack:///./~/core-js/modules/es6.object.is.js","webpack:///./~/core-js/modules/es6.object.keys.js","webpack:///./~/core-js/modules/es6.object.prevent-extensions.js","webpack:///./~/core-js/modules/es6.object.seal.js","webpack:///./~/core-js/modules/es6.object.set-prototype-of.js","webpack:///./~/core-js/modules/es6.object.to-string.js","webpack:///./~/core-js/modules/es6.parse-float.js","webpack:///./~/core-js/modules/es6.parse-int.js","webpack:///./~/core-js/modules/es6.promise.js","webpack:///./~/core-js/modules/es6.reflect.apply.js","webpack:///./~/core-js/modules/es6.reflect.construct.js","webpack:///./~/core-js/modules/es6.reflect.define-property.js","webpack:///./~/core-js/modules/es6.reflect.delete-property.js","webpack:///./~/core-js/modules/es6.reflect.enumerate.js","webpack:///./~/core-js/modules/es6.reflect.get-own-property-descriptor.js","webpack:///./~/core-js/modules/es6.reflect.get-prototype-of.js","webpack:///./~/core-js/modules/es6.reflect.get.js","webpack:///./~/core-js/modules/es6.reflect.has.js","webpack:///./~/core-js/modules/es6.reflect.is-extensible.js","webpack:///./~/core-js/modules/es6.reflect.own-keys.js","webpack:///./~/core-js/modules/es6.reflect.prevent-extensions.js","webpack:///./~/core-js/modules/es6.reflect.set-prototype-of.js","webpack:///./~/core-js/modules/es6.reflect.set.js","webpack:///./~/core-js/modules/es6.regexp.constructor.js","webpack:///./~/core-js/modules/es6.regexp.match.js","webpack:///./~/core-js/modules/es6.regexp.replace.js","webpack:///./~/core-js/modules/es6.regexp.search.js","webpack:///./~/core-js/modules/es6.regexp.split.js","webpack:///./~/core-js/modules/es6.regexp.to-string.js","webpack:///./~/core-js/modules/es6.string.anchor.js","webpack:///./~/core-js/modules/es6.string.big.js","webpack:///./~/core-js/modules/es6.string.blink.js","webpack:///./~/core-js/modules/es6.string.bold.js","webpack:///./~/core-js/modules/es6.string.code-point-at.js","webpack:///./~/core-js/modules/es6.string.ends-with.js","webpack:///./~/core-js/modules/es6.string.fixed.js","webpack:///./~/core-js/modules/es6.string.fontcolor.js","webpack:///./~/core-js/modules/es6.string.fontsize.js","webpack:///./~/core-js/modules/es6.string.from-code-point.js","webpack:///./~/core-js/modules/es6.string.includes.js","webpack:///./~/core-js/modules/es6.string.italics.js","webpack:///./~/core-js/modules/es6.string.iterator.js","webpack:///./~/core-js/modules/es6.string.link.js","webpack:///./~/core-js/modules/es6.string.raw.js","webpack:///./~/core-js/modules/es6.string.repeat.js","webpack:///./~/core-js/modules/es6.string.small.js","webpack:///./~/core-js/modules/es6.string.starts-with.js","webpack:///./~/core-js/modules/es6.string.strike.js","webpack:///./~/core-js/modules/es6.string.sub.js","webpack:///./~/core-js/modules/es6.string.sup.js","webpack:///./~/core-js/modules/es6.string.trim.js","webpack:///./~/core-js/modules/es6.symbol.js","webpack:///./~/core-js/modules/es6.typed.array-buffer.js","webpack:///./~/core-js/modules/es6.typed.data-view.js","webpack:///./~/core-js/modules/es6.typed.float32-array.js","webpack:///./~/core-js/modules/es6.typed.float64-array.js","webpack:///./~/core-js/modules/es6.typed.int16-array.js","webpack:///./~/core-js/modules/es6.typed.int32-array.js","webpack:///./~/core-js/modules/es6.typed.int8-array.js","webpack:///./~/core-js/modules/es6.typed.uint16-array.js","webpack:///./~/core-js/modules/es6.typed.uint32-array.js","webpack:///./~/core-js/modules/es6.typed.uint8-array.js","webpack:///./~/core-js/modules/es6.typed.uint8-clamped-array.js","webpack:///./~/core-js/modules/es6.weak-set.js","webpack:///./~/core-js/modules/es7.array.includes.js","webpack:///./~/core-js/modules/es7.asap.js","webpack:///./~/core-js/modules/es7.error.is-error.js","webpack:///./~/core-js/modules/es7.map.to-json.js","webpack:///./~/core-js/modules/es7.math.iaddh.js","webpack:///./~/core-js/modules/es7.math.imulh.js","webpack:///./~/core-js/modules/es7.math.isubh.js","webpack:///./~/core-js/modules/es7.math.umulh.js","webpack:///./~/core-js/modules/es7.object.define-getter.js","webpack:///./~/core-js/modules/es7.object.define-setter.js","webpack:///./~/core-js/modules/es7.object.entries.js","webpack:///./~/core-js/modules/es7.object.get-own-property-descriptors.js","webpack:///./~/core-js/modules/es7.object.lookup-getter.js","webpack:///./~/core-js/modules/es7.object.lookup-setter.js","webpack:///./~/core-js/modules/es7.object.values.js","webpack:///./~/core-js/modules/es7.observable.js","webpack:///./~/core-js/modules/es7.reflect.define-metadata.js","webpack:///./~/core-js/modules/es7.reflect.delete-metadata.js","webpack:///./~/core-js/modules/es7.reflect.get-metadata-keys.js","webpack:///./~/core-js/modules/es7.reflect.get-metadata.js","webpack:///./~/core-js/modules/es7.reflect.get-own-metadata-keys.js","webpack:///./~/core-js/modules/es7.reflect.get-own-metadata.js","webpack:///./~/core-js/modules/es7.reflect.has-metadata.js","webpack:///./~/core-js/modules/es7.reflect.has-own-metadata.js","webpack:///./~/core-js/modules/es7.reflect.metadata.js","webpack:///./~/core-js/modules/es7.set.to-json.js","webpack:///./~/core-js/modules/es7.string.at.js","webpack:///./~/core-js/modules/es7.string.match-all.js","webpack:///./~/core-js/modules/es7.string.pad-end.js","webpack:///./~/core-js/modules/es7.string.pad-start.js","webpack:///./~/core-js/modules/es7.string.trim-left.js","webpack:///./~/core-js/modules/es7.string.trim-right.js","webpack:///./~/core-js/modules/es7.symbol.async-iterator.js","webpack:///./~/core-js/modules/es7.symbol.observable.js","webpack:///./~/core-js/modules/es7.system.global.js","webpack:///./~/core-js/modules/web.dom.iterable.js","webpack:///./~/core-js/modules/web.immediate.js","webpack:///./~/core-js/modules/web.timers.js","webpack:///./~/core-js/shim.js","webpack:///./~/process/browser.js","webpack:///./~/regenerator-runtime/runtime.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","core","hide","redefine","ctx","PROTOTYPE","$export","type","name","source","key","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","undefined","Function","U","W","R","isObject","it","TypeError","window","Math","self","__g","exec","e","store","uid","Symbol","USE_SYMBOL","$exports","Object","defineProperty","get","a","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","value","toInteger","min","defined","hasOwnProperty","createDesc","object","has","SRC","TO_STRING","$toString","TPL","split","inspectSource","val","safe","isFunction","join","String","prototype","this","fails","quot","createHTML","string","tag","attribute","p1","replace","NAME","test","toLowerCase","length","IObject","pIE","toIObject","gOPD","getOwnPropertyDescriptor","toObject","IE_PROTO","ObjectProto","getPrototypeOf","constructor","toString","slice","method","arg","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","res","index","result","push","KEY","fn","valueOf","version","__e","aFunction","b","apply","arguments","Map","shared","getOrCreateMetadataMap","targetKey","targetMetadata","set","keyMetadata","ordinaryHasOwnMetadata","MetadataKey","metadataMap","ordinaryGetOwnMetadata","ordinaryDefineOwnMetadata","MetadataValue","ordinaryOwnMetadataKeys","keys","forEach","_","toMetaKey","map","LIBRARY","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","same","classof","isArrayIter","gOPN","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","RangeError","Uint8Array","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","ArrayProto","Array","$ArrayBuffer","ArrayBuffer","$DataView","DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","values","arrayKeys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","sort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","CONSTR","TYPED_ARRAY","TYPED","VIEW","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","buffer","FORCED_SET","strictToLength","SAME","number","toOffset","BYTES","offset","validate","C","speciesFromList","list","fromList","addGetter","internal","_d","$from","i","step","iterator","aLen","mapfn","mapping","iterFn","next","done","$of","TO_LOCALE_BUG","$toLocaleString","proto","copyWithin","start","every","fill","filter","find","predicate","findIndex","indexOf","searchElement","includes","separator","reverse","middle","floor","some","comparefn","subarray","begin","end","$begin","byteOffset","$slice","$set","arrayLike","src","len","$iterators","isTAIndex","$getDesc","$setDesc","desc","configurable","writable","enumerable","$TypedArrayPrototype$","wrapper","CLAMPED","ISNT_UINT8","GETTER","SETTER","TypedArray","Base","TAC","FORCED","ABV","TypedArrayPrototype","getter","data","v","o","setter","round","addElement","$offset","$length","byteLength","klass","$len","l","iter","concat","$nativeIterator","CORRECT_ITER_NAME","$iterator","from","of","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","bitmap","ceil","isNaN","PI_OVER_180","PI","Konva","stages","idCounter","ids","names","shapes","listenClickTap","inDblClickWindow","enableTrace","traceArrMax","dblClickWindow","pixelRatio","dragDistance","angleDeg","showWarnings","Filters","isDragging","dd","DD","isDragReady","node","_addId","_removeId","_addName","_removeName","_id","nodes","n","no","splice","getAngle","angle","_detectIE","ua","msie","parseInt","substring","trident","rv","edge","_parseUA","userAgent","match","mobile","ieMobile","browser","isIE","UA","glob","WorkerGlobalScope","navigator","console","error","document","Canvas","jsdom","defaultView","Image","_nodeCanvas","Collection","args","each","func","toArray","arr","toCollection","collection","_mapMethod","methodName","mapMethods","prot","Transform","copy","point","x","y","translate","scale","sx","sy","rotate","rad","cos","s","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","dx","dy","invert","d","m0","m1","m2","m3","m4","m5","getMatrix","setAbsolutePosition","yt","xt","CONTEXT_2D","OBJECT_ARRAY","OBJECT_NUMBER","OBJECT_STRING","PI_OVER_DEG180","DEG180_OVER_PI","HASH","EMPTY_STRING","ZERO","KONVA_WARNING","KONVA_ERROR","RGB_PAREN","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","Util","_isElement","obj","nodeType","_isFunction","_isObject","_isArray","_isNumber","_isString","_throttle","wait","opts","context","timeout","previous","options","later","leading","Date","getTime","now","remaining","clearTimeout","trailing","setTimeout","_hasMethods","isValidSelector","selector","firstChar","toUpperCase","createCanvasElement","canvas","createElement","style","isBrowser","_isInDocument","el","parentNode","_simplifyArray","retArr","util","_getImage","callback","imageObj","onload","width","height","_context","getContext","putImageData","toDataURL","_getRGBAString","alpha","_rgbToHex","r","g","_hexToRgb","hex","bigint","getRandomColor","randColor","random","def","getRGB","color","rgb","substr","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex6ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","parts","Number","_merge","o1","o2","retObj","_clone","cloneObject","cloneArray","_degToRad","deg","_radToDeg","_capitalize","charAt","throw","Error","warn","extend","child","parent","Ctor","oldProto","__super__","addMethods","methods","_getControlPoints","x0","y0","x1","y1","x2","y2","t","d01","sqrt","pow","d12","fa","fb","p1x","p1y","p2x","p2y","_expandPoints","tension","cp","allPoints","_removeLastLetter","_getProjectionToSegment","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","temp","newStart","pr","_prepareToStringify","visitedByCircularReferenceRemoval","_pixelRatio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","config","init","conf","_canvas","padding","margin","border","background","position","top","left","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","setHeight","mimeType","quality","err","message","SceneCanvas","SceneContext","HitCanvas","HitContext","hitCanvas","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","Context","traceArr","_enableTrace","fillShape","shape","getFillEnabled","_fill","strokeShape","getStrokeEnabled","_stroke","fillStrokeShape","fillEnabled","getTrace","relaxed","trace","property","clearTrace","_trace","shift","reset","getCanvas","setTransform","clear","bounds","clearRect","_applyLineCap","lineCap","getLineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","getLineJoin","attr","arc","beginPath","bezierCurveTo","clip","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","isPointInPath","fillRect","strokeRect","fillText","measureText","text","getImageData","lineTo","moveTo","rect","quadraticCurveTo","restore","save","setLineDash","mozDash","webkitLineDash","getLineDash","stroke","strokeText","transform","origSetter","ret","origMethod","prop","_fillColor","_fillFunc","_fillPattern","fillPatternX","getFillPatternX","fillPatternY","getFillPatternY","fillPatternScale","getFillPatternScale","fillPatternRotation","getFillPatternRotation","fillPatternOffset","getFillPatternOffset","getFillPatternImage","getFillPatternRepeat","_fillLinearGradient","getFillLinearGradientStartPoint","getFillLinearGradientEndPoint","colorStops","getFillLinearGradientColorStops","grd","addColorStop","_fillRadialGradient","getFillRadialGradientStartPoint","getFillRadialGradientEndPoint","startRadius","getFillRadialGradientStartRadius","endRadius","getFillRadialGradientEndRadius","getFillRadialGradientColorStops","hasColor","hasPattern","hasLinearGradient","hasRadialGradient","fillPriority","getFillPriority","dash","strokeScaleEnabled","getStrokeScaleEnabled","Text","hasStroke","dashEnabled","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","getShadowRGBA","blur","getShadowBlur","getShadowOffset","getAbsoluteScale","scaleX","scaleY","colorKey","_fillFuncHit","strokeHitEnabled","_strokeFuncHit","GET","SET","Factory","addGetterSetter","validator","after","addSetter","addOverloadedGetterSetter","attrs","_setAttr","addComponentsGetterSetter","components","component","capitalize","getAttr","oldVal","_fireChangeEvent","capitalizedAttr","addDeprecatedGetterSetter","backCompat","oldMethodName","newMethodName","afterSetFilter","_filterUpToDate","Validators","RGBComponent","alphaComponent","ABSOLUTE_OPACITY","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CHANGE","CHILDREN","DOT","ID","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","CLONE_BLACK_LIST","TRANSFORM_CHANGE_STR","SCALE_CHANGE_STR","Node","_init","eventListeners","_cache","setAttrs","on","_clearCache","_clearSelfAndDescendantCache","_getCache","privateGetter","cache","children","getChildren","clearCache","getClientRect","drawBorder","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","hitContext","isCache","drawScene","drawHit","scene","hit","_transformedRect","minX","minY","maxX","maxY","points","trans","getTransform","transformed","max","_drawCachedSceneCanvas","cacheCanvas","_getCachedSceneCanvas","ratio","_drawCachedHitCanvas","cachedCanvas","imageData","filters","sceneCanvas","filterCanvas","filterContext","evtStr","handler","_delegate","event","baseEvent","events","off","_off","dispatchEvent","evt","fire","addEventListener","removeEventListener","stopNode","targets","findAncestors","currentTarget","remove","getParent","_setChildrenIndices","destroy","getId","getName","getAncestors","ancestors","getAttrs","isListening","_isListening","listening","getListening","isVisible","_isVisible","visible","getVisible","shouldDrawHit","layer","getLayer","hitGraphEnabled","show","setVisible","getZIndex","getAbsoluteZIndex","addChildren","getDepth","depth","getStage","setPosition","pos","setX","setY","getPosition","getX","getY","getAbsolutePosition","absoluteMatrix","getAbsoluteTransform","absoluteTransform","origTrans","_clearTransform","_setTransform","rotation","getRotation","getScaleX","getScaleY","offsetX","getOffsetX","offsetY","getOffsetY","skewX","getSkewX","skewY","getSkewY","move","change","changeX","changeY","_eachAncestorReverse","family","unshift","theta","setRotation","moveToTop","moveUp","moveDown","moveToBottom","setZIndex","zIndex","_getAbsoluteOpacity","getOpacity","newContainer","add","defaultValue","className","getClassName","toJSON","JSON","stringify","includeSelf","_isMatch","ancestor","findAncestor","sel","selectorArr","hasName","_get","_getStage","eventType","bubble","_fireAndBubble","_fire","_getAbsoluteTransform","transformsEnabled","at","_getAbsoluteScale","_getTransform","clone","allListeners","listener","blockAttr","stage","toImage","img","size","getSize","getType","getDragDistance","evtName","evtListeners","newVal","setId","oldId","setName","subname","oldNames","newNames","addName","oldName","newName","removeName","_setComponentAttr","compareShape","okayToRun","isAncestorOf","stopBubble","cancelBubble","draw","container","parse","_createNode","rotateDeg","setRotationDeg","getRotationDeg","Grayscale","brightness","Brighten","Invert","BlurStack","filterGaussBlurRGBA","radius","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stack","stackIn","stackOut","mul_sum","mul_table","shg_sum","shg_table","Blur","blurRadius","pixelAt","idata","idx","rgbDistance","rgbMean","pTab","backgroundMask","threshold","rgbv_no","rgbv_ne","rgbv_so","rgbv_se","thres","mean","mask","applyMask","erodeMask","sw","sh","weights","side","halfSide","maskResult","so","cy","cx","scy","scx","srcOff","wt","dilateMask","smoothEdgeMask","Mask","RGB","nPixels","RGBA","ia","HSV","saturation","h","abs","hue","vsu","vsw","rr","rg","rb","gr","gg","gb","br","bg","bb","HSL","luminance","Emboss","strength","embossStrength","greyLevel","embossWhiteLevel","direction","embossDirection","blend","embossBlend","dirY","dirX","w4","otherY","offsetYOther","otherX","offsetOther","dR","dG","dB","dif","absDif","absG","absB","remap","fromValue","fromMin","fromMax","toMin","toMax","toValue","fromRange","toRange","Enhance","nSubPixels","rMin","rMax","gMin","gMax","bMin","bMax","enhanceAmount","enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","Posterize","levels","Noise","amount","noise","half","Pixelate","xBinStart","xBinEnd","yBinStart","yBinEnd","xBin","yBin","pixelsInBin","pixelSize","nBinsX","nBinsY","Threshold","level","Sepia","or","og","ob","Solarize","ToPolar","dst","opt","srcPixels","dstPixels","xSize","ySize","xMid","polarCenterX","yMid","polarCenterY","rSize","tSize","conversion","FromPolar","phaseShift","polarRotation","atan2","tempCanvas","Kaleidoscope","xoff","srcPos","dstPos","power","kaleidoscopePower","kaleidoscopeAngle","scratchData","minSectionSize","sectionSize","xStart","xEnd","xDelta","Container","__init","filterFunc","results","hasChildren","removeChildren","destroyChildren","_validateAdd","anim","setLayers","clen","_getNodeById","_getNodesByName","findOne","_getDescendants","getAllIntersections","intersects","can","caching","_applyTransform","_drawChildren","clearHitCache","drawMethod","skipBuffer","clipX","clipY","clipWidth","getClipWidth","clipHeight","getClipHeight","clipFunc","getClipFunc","hasClip","getClipX","getClipY","layerUnderDrag","getLayers","skipTransform","selfRect","_clearHasShadowCache","HAS_SHADOW","_clearGetShadowRGBACache","SHADOW_RGBA","Shape","hasShadow","_hasShadow","getShadowEnabled","getShadowOpacity","getShadowColor","getShadowOffsetX","getShadowOffsetY","_getShadowRGBA","rgba","shadowColor","hasFill","getFill","bufferHitCanvas","_useBufferCanvas","perfectDrawEnabled","getSelfRect","_centroid","fillAndStrokeWidth","fillAndStrokeHeight","shadowOffsetX","shadowOffsetY","preWidth","preHeight","shadowBlur","roundingOffset","bufferCanvas","bufferContext","drawFunc","sceneFunc","hitFunc","drawHitFromCache","alphaThreshold","hitImageData","hitData","rgbColorKey","hitWidth","hitHeight","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc","addEvent","eventName","content","UNDERSCORE","STRING","PX","MOUSEOUT","MOUSEOVER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","CLICK","DBL_CLICK","TOUCHSTART","TOUCHEND","TAP","DBL_TAP","TOUCHMOVE","DOMMOUSESCROLL","MOUSEWHEEL","WHEEL","CONTENT_MOUSEOUT","CONTENT_MOUSEOVER","CONTENT_MOUSEMOVE","CONTENT_MOUSEDOWN","CONTENT_MOUSEUP","CONTENT_CLICK","CONTENT_DBL_CLICK","CONTENT_TOUCHSTART","CONTENT_TOUCHEND","CONTENT_DBL_TAP","CONTENT_TAP","CONTENT_TOUCHMOVE","CONTENT_WHEEL","DIV","RELATIVE","KONVA_CONTENT","CONTAINER","EVENTS","eventsLength","Stage","___init","_buildDOM","_bindContentEvents","_enableNestedTransforms","setContainer","getElementsByClassName","getElementById","_resizeDOM","layers","getContainer","removeChild","getPointerPosition","pointerPos","getContent","cb","dataUrl","getIntersection","_setCanvasSize","appendChild","_mouseover","_setPointerPosition","_mouseout","targetShape","_mousemove","_touchmove","movementX","movementY","preventDefault","_mousedown","_touchstart","clickStartShape","_mouseup","_touchend","fireDblClick","justDragged","tapStartShape","_DOMMouseScroll","_mousewheel","_wheel","contentPosition","_getContentPosition","touches","touch","clientX","clientY","getBoundingClientRect","innerHTML","setAttribute","_onContent","typesStr","types","BaseLayer","createPNGStream","getHitCanvas","_hitImageData","insertBefore","moved","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","INTERSECTION_OFFSETS_LEN","Layer","____init","intersectionOffset","spiralSearchDistance","continueSearch","_getIntersection","antialiased","_getImageData","p3","getClearBeforeDraw","display","enableHitGraph","setHitGraphEnabled","disableHitGraph","FastLayer","Group","FRAF","requestAnimFrame","RAF","performance","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Animation","Anim","animIdCounter","frame","time","timeDiff","lastTime","lays","addLayer","isRunning","animations","stop","_addAnimation","_removeAnimation","_updateFrameObject","frameRate","animRunning","_handleAnimation","_runFrames","layersLen","needRedraw","layerHash","_animationLoop","batchDraw","batchAnim","lastBatchDrawTime","blacklist","duration","easing","onFinish","yoyo","PAUSED","PLAYING","REVERSING","colorAttrs","Tween","propFunc","finish","_pos","_change","prevPos","_time","_position","_startTime","_finish","pause","setTime","play","update","state","getTimer","onEnterFrame","seek","nodeId","Easings","Linear","tween","_tweenFunc","_addListeners","tweens","_addAttr","onReset","diff","tweenId","trueEnd","trueStart","closed","endRGBA","onPlay","onReverse","onPause","thisId","to","params","BackEaseIn","BackEaseOut","BackEaseInOut","ElasticEaseIn","asin","ElasticEaseOut","ElasticEaseInOut","BounceEaseOut","BounceEaseIn","BounceEaseInOut","EaseIn","EaseOut","EaseInOut","StrongEaseIn","StrongEaseOut","StrongEaseInOut","dirty","_drag","distance","startPointerPos","_setDragPosition","_endDragBefore","dragEndNode","_endDragAfter","startDrag","ap","stopDrag","dbf","getDragBoundFunc","newNodePos","_lastPos","setDraggable","draggable","_dragChange","origDestroy","_listenDrag","_dragCleanup","button","html","documentElement","Rect","_sceneFunc","cornerRadius","getCornerRadius","PIx2","CIRCLE","Circle","getRadius","setRadius","ELLIPSE","Ellipse","rx","getRadiusX","ry","getRadiusY","Ring","getInnerRadius","getOuterRadius","outerRadius","setOuterRadius","Wedge","getClockwise","getAngleDeg","setAngleDeg","Arc","clockwise","IMAGE","_hitFunc","cropWidth","cropHeight","image","getImage","getCropWidth","getCropHeight","getCropX","getCropY","fromURL","url","partialText","AUTO","CENTER","CHANGE_KONVA","DASH","LEFT","TEXT","TEXT_UPPER","MIDDLE","NORMAL","PX_SPACE","RIGHT","WORD","CHAR","NONE","ATTR_CHANGE_LIST","attrChangeListLen","dummyContext","fillLinearGradientColorStops","fillRadialGradientColorStops","_setTextData","getPadding","textHeight","getTextHeight","lineHeightPx","getLineHeight","textArr","textArrLen","totalWidth","_getContextFont","getAlign","setText","isAuto","getTextWidth","textWidth","_getTextSize","metrics","fontSize","getFontSize","font","getFontStyle","getFontFamily","getFontVariant","_addTextLine","_getTextWidth","lines","getText","fixedWidth","fixedHeight","maxWidth","maxHeightPx","currentHeightPx","wrap","getWrap","shouldWrap","wrapAtWord","lineWidth","low","high","matchWidth","mid","substrWidth","wrapIndex","Line","tp","getPoints","getTension","getClosed","getTensionPoints","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","Sprite","_updated","updated","frameIndex","clearInterval","interval","_setInterval","getAnimation","ix4","getAnimations","offsets","frameOffsets","ix2","setInterval","_updateIndex","getFrameRate","animation","getIndex","setIndex","Path","dataArray","parsePathData","getData","ca","command","dTheta","psi","fs","getLineLength","getPointOnLine","P1x","P1y","P2x","P2y","fromX","fromY","run","rise","ix","iy","pRise","pRun","getPointOnCubicBezier","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","getPointOnQuadraticBezier","QB1","QB2","QB3","getPointOnEllipticalArc","cosPsi","sinPsi","cs","cc","RegExp","cpx","cpy","parseFloat","prevCmd","ctlPtx","ctlPty","cmd","startX","startY","convertEndpointToCenterParameterization","pathLength","calcLength","path","inc","psiDeg","xp","lambda","cxp","cyp","vMag","vRatio","vAngle","acos","TextPath","dummyCanvas","getTextBaseline","glyphInfo","p0","letterSpacing","getLetterSpacing","pathCmd","charArr","pIndex","currentT","getNextPathSegment","pathData","j","findSegmentToFitCharacter","glyphWidth","currLen","attempts","cumulativePathLength","needNewSegment","kern","midpoint","transposeX","transposeY","info","RegularPolygon","sides","Star","innerRadius","numPoints","UP","DOWN","LABEL","Label","_sync","getTag","pointerDirection","pointerWidth","pointerHeight","getPointerDirection","getPointerWidth","getPointerHeight","Tag","Arrow","PI2","radians","pointerLength","pointerAtBeginning","Constructor","forbiddenField","dPs","enumBugKeys","Empty","createDict","iframeDocument","iframe","lt","gt","contentWindow","open","write","close","Properties","$keys","hiddenKeys","getOwnPropertyNames","DESCRIPTORS","SPECIES","UNSCOPABLES","BREAK","RETURN","iterable","stat","spaces","space","non","ltrim","rtrim","exporter","ALIAS","FORCE","trim","cof","ARG","tryGet","T","callee","propertyIsEnumerable","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_konva","Screen","_Label","textColor","backgroundColor","_this","opacity","log","fontFamily","IS_INCLUDES","fromIndex","forOf","setToStringTag","inheritIfRequired","common","IS_WEAK","ADDER","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","getConstructor","setStrong","SYMBOL","fns","strfn","rxfn","ignoreCase","multiline","unicode","sticky","un","MATCH","isRegExp","SAFE_CLOSING","riter","skipClosing","K","__defineSetter__","getOwnPropertySymbols","SHARED","Typed","TypedArrayConstructors","endPos","$defineProperty","is","re","isArray","descriptor","IteratorPrototype","$iterCreate","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","DEFAULT","IS_SET","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","$expm1","expm1","sign","macrotask","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","head","last","notify","flush","domain","exit","enter","nextTick","toggle","createTextNode","observe","characterData","resolve","promise","then","task","check","buggy","D","charCodeAt","searchString","count","Infinity","defer","channel","port","invoke","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","port2","port1","onmessage","postMessage","importScripts","DATA_VIEW","WRONG_INDEX","BaseBuffer","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","numIndex","intIndex","_b","pack","validateArrayBufferArguments","numberLength","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","wksExt","$Symbol","getIteratorMethod","addToUnscopables","iterated","_t","_i","_k","Arguments","_interopRequireDefault","__esModule","default","_createClass","defineProperties","props","protoProps","staticProps","_Wire","_Wire2","Input","_Circle","used","connectInput","connecting","mouseOverHandler","mouseOutHandler","dblClickHandler","input","wire","pointer","startPointer","bind","updatePointer","connectPointer","disconnect","connected","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getElements","connect","msg","memo","isRight","factories","construct","partArgs","bound","$iterDefine","SIZE","getEntry","entry","_f","k","_l","delete","prev","$has","uncaughtFrozenStore","UncaughtFrozenStore","findUncaughtFrozen","ufstore","isFinite","log1p","getKeys","gOPS","$assign","assign","A","getSymbols","isEnum","windowNames","getWindowNames","isEntries","Reflect","ownKeys","$parseFloat","$trim","$parseInt","ws","radix","repeat","maxLength","fillString","stringLength","fillStr","intMaxLength","fillLen","stringFiller","strong","flags","InternalMap","weak","tmp","$WeakMap","freeze","Capacity","_Rect","inputs","addElements","Inductivity","_Screen","_Screen2","Regulator","states","label","stateId","curState","spining","spinRight","spinLeft","_Input","_Input2","Resistor","resistance","tooltip","Stand","_Layer","querySelector","offsetWidth","offsetHeight","elements","element","Wire","_Line","stokeWidth","changeStand","standBuilder","isDirty","selectId","LabList","selectedIndex","labId","selectedLab","labs","build","_standBuilder","_standBuilder2","Lab_1","Lab_2","sendBtn","input_1_id","input_2_id","$","ajax","xhrFields","withCredentials","crossDomain","contentType","alert","_Stand","_Stand2","_Regulator","_Regulator2","_Resistor","_Resistor2","_Inductivity","_Capacity","StandBuilder","stand","standJSON","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","define","DEFINE_PROPERTY","_babelPolyfill","padStart","padEnd","escape","original","NUMBER","hint","symbols","pargs","holder","regExp","replacer","part","$re","$every","$filter","$find","forced","$forEach","STRICT","createProperty","$indexOf","NEGATIVE_ZERO","$reduce","upTo","cloned","$some","$sort","lz","num","toISOString","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","pv","TO_PRIMITIVE","DateProto","INVALID_DATE","HAS_INSTANCE","FunctionProto","FProto","nameRE","$acosh","acosh","asinh","$asinh","$atanh","atanh","cbrt","clz32","LOG2E","cosh","EPSILON","EPSILON32","MAX32","MIN32","roundTiesToEven","fround","$abs","$sign","hypot","value1","value2","sum","larg","$imul","imul","UINT16","xn","yn","xl","yl","log10","LN10","log2","sinh","E","tanh","trunc","$Number","BROKEN_COF","TRIM","toNumber","argument","third","maxCode","first","code","digits","_isFinite","isInteger","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","aNumberValue","$toFixed","toFixed","ERROR","c2","divide","numToString","acc","fractionDigits","z","$fails","$toPrecision","toPrecision","precision","$freeze","$getOwnPropertyDescriptor","$getPrototypeOf","$isExtensible","$isFrozen","$isSealed","$preventExtensions","$seal","Internal","GenericPromiseCapability","Wrapper","microtask","PROMISE","$Promise","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","isReject","_n","chain","_c","_v","ok","_s","reaction","fail","_h","onHandleUnhandled","onUnhandled","abrupt","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","catch","capability","all","$index","alreadyCalled","race","rApply","fApply","thisArgument","argumentsList","L","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","propertyKey","attributes","deleteProperty","Enumerate","enumerate","getProto","receiver","setProto","V","existingDescriptor","ownDesc","$flags","$RegExp","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","proxy","$match","regexp","REPLACE","$replace","searchValue","replaceValue","SEARCH","$search","SPLIT","$split","_split","$push","$SPLIT","LENGTH","LAST_INDEX","NPCG","limit","separator2","lastIndex","lastLength","output","lastLastIndex","splitLimit","separatorCopy","$at","codePointAt","ENDS_WITH","$endsWith","endsWith","endPosition","search","fromCharCode","$fromCodePoint","fromCodePoint","INCLUDES","raw","callSite","tpl","STARTS_WITH","$startsWith","startsWith","wksDefine","keyOf","enumKeys","_create","gOPNExt","$JSON","_stringify","HIDDEN","SymbolRegistry","AllSymbols","OPSymbols","QObject","findChild","setSymbolDesc","protoDesc","sym","isSymbol","$defineProperties","$propertyIsEnumerable","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","for","keyFor","useSetter","useSimple","$replacer","$isView","isView","final","viewS","viewT","$includes","asap","isError","iaddh","$x0","$x1","$y0","imulh","$u","$v","u0","v0","u1","v1","isubh","umulh","__defineGetter__","getOwnPropertyDescriptors","getDesc","__lookupGetter__","__lookupSetter__","$values","OBSERVABLE","cleanupSubscription","subscription","cleanup","subscriptionClosed","_o","closeSubscription","Subscription","observer","subscriber","SubscriptionObserver","unsubscribe","complete","$Observable","subscribe","observable","items","Observable","metadata","defineMetadata","metadataKey","metadataValue","deleteMetadata","Set","ordinaryMetadataKeys","oKeys","pKeys","getMetadataKeys","ordinaryGetMetadata","hasOwn","getMetadata","getOwnMetadataKeys","getOwnMetadata","ordinaryHasMetadata","hasMetadata","hasOwnMetadata","getFlags","RegExpProto","$RegExpStringIterator","_r","matchAll","$pad","TO_STRING_TAG","ArrayValues","collections","$task","partial","MSIE","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","array","noop","title","env","argv","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask","innerFn","outerFn","tryLocsList","generator","Generator","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AwaitArgument","AsyncIterator","record","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","returnMethod","GenStateSuspendedYield","resultName","nextLoc","sent","_sent","dispatchException","ContinueSentinel","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","iteratorSymbol","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","Gp","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","pop","skipTempReset","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(123);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(3)\n\t  , core      = __webpack_require__(25)\n\t  , hide      = __webpack_require__(13)\n\t  , redefine  = __webpack_require__(14)\n\t  , ctx       = __webpack_require__(26)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n\t    , key, own, out, exp;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // extend global\n\t    if(target)redefine(target, key, out, type & $export.U);\n\t    // export\n\t    if(exports[key] != out)hide(exports, key, exp);\n\t    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n\t  }\n\t};\n\tglobal.core = core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(5);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar store      = __webpack_require__(60)('wks')\n\t  , uid        = __webpack_require__(41)\n\t  , Symbol     = __webpack_require__(3).Symbol\n\t  , USE_SYMBOL = typeof Symbol == 'function';\n\t\n\tvar $exports = module.exports = function(name){\n\t  return store[name] || (store[name] =\n\t    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n\t};\n\t\n\t$exports.store = store;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(4)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(2)\n\t  , IE8_DOM_DEFINE = __webpack_require__(97)\n\t  , toPrimitive    = __webpack_require__(24)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(7) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(31)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(20);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(8)\n\t  , createDesc = __webpack_require__(30);\n\tmodule.exports = __webpack_require__(7) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(3)\n\t  , hide      = __webpack_require__(13)\n\t  , has       = __webpack_require__(11)\n\t  , SRC       = __webpack_require__(41)('src')\n\t  , TO_STRING = 'toString'\n\t  , $toString = Function[TO_STRING]\n\t  , TPL       = ('' + $toString).split(TO_STRING);\n\t\n\t__webpack_require__(25).inspectSource = function(it){\n\t  return $toString.call(it);\n\t};\n\t\n\t(module.exports = function(O, key, val, safe){\n\t  var isFunction = typeof val == 'function';\n\t  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n\t  if(O[key] === val)return;\n\t  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\t  if(O === global){\n\t    O[key] = val;\n\t  } else {\n\t    if(!safe){\n\t      delete O[key];\n\t      hide(O, key, val);\n\t    } else {\n\t      if(O[key])O[key] = val;\n\t      else hide(O, key, val);\n\t    }\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString(){\n\t  return typeof this == 'function' && this[SRC] || $toString.call(this);\n\t});\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1)\n\t  , fails   = __webpack_require__(4)\n\t  , defined = __webpack_require__(20)\n\t  , quot    = /\"/g;\n\t// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\n\tvar createHTML = function(string, tag, attribute, value) {\n\t  var S  = String(defined(string))\n\t    , p1 = '<' + tag;\n\t  if(attribute !== '')p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n\t  return p1 + '>' + S + '</' + tag + '>';\n\t};\n\tmodule.exports = function(NAME, exec){\n\t  var O = {};\n\t  O[NAME] = exec(createHTML);\n\t  $export($export.P + $export.F * fails(function(){\n\t    var test = ''[NAME]('\"');\n\t    return test !== test.toLowerCase() || test.split('\"').length > 3;\n\t  }), 'String', O);\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(48)\n\t  , defined = __webpack_require__(20);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pIE            = __webpack_require__(49)\n\t  , createDesc     = __webpack_require__(30)\n\t  , toIObject      = __webpack_require__(16)\n\t  , toPrimitive    = __webpack_require__(24)\n\t  , has            = __webpack_require__(11)\n\t  , IE8_DOM_DEFINE = __webpack_require__(97)\n\t  , gOPD           = Object.getOwnPropertyDescriptor;\n\t\n\texports.f = __webpack_require__(7) ? gOPD : function getOwnPropertyDescriptor(O, P){\n\t  O = toIObject(O);\n\t  P = toPrimitive(P, true);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return gOPD(O, P);\n\t  } catch(e){ /* empty */ }\n\t  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\tvar has         = __webpack_require__(11)\n\t  , toObject    = __webpack_require__(10)\n\t  , IE_PROTO    = __webpack_require__(77)('IE_PROTO')\n\t  , ObjectProto = Object.prototype;\n\t\n\tmodule.exports = Object.getPrototypeOf || function(O){\n\t  O = toObject(O);\n\t  if(has(O, IE_PROTO))return O[IE_PROTO];\n\t  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n\t    return O.constructor.prototype;\n\t  } return O instanceof Object ? ObjectProto : null;\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fails = __webpack_require__(4);\n\t\n\tmodule.exports = function(method, arg){\n\t  return !!method && fails(function(){\n\t    arg ? method.call(null, function(){}, 1) : method.call(null);\n\t  });\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 0 -> Array#forEach\n\t// 1 -> Array#map\n\t// 2 -> Array#filter\n\t// 3 -> Array#some\n\t// 4 -> Array#every\n\t// 5 -> Array#find\n\t// 6 -> Array#findIndex\n\tvar ctx      = __webpack_require__(26)\n\t  , IObject  = __webpack_require__(48)\n\t  , toObject = __webpack_require__(10)\n\t  , toLength = __webpack_require__(9)\n\t  , asc      = __webpack_require__(128);\n\tmodule.exports = function(TYPE, $create){\n\t  var IS_MAP        = TYPE == 1\n\t    , IS_FILTER     = TYPE == 2\n\t    , IS_SOME       = TYPE == 3\n\t    , IS_EVERY      = TYPE == 4\n\t    , IS_FIND_INDEX = TYPE == 6\n\t    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n\t    , create        = $create || asc;\n\t  return function($this, callbackfn, that){\n\t    var O      = toObject($this)\n\t      , self   = IObject(O)\n\t      , f      = ctx(callbackfn, that, 3)\n\t      , length = toLength(self.length)\n\t      , index  = 0\n\t      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n\t      , val, res;\n\t    for(;length > index; index++)if(NO_HOLES || index in self){\n\t      val = self[index];\n\t      res = f(val, index, O);\n\t      if(TYPE){\n\t        if(IS_MAP)result[index] = res;            // map\n\t        else if(res)switch(TYPE){\n\t          case 3: return true;                    // some\n\t          case 5: return val;                     // find\n\t          case 6: return index;                   // findIndex\n\t          case 2: result.push(val);               // filter\n\t        } else if(IS_EVERY)return false;          // every\n\t      }\n\t    }\n\t    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n\t  };\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(1)\n\t  , core    = __webpack_require__(25)\n\t  , fails   = __webpack_require__(4);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(5);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(12);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Map     = __webpack_require__(113)\n\t  , $export = __webpack_require__(1)\n\t  , shared  = __webpack_require__(60)('metadata')\n\t  , store   = shared.store || (shared.store = new (__webpack_require__(116)));\n\t\n\tvar getOrCreateMetadataMap = function(target, targetKey, create){\n\t  var targetMetadata = store.get(target);\n\t  if(!targetMetadata){\n\t    if(!create)return undefined;\n\t    store.set(target, targetMetadata = new Map);\n\t  }\n\t  var keyMetadata = targetMetadata.get(targetKey);\n\t  if(!keyMetadata){\n\t    if(!create)return undefined;\n\t    targetMetadata.set(targetKey, keyMetadata = new Map);\n\t  } return keyMetadata;\n\t};\n\tvar ordinaryHasOwnMetadata = function(MetadataKey, O, P){\n\t  var metadataMap = getOrCreateMetadataMap(O, P, false);\n\t  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n\t};\n\tvar ordinaryGetOwnMetadata = function(MetadataKey, O, P){\n\t  var metadataMap = getOrCreateMetadataMap(O, P, false);\n\t  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n\t};\n\tvar ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){\n\t  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n\t};\n\tvar ordinaryOwnMetadataKeys = function(target, targetKey){\n\t  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)\n\t    , keys        = [];\n\t  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });\n\t  return keys;\n\t};\n\tvar toMetaKey = function(it){\n\t  return it === undefined || typeof it == 'symbol' ? it : String(it);\n\t};\n\tvar exp = function(O){\n\t  $export($export.S, 'Reflect', O);\n\t};\n\t\n\tmodule.exports = {\n\t  store: store,\n\t  map: getOrCreateMetadataMap,\n\t  has: ordinaryHasOwnMetadata,\n\t  get: ordinaryGetOwnMetadata,\n\t  set: ordinaryDefineOwnMetadata,\n\t  keys: ordinaryOwnMetadataKeys,\n\t  key: toMetaKey,\n\t  exp: exp\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tif(__webpack_require__(7)){\n\t  var LIBRARY             = __webpack_require__(34)\n\t    , global              = __webpack_require__(3)\n\t    , fails               = __webpack_require__(4)\n\t    , $export             = __webpack_require__(1)\n\t    , $typed              = __webpack_require__(61)\n\t    , $buffer             = __webpack_require__(84)\n\t    , ctx                 = __webpack_require__(26)\n\t    , anInstance          = __webpack_require__(33)\n\t    , propertyDesc        = __webpack_require__(30)\n\t    , hide                = __webpack_require__(13)\n\t    , redefineAll         = __webpack_require__(38)\n\t    , toInteger           = __webpack_require__(31)\n\t    , toLength            = __webpack_require__(9)\n\t    , toIndex             = __webpack_require__(40)\n\t    , toPrimitive         = __webpack_require__(24)\n\t    , has                 = __webpack_require__(11)\n\t    , same                = __webpack_require__(110)\n\t    , classof             = __webpack_require__(47)\n\t    , isObject            = __webpack_require__(5)\n\t    , toObject            = __webpack_require__(10)\n\t    , isArrayIter         = __webpack_require__(69)\n\t    , create              = __webpack_require__(35)\n\t    , getPrototypeOf      = __webpack_require__(18)\n\t    , gOPN                = __webpack_require__(36).f\n\t    , getIterFn           = __webpack_require__(86)\n\t    , uid                 = __webpack_require__(41)\n\t    , wks                 = __webpack_require__(6)\n\t    , createArrayMethod   = __webpack_require__(22)\n\t    , createArrayIncludes = __webpack_require__(51)\n\t    , speciesConstructor  = __webpack_require__(78)\n\t    , ArrayIterators      = __webpack_require__(87)\n\t    , Iterators           = __webpack_require__(44)\n\t    , $iterDetect         = __webpack_require__(57)\n\t    , setSpecies          = __webpack_require__(39)\n\t    , arrayFill           = __webpack_require__(62)\n\t    , arrayCopyWithin     = __webpack_require__(90)\n\t    , $DP                 = __webpack_require__(8)\n\t    , $GOPD               = __webpack_require__(17)\n\t    , dP                  = $DP.f\n\t    , gOPD                = $GOPD.f\n\t    , RangeError          = global.RangeError\n\t    , TypeError           = global.TypeError\n\t    , Uint8Array          = global.Uint8Array\n\t    , ARRAY_BUFFER        = 'ArrayBuffer'\n\t    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER\n\t    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'\n\t    , PROTOTYPE           = 'prototype'\n\t    , ArrayProto          = Array[PROTOTYPE]\n\t    , $ArrayBuffer        = $buffer.ArrayBuffer\n\t    , $DataView           = $buffer.DataView\n\t    , arrayForEach        = createArrayMethod(0)\n\t    , arrayFilter         = createArrayMethod(2)\n\t    , arraySome           = createArrayMethod(3)\n\t    , arrayEvery          = createArrayMethod(4)\n\t    , arrayFind           = createArrayMethod(5)\n\t    , arrayFindIndex      = createArrayMethod(6)\n\t    , arrayIncludes       = createArrayIncludes(true)\n\t    , arrayIndexOf        = createArrayIncludes(false)\n\t    , arrayValues         = ArrayIterators.values\n\t    , arrayKeys           = ArrayIterators.keys\n\t    , arrayEntries        = ArrayIterators.entries\n\t    , arrayLastIndexOf    = ArrayProto.lastIndexOf\n\t    , arrayReduce         = ArrayProto.reduce\n\t    , arrayReduceRight    = ArrayProto.reduceRight\n\t    , arrayJoin           = ArrayProto.join\n\t    , arraySort           = ArrayProto.sort\n\t    , arraySlice          = ArrayProto.slice\n\t    , arrayToString       = ArrayProto.toString\n\t    , arrayToLocaleString = ArrayProto.toLocaleString\n\t    , ITERATOR            = wks('iterator')\n\t    , TAG                 = wks('toStringTag')\n\t    , TYPED_CONSTRUCTOR   = uid('typed_constructor')\n\t    , DEF_CONSTRUCTOR     = uid('def_constructor')\n\t    , ALL_CONSTRUCTORS    = $typed.CONSTR\n\t    , TYPED_ARRAY         = $typed.TYPED\n\t    , VIEW                = $typed.VIEW\n\t    , WRONG_LENGTH        = 'Wrong length!';\n\t\n\t  var $map = createArrayMethod(1, function(O, length){\n\t    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n\t  });\n\t\n\t  var LITTLE_ENDIAN = fails(function(){\n\t    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n\t  });\n\t\n\t  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){\n\t    new Uint8Array(1).set({});\n\t  });\n\t\n\t  var strictToLength = function(it, SAME){\n\t    if(it === undefined)throw TypeError(WRONG_LENGTH);\n\t    var number = +it\n\t      , length = toLength(it);\n\t    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);\n\t    return length;\n\t  };\n\t\n\t  var toOffset = function(it, BYTES){\n\t    var offset = toInteger(it);\n\t    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');\n\t    return offset;\n\t  };\n\t\n\t  var validate = function(it){\n\t    if(isObject(it) && TYPED_ARRAY in it)return it;\n\t    throw TypeError(it + ' is not a typed array!');\n\t  };\n\t\n\t  var allocate = function(C, length){\n\t    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){\n\t      throw TypeError('It is not a typed array constructor!');\n\t    } return new C(length);\n\t  };\n\t\n\t  var speciesFromList = function(O, list){\n\t    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n\t  };\n\t\n\t  var fromList = function(C, list){\n\t    var index  = 0\n\t      , length = list.length\n\t      , result = allocate(C, length);\n\t    while(length > index)result[index] = list[index++];\n\t    return result;\n\t  };\n\t\n\t  var addGetter = function(it, key, internal){\n\t    dP(it, key, {get: function(){ return this._d[internal]; }});\n\t  };\n\t\n\t  var $from = function from(source /*, mapfn, thisArg */){\n\t    var O       = toObject(source)\n\t      , aLen    = arguments.length\n\t      , mapfn   = aLen > 1 ? arguments[1] : undefined\n\t      , mapping = mapfn !== undefined\n\t      , iterFn  = getIterFn(O)\n\t      , i, length, values, result, step, iterator;\n\t    if(iterFn != undefined && !isArrayIter(iterFn)){\n\t      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){\n\t        values.push(step.value);\n\t      } O = values;\n\t    }\n\t    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);\n\t    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){\n\t      result[i] = mapping ? mapfn(O[i], i) : O[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  var $of = function of(/*...items*/){\n\t    var index  = 0\n\t      , length = arguments.length\n\t      , result = allocate(this, length);\n\t    while(length > index)result[index] = arguments[index++];\n\t    return result;\n\t  };\n\t\n\t  // iOS Safari 6.x fails here\n\t  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });\n\t\n\t  var $toLocaleString = function toLocaleString(){\n\t    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n\t  };\n\t\n\t  var proto = {\n\t    copyWithin: function copyWithin(target, start /*, end */){\n\t      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    every: function every(callbackfn /*, thisArg */){\n\t      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars\n\t      return arrayFill.apply(validate(this), arguments);\n\t    },\n\t    filter: function filter(callbackfn /*, thisArg */){\n\t      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n\t        arguments.length > 1 ? arguments[1] : undefined));\n\t    },\n\t    find: function find(predicate /*, thisArg */){\n\t      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    findIndex: function findIndex(predicate /*, thisArg */){\n\t      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    forEach: function forEach(callbackfn /*, thisArg */){\n\t      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    indexOf: function indexOf(searchElement /*, fromIndex */){\n\t      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    includes: function includes(searchElement /*, fromIndex */){\n\t      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    join: function join(separator){ // eslint-disable-line no-unused-vars\n\t      return arrayJoin.apply(validate(this), arguments);\n\t    },\n\t    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars\n\t      return arrayLastIndexOf.apply(validate(this), arguments);\n\t    },\n\t    map: function map(mapfn /*, thisArg */){\n\t      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n\t      return arrayReduce.apply(validate(this), arguments);\n\t    },\n\t    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n\t      return arrayReduceRight.apply(validate(this), arguments);\n\t    },\n\t    reverse: function reverse(){\n\t      var that   = this\n\t        , length = validate(that).length\n\t        , middle = Math.floor(length / 2)\n\t        , index  = 0\n\t        , value;\n\t      while(index < middle){\n\t        value         = that[index];\n\t        that[index++] = that[--length];\n\t        that[length]  = value;\n\t      } return that;\n\t    },\n\t    some: function some(callbackfn /*, thisArg */){\n\t      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    sort: function sort(comparefn){\n\t      return arraySort.call(validate(this), comparefn);\n\t    },\n\t    subarray: function subarray(begin, end){\n\t      var O      = validate(this)\n\t        , length = O.length\n\t        , $begin = toIndex(begin, length);\n\t      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n\t        O.buffer,\n\t        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n\t        toLength((end === undefined ? length : toIndex(end, length)) - $begin)\n\t      );\n\t    }\n\t  };\n\t\n\t  var $slice = function slice(start, end){\n\t    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n\t  };\n\t\n\t  var $set = function set(arrayLike /*, offset */){\n\t    validate(this);\n\t    var offset = toOffset(arguments[1], 1)\n\t      , length = this.length\n\t      , src    = toObject(arrayLike)\n\t      , len    = toLength(src.length)\n\t      , index  = 0;\n\t    if(len + offset > length)throw RangeError(WRONG_LENGTH);\n\t    while(index < len)this[offset + index] = src[index++];\n\t  };\n\t\n\t  var $iterators = {\n\t    entries: function entries(){\n\t      return arrayEntries.call(validate(this));\n\t    },\n\t    keys: function keys(){\n\t      return arrayKeys.call(validate(this));\n\t    },\n\t    values: function values(){\n\t      return arrayValues.call(validate(this));\n\t    }\n\t  };\n\t\n\t  var isTAIndex = function(target, key){\n\t    return isObject(target)\n\t      && target[TYPED_ARRAY]\n\t      && typeof key != 'symbol'\n\t      && key in target\n\t      && String(+key) == String(key);\n\t  };\n\t  var $getDesc = function getOwnPropertyDescriptor(target, key){\n\t    return isTAIndex(target, key = toPrimitive(key, true))\n\t      ? propertyDesc(2, target[key])\n\t      : gOPD(target, key);\n\t  };\n\t  var $setDesc = function defineProperty(target, key, desc){\n\t    if(isTAIndex(target, key = toPrimitive(key, true))\n\t      && isObject(desc)\n\t      && has(desc, 'value')\n\t      && !has(desc, 'get')\n\t      && !has(desc, 'set')\n\t      // TODO: add validation descriptor w/o calling accessors\n\t      && !desc.configurable\n\t      && (!has(desc, 'writable') || desc.writable)\n\t      && (!has(desc, 'enumerable') || desc.enumerable)\n\t    ){\n\t      target[key] = desc.value;\n\t      return target;\n\t    } else return dP(target, key, desc);\n\t  };\n\t\n\t  if(!ALL_CONSTRUCTORS){\n\t    $GOPD.f = $getDesc;\n\t    $DP.f   = $setDesc;\n\t  }\n\t\n\t  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n\t    getOwnPropertyDescriptor: $getDesc,\n\t    defineProperty:           $setDesc\n\t  });\n\t\n\t  if(fails(function(){ arrayToString.call({}); })){\n\t    arrayToString = arrayToLocaleString = function toString(){\n\t      return arrayJoin.call(this);\n\t    }\n\t  }\n\t\n\t  var $TypedArrayPrototype$ = redefineAll({}, proto);\n\t  redefineAll($TypedArrayPrototype$, $iterators);\n\t  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n\t  redefineAll($TypedArrayPrototype$, {\n\t    slice:          $slice,\n\t    set:            $set,\n\t    constructor:    function(){ /* noop */ },\n\t    toString:       arrayToString,\n\t    toLocaleString: $toLocaleString\n\t  });\n\t  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n\t  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n\t  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n\t  addGetter($TypedArrayPrototype$, 'length', 'e');\n\t  dP($TypedArrayPrototype$, TAG, {\n\t    get: function(){ return this[TYPED_ARRAY]; }\n\t  });\n\t\n\t  module.exports = function(KEY, BYTES, wrapper, CLAMPED){\n\t    CLAMPED = !!CLAMPED;\n\t    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'\n\t      , ISNT_UINT8 = NAME != 'Uint8Array'\n\t      , GETTER     = 'get' + KEY\n\t      , SETTER     = 'set' + KEY\n\t      , TypedArray = global[NAME]\n\t      , Base       = TypedArray || {}\n\t      , TAC        = TypedArray && getPrototypeOf(TypedArray)\n\t      , FORCED     = !TypedArray || !$typed.ABV\n\t      , O          = {}\n\t      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n\t    var getter = function(that, index){\n\t      var data = that._d;\n\t      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n\t    };\n\t    var setter = function(that, index, value){\n\t      var data = that._d;\n\t      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n\t      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n\t    };\n\t    var addElement = function(that, index){\n\t      dP(that, index, {\n\t        get: function(){\n\t          return getter(this, index);\n\t        },\n\t        set: function(value){\n\t          return setter(this, index, value);\n\t        },\n\t        enumerable: true\n\t      });\n\t    };\n\t    if(FORCED){\n\t      TypedArray = wrapper(function(that, data, $offset, $length){\n\t        anInstance(that, TypedArray, NAME, '_d');\n\t        var index  = 0\n\t          , offset = 0\n\t          , buffer, byteLength, length, klass;\n\t        if(!isObject(data)){\n\t          length     = strictToLength(data, true)\n\t          byteLength = length * BYTES;\n\t          buffer     = new $ArrayBuffer(byteLength);\n\t        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n\t          buffer = data;\n\t          offset = toOffset($offset, BYTES);\n\t          var $len = data.byteLength;\n\t          if($length === undefined){\n\t            if($len % BYTES)throw RangeError(WRONG_LENGTH);\n\t            byteLength = $len - offset;\n\t            if(byteLength < 0)throw RangeError(WRONG_LENGTH);\n\t          } else {\n\t            byteLength = toLength($length) * BYTES;\n\t            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);\n\t          }\n\t          length = byteLength / BYTES;\n\t        } else if(TYPED_ARRAY in data){\n\t          return fromList(TypedArray, data);\n\t        } else {\n\t          return $from.call(TypedArray, data);\n\t        }\n\t        hide(that, '_d', {\n\t          b: buffer,\n\t          o: offset,\n\t          l: byteLength,\n\t          e: length,\n\t          v: new $DataView(buffer)\n\t        });\n\t        while(index < length)addElement(that, index++);\n\t      });\n\t      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n\t      hide(TypedArrayPrototype, 'constructor', TypedArray);\n\t    } else if(!$iterDetect(function(iter){\n\t      // V8 works with iterators, but fails in many other cases\n\t      // https://code.google.com/p/v8/issues/detail?id=4552\n\t      new TypedArray(null); // eslint-disable-line no-new\n\t      new TypedArray(iter); // eslint-disable-line no-new\n\t    }, true)){\n\t      TypedArray = wrapper(function(that, data, $offset, $length){\n\t        anInstance(that, TypedArray, NAME);\n\t        var klass;\n\t        // `ws` module bug, temporarily remove validation length for Uint8Array\n\t        // https://github.com/websockets/ws/pull/645\n\t        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));\n\t        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n\t          return $length !== undefined\n\t            ? new Base(data, toOffset($offset, BYTES), $length)\n\t            : $offset !== undefined\n\t              ? new Base(data, toOffset($offset, BYTES))\n\t              : new Base(data);\n\t        }\n\t        if(TYPED_ARRAY in data)return fromList(TypedArray, data);\n\t        return $from.call(TypedArray, data);\n\t      });\n\t      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){\n\t        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);\n\t      });\n\t      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n\t      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;\n\t    }\n\t    var $nativeIterator   = TypedArrayPrototype[ITERATOR]\n\t      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)\n\t      , $iterator         = $iterators.values;\n\t    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n\t    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n\t    hide(TypedArrayPrototype, VIEW, true);\n\t    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\t\n\t    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){\n\t      dP(TypedArrayPrototype, TAG, {\n\t        get: function(){ return NAME; }\n\t      });\n\t    }\n\t\n\t    O[NAME] = TypedArray;\n\t\n\t    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\t\n\t    $export($export.S, NAME, {\n\t      BYTES_PER_ELEMENT: BYTES,\n\t      from: $from,\n\t      of: $of\n\t    });\n\t\n\t    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\t\n\t    $export($export.P, NAME, proto);\n\t\n\t    setSpecies(NAME);\n\t\n\t    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});\n\t\n\t    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\t\n\t    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});\n\t\n\t    $export($export.P + $export.F * fails(function(){\n\t      new TypedArray(1).slice();\n\t    }), NAME, {slice: $slice});\n\t\n\t    $export($export.P + $export.F * (fails(function(){\n\t      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()\n\t    }) || !fails(function(){\n\t      TypedArrayPrototype.toLocaleString.call([1, 2]);\n\t    })), NAME, {toLocaleString: $toLocaleString});\n\t\n\t    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n\t    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);\n\t  };\n\t} else module.exports = function(){ /* empty */ };\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar META     = __webpack_require__(41)('meta')\n\t  , isObject = __webpack_require__(5)\n\t  , has      = __webpack_require__(11)\n\t  , setDesc  = __webpack_require__(8).f\n\t  , id       = 0;\n\tvar isExtensible = Object.isExtensible || function(){\n\t  return true;\n\t};\n\tvar FREEZE = !__webpack_require__(4)(function(){\n\t  return isExtensible(Object.preventExtensions({}));\n\t});\n\tvar setMeta = function(it){\n\t  setDesc(it, META, {value: {\n\t    i: 'O' + ++id, // object ID\n\t    w: {}          // weak collections IDs\n\t  }});\n\t};\n\tvar fastKey = function(it, create){\n\t  // return primitive with prefix\n\t  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\t  if(!has(it, META)){\n\t    // can't set metadata to uncaught frozen object\n\t    if(!isExtensible(it))return 'F';\n\t    // not necessary to add metadata\n\t    if(!create)return 'E';\n\t    // add missing metadata\n\t    setMeta(it);\n\t  // return object ID\n\t  } return it[META].i;\n\t};\n\tvar getWeak = function(it, create){\n\t  if(!has(it, META)){\n\t    // can't set metadata to uncaught frozen object\n\t    if(!isExtensible(it))return true;\n\t    // not necessary to add metadata\n\t    if(!create)return false;\n\t    // add missing metadata\n\t    setMeta(it);\n\t  // return hash weak collections IDs\n\t  } return it[META].w;\n\t};\n\t// add metadata on freeze-family methods calling\n\tvar onFreeze = function(it){\n\t  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n\t  return it;\n\t};\n\tvar meta = module.exports = {\n\t  KEY:      META,\n\t  NEED:     false,\n\t  fastKey:  fastKey,\n\t  getWeak:  getWeak,\n\t  onFreeze: onFreeze\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Konva JavaScript Framework v1.2.1\n\t * http://konvajs.github.io/\n\t * Licensed under the MIT or GPL Version 2 licenses.\n\t * Date: Thu Sep 15 2016\n\t *\n\t * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n\t * Modified work Copyright (C) 2014 - 2015 by Anton Lavrenov (Konva)\n\t *\n\t * @license\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t// runtime check for already included Konva\n\t(function(global){\n\t    'use strict';\n\t    /**\n\t     * @namespace Konva\n\t     */\n\t\n\t    var PI_OVER_180 = Math.PI / 180;\n\t\n\t    var Konva = {\n\t        // public\n\t        version: '1.2.1',\n\t\n\t        // private\n\t        stages: [],\n\t        idCounter: 0,\n\t        ids: {},\n\t        names: {},\n\t        shapes: {},\n\t        listenClickTap: false,\n\t        inDblClickWindow: false,\n\t\n\t        // configurations\n\t        enableTrace: false,\n\t        traceArrMax: 100,\n\t        dblClickWindow: 400,\n\t        /**\n\t         * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n\t         * But you may override such property, if you want to use your value.\n\t         * @property pixelRatio\n\t         * @default undefined\n\t         * @memberof Konva\n\t         * @example\n\t         * Konva.pixelRatio = 1;\n\t         */\n\t        pixelRatio: undefined,\n\t        /**\n\t         * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n\t         * only then start dragging.\n\t         * @property dragDistance\n\t         * @default 0\n\t         * @memberof Konva\n\t         * @example\n\t         * Konva.dragDistance = 10;\n\t         */\n\t        dragDistance: 0,\n\t        /**\n\t         * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n\t         * @property angleDeg\n\t         * @default true\n\t         * @memberof Konva\n\t         * @example\n\t         * node.rotation(45); // 45 degrees\n\t         * Konva.angleDeg = false;\n\t         * node.rotation(Math.PI / 2); // PI/2 radian\n\t         */\n\t        angleDeg: true,\n\t         /**\n\t         * Show different warnings about errors or wrong API usage\n\t         * @property showWarnings\n\t         * @default true\n\t         * @memberof Konva\n\t         * @example\n\t         * Konva.showWarnings = false;\n\t         */\n\t        showWarnings: true,\n\t\n\t\n\t\n\t        /**\n\t         * @namespace Filters\n\t         * @memberof Konva\n\t         */\n\t        Filters: {},\n\t\n\t        /**\n\t         * returns whether or not drag and drop is currently active\n\t         * @method\n\t         * @memberof Konva\n\t         */\n\t        isDragging: function() {\n\t            var dd = Konva.DD;\n\t\n\t            // if DD is not included with the build, then\n\t            // drag and drop is not even possible\n\t            if (dd) {\n\t                return dd.isDragging;\n\t            }\n\t            return false;\n\t        },\n\t        /**\n\t        * returns whether or not a drag and drop operation is ready, but may\n\t        *  not necessarily have started\n\t        * @method\n\t        * @memberof Konva\n\t        */\n\t        isDragReady: function() {\n\t            var dd = Konva.DD;\n\t\n\t            // if DD is not included with the build, then\n\t            // drag and drop is not even possible\n\t            if (dd) {\n\t                return !!dd.node;\n\t            }\n\t            return false;\n\t        },\n\t        _addId: function(node, id) {\n\t            if(id !== undefined) {\n\t                this.ids[id] = node;\n\t            }\n\t        },\n\t        _removeId: function(id) {\n\t            if(id !== undefined) {\n\t                delete this.ids[id];\n\t            }\n\t        },\n\t        _addName: function(node, name) {\n\t            if(name) {\n\t                if(!this.names[name]) {\n\t                    this.names[name] = [];\n\t                }\n\t                this.names[name].push(node);\n\t            }\n\t        },\n\t        _removeName: function(name, _id) {\n\t            if(!name) {\n\t                return;\n\t            }\n\t            var nodes = this.names[name];\n\t            if(!nodes) {\n\t                return;\n\t            }\n\t            for(var n = 0; n < nodes.length; n++) {\n\t                var no = nodes[n];\n\t                if(no._id === _id) {\n\t                    nodes.splice(n, 1);\n\t                }\n\t            }\n\t            if(nodes.length === 0) {\n\t                delete this.names[name];\n\t            }\n\t        },\n\t        getAngle: function(angle) {\n\t            return this.angleDeg ? angle * PI_OVER_180 : angle;\n\t        },\n\t        _detectIE: function(ua) {\n\t            var msie = ua.indexOf('msie ');\n\t            if (msie > 0) {\n\t                // IE 10 or older => return version number\n\t                return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t            }\n\t\n\t            var trident = ua.indexOf('trident/');\n\t            if (trident > 0) {\n\t                // IE 11 => return version number\n\t                var rv = ua.indexOf('rv:');\n\t                return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t            }\n\t\n\t            var edge = ua.indexOf('edge/');\n\t            if (edge > 0) {\n\t                // Edge (IE 12+) => return version number\n\t                return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t            }\n\t\n\t            // other browser\n\t            return false;\n\t        },\n\t        _parseUA: function(userAgent) {\n\t            var ua = userAgent.toLowerCase(),\n\t                // jQuery UA regex\n\t                match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\n\t                /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\n\t                /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\n\t                /(msie) ([\\w.]+)/.exec( ua ) ||\n\t                ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\n\t                [],\n\t\n\t                // adding mobile flag as well\n\t                mobile = !!(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i)),\n\t                ieMobile = !!(userAgent.match(/IEMobile/i));\n\t\n\t            return {\n\t                browser: match[ 1 ] || '',\n\t                version: match[ 2 ] || '0',\n\t                isIE: Konva._detectIE(ua),\n\t                // adding mobile flab\n\t                mobile: mobile,\n\t                ieMobile: ieMobile  // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n\t            };\n\t        },\n\t        // user agent\n\t        UA: undefined\n\t    };\n\t\n\t    var glob =\n\t        typeof window !== 'undefined' ? window :\n\t        typeof global !== 'undefined' ? global :\n\t        typeof WorkerGlobalScope !== 'undefined' ? self : {};\n\t\n\t\n\t    Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\t\n\t\n\t    if (glob.Konva) {\n\t        console.error(\n\t            'Konva instance is already exist in current eviroment. ' +\n\t            'Please use only one instance.'\n\t        );\n\t    }\n\t    glob.Konva = Konva;\n\t    Konva.global = glob;\n\t\n\t\n\t    if( true) {\n\t        // runtime-check for browserify and nw.js (node-webkit)\n\t        if(glob.window && glob.window.document) {\n\t            Konva.document = glob.window.document;\n\t            Konva.window = glob.window;\n\t        } else {\n\t            // Node. Does not work with strict CommonJS, but\n\t            // only CommonJS-like enviroments that support module.exports,\n\t            // like Node.\n\t            var Canvas = __webpack_require__(310);\n\t            var jsdom = __webpack_require__(311).jsdom;\n\t\n\t            Konva.window = jsdom('<!DOCTYPE html><html><head></head><body></body></html>').defaultView;\n\t            Konva.document = Konva.window.document;\n\t            Konva.window.Image = Canvas.Image;\n\t            Konva._nodeCanvas = Canvas;\n\t        }\n\t        module.exports = Konva;\n\t        return;\n\t    }\n\t    else if( typeof define === 'function' && define.amd) {\n\t        // AMD. Register as an anonymous module.\n\t        define(function() {\n\t            return Konva;\n\t        });\n\t    }\n\t    Konva.document = document;\n\t    Konva.window = window;\n\t})(typeof window !== 'undefined' ? window : global);\n\t\n\t/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Collection constructor.  Collection extends\n\t     *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n\t     * @constructor\n\t     * @memberof Konva\n\t     */\n\t    Konva.Collection = function() {\n\t        var args = [].slice.call(arguments), length = args.length, i = 0;\n\t\n\t        this.length = length;\n\t        for(; i < length; i++) {\n\t            this[i] = args[i];\n\t        }\n\t        return this;\n\t    };\n\t    Konva.Collection.prototype = [];\n\t    /**\n\t     * iterate through node array and run a function for each node.\n\t     *  The node and index is passed into the function\n\t     * @method\n\t     * @memberof Konva.Collection.prototype\n\t     * @param {Function} func\n\t     * @example\n\t     * // get all nodes with name foo inside layer, and set x to 10 for each\n\t     * layer.get('.foo').each(function(shape, n) {\n\t     *   shape.setX(10);\n\t     * });\n\t     */\n\t    Konva.Collection.prototype.each = function(func) {\n\t        for(var n = 0; n < this.length; n++) {\n\t            func(this[n], n);\n\t        }\n\t    };\n\t    /**\n\t     * convert collection into an array\n\t     * @method\n\t     * @memberof Konva.Collection.prototype\n\t     */\n\t    Konva.Collection.prototype.toArray = function() {\n\t        var arr = [],\n\t            len = this.length,\n\t            n;\n\t\n\t        for(n = 0; n < len; n++) {\n\t            arr.push(this[n]);\n\t        }\n\t        return arr;\n\t    };\n\t    /**\n\t     * convert array into a collection\n\t     * @method\n\t     * @memberof Konva.Collection\n\t     * @param {Array} arr\n\t     */\n\t    Konva.Collection.toCollection = function(arr) {\n\t        var collection = new Konva.Collection(),\n\t            len = arr.length,\n\t            n;\n\t\n\t        for(n = 0; n < len; n++) {\n\t            collection.push(arr[n]);\n\t        }\n\t        return collection;\n\t    };\n\t\n\t    // map one method by it's name\n\t    Konva.Collection._mapMethod = function(methodName) {\n\t        Konva.Collection.prototype[methodName] = function() {\n\t            var len = this.length,\n\t                i;\n\t\n\t            var args = [].slice.call(arguments);\n\t            for(i = 0; i < len; i++) {\n\t                this[i][methodName].apply(this[i], args);\n\t            }\n\t\n\t            return this;\n\t        };\n\t    };\n\t\n\t    Konva.Collection.mapMethods = function(constructor) {\n\t        var prot = constructor.prototype;\n\t        for(var methodName in prot) {\n\t            Konva.Collection._mapMethod(methodName);\n\t        }\n\t    };\n\t\n\t    /*\n\t    * Last updated November 2011\n\t    * By Simon Sarris\n\t    * www.simonsarris.com\n\t    * sarris@acm.org\n\t    *\n\t    * Free to use and distribute at will\n\t    * So long as you are nice to people, etc\n\t    */\n\t\n\t    /*\n\t    * The usage of this class was inspired by some of the work done by a forked\n\t    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n\t    * class.  Modified by Eric Rowell\n\t    */\n\t\n\t    /**\n\t     * Transform constructor\n\t     * @constructor\n\t     * @param {Array} [m] Optional six-element matrix\n\t     * @memberof Konva\n\t     */\n\t    Konva.Transform = function(m) {\n\t        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n\t    };\n\t\n\t    Konva.Transform.prototype = {\n\t        /**\n\t         * Copy Konva.Transform object\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t        copy: function() {\n\t            return new Konva.Transform(this.m);\n\t        },\n\t        /**\n\t         * Transform point\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Object} point 2D point(x, y)\n\t         * @returns {Object} 2D point(x, y)\n\t         */\n\t        point: function(point) {\n\t            var m = this.m;\n\t            return {\n\t                x: m[0] * point.x + m[2] * point.y + m[4],\n\t                y: m[1] * point.x + m[3] * point.y + m[5]\n\t            };\n\t        },\n\t        /**\n\t         * Apply translation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} x\n\t         * @param {Number} y\n\t         * @returns {Konva.Transform}\n\t         */\n\t        translate: function(x, y) {\n\t            this.m[4] += this.m[0] * x + this.m[2] * y;\n\t            this.m[5] += this.m[1] * x + this.m[3] * y;\n\t            return this;\n\t        },\n\t        /**\n\t         * Apply scale\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} sx\n\t         * @param {Number} sy\n\t         * @returns {Konva.Transform}\n\t         */\n\t        scale: function(sx, sy) {\n\t            this.m[0] *= sx;\n\t            this.m[1] *= sx;\n\t            this.m[2] *= sy;\n\t            this.m[3] *= sy;\n\t            return this;\n\t        },\n\t        /**\n\t         * Apply rotation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} rad  Angle in radians\n\t         * @returns {Konva.Transform}\n\t         */\n\t        rotate: function(rad) {\n\t            var c = Math.cos(rad);\n\t            var s = Math.sin(rad);\n\t            var m11 = this.m[0] * c + this.m[2] * s;\n\t            var m12 = this.m[1] * c + this.m[3] * s;\n\t            var m21 = this.m[0] * -s + this.m[2] * c;\n\t            var m22 = this.m[1] * -s + this.m[3] * c;\n\t            this.m[0] = m11;\n\t            this.m[1] = m12;\n\t            this.m[2] = m21;\n\t            this.m[3] = m22;\n\t            return this;\n\t        },\n\t        /**\n\t         * Returns the translation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Object} 2D point(x, y)\n\t         */\n\t        getTranslation: function() {\n\t            return {\n\t                x: this.m[4],\n\t                y: this.m[5]\n\t            };\n\t        },\n\t        /**\n\t         * Apply skew\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} sx\n\t         * @param {Number} sy\n\t         * @returns {Konva.Transform}\n\t         */\n\t        skew: function(sx, sy) {\n\t            var m11 = this.m[0] + this.m[2] * sy;\n\t            var m12 = this.m[1] + this.m[3] * sy;\n\t            var m21 = this.m[2] + this.m[0] * sx;\n\t            var m22 = this.m[3] + this.m[1] * sx;\n\t            this.m[0] = m11;\n\t            this.m[1] = m12;\n\t            this.m[2] = m21;\n\t            this.m[3] = m22;\n\t            return this;\n\t         },\n\t        /**\n\t         * Transform multiplication\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Konva.Transform} matrix\n\t         * @returns {Konva.Transform}\n\t         */\n\t        multiply: function(matrix) {\n\t            var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n\t            var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\t\n\t            var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n\t            var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\t\n\t            var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n\t            var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\t\n\t            this.m[0] = m11;\n\t            this.m[1] = m12;\n\t            this.m[2] = m21;\n\t            this.m[3] = m22;\n\t            this.m[4] = dx;\n\t            this.m[5] = dy;\n\t            return this;\n\t        },\n\t        /**\n\t         * Invert the matrix\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t        invert: function() {\n\t            var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n\t            var m0 = this.m[3] * d;\n\t            var m1 = -this.m[1] * d;\n\t            var m2 = -this.m[2] * d;\n\t            var m3 = this.m[0] * d;\n\t            var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n\t            var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n\t            this.m[0] = m0;\n\t            this.m[1] = m1;\n\t            this.m[2] = m2;\n\t            this.m[3] = m3;\n\t            this.m[4] = m4;\n\t            this.m[5] = m5;\n\t            return this;\n\t        },\n\t        /**\n\t         * return matrix\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         */\n\t        getMatrix: function() {\n\t            return this.m;\n\t        },\n\t        /**\n\t         * set to absolute position via translation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Konva.Transform}\n\t         * @author ericdrowell\n\t         */\n\t        setAbsolutePosition: function(x, y) {\n\t            var m0 = this.m[0],\n\t                m1 = this.m[1],\n\t                m2 = this.m[2],\n\t                m3 = this.m[3],\n\t                m4 = this.m[4],\n\t                m5 = this.m[5],\n\t                yt = ((m0 * (y - m5)) - (m1 * (x - m4))) / ((m0 * m3) - (m1 * m2)),\n\t                xt = (x - m4 - (m2 * yt)) / m0;\n\t\n\t            return this.translate(xt, yt);\n\t        }\n\t    };\n\t\n\t    // CONSTANTS\n\t    var CONTEXT_2D = '2d',\n\t        OBJECT_ARRAY = '[object Array]',\n\t        OBJECT_NUMBER = '[object Number]',\n\t        OBJECT_STRING = '[object String]',\n\t        PI_OVER_DEG180 = Math.PI / 180,\n\t        DEG180_OVER_PI = 180 / Math.PI,\n\t        HASH = '#',\n\t        EMPTY_STRING = '',\n\t        ZERO = '0',\n\t        KONVA_WARNING = 'Konva warning: ',\n\t        KONVA_ERROR = 'Konva error: ',\n\t        RGB_PAREN = 'rgb(',\n\t        COLORS = {\n\t            aliceblue: [240, 248, 255],\n\t            antiquewhite: [250, 235, 215],\n\t            aqua: [0, 255, 255],\n\t            aquamarine: [127, 255, 212],\n\t            azure: [240, 255, 255],\n\t            beige: [245, 245, 220],\n\t            bisque: [255, 228, 196],\n\t            black: [0, 0, 0],\n\t            blanchedalmond: [255, 235, 205],\n\t            blue: [0, 0, 255],\n\t            blueviolet: [138, 43, 226],\n\t            brown: [165, 42, 42],\n\t            burlywood: [222, 184, 135],\n\t            cadetblue: [95, 158, 160],\n\t            chartreuse: [127, 255, 0],\n\t            chocolate: [210, 105, 30],\n\t            coral: [255, 127, 80],\n\t            cornflowerblue: [100, 149, 237],\n\t            cornsilk: [255, 248, 220],\n\t            crimson: [220, 20, 60],\n\t            cyan: [0, 255, 255],\n\t            darkblue: [0, 0, 139],\n\t            darkcyan: [0, 139, 139],\n\t            darkgoldenrod: [184, 132, 11],\n\t            darkgray: [169, 169, 169],\n\t            darkgreen: [0, 100, 0],\n\t            darkgrey: [169, 169, 169],\n\t            darkkhaki: [189, 183, 107],\n\t            darkmagenta: [139, 0, 139],\n\t            darkolivegreen: [85, 107, 47],\n\t            darkorange: [255, 140, 0],\n\t            darkorchid: [153, 50, 204],\n\t            darkred: [139, 0, 0],\n\t            darksalmon: [233, 150, 122],\n\t            darkseagreen: [143, 188, 143],\n\t            darkslateblue: [72, 61, 139],\n\t            darkslategray: [47, 79, 79],\n\t            darkslategrey: [47, 79, 79],\n\t            darkturquoise: [0, 206, 209],\n\t            darkviolet: [148, 0, 211],\n\t            deeppink: [255, 20, 147],\n\t            deepskyblue: [0, 191, 255],\n\t            dimgray: [105, 105, 105],\n\t            dimgrey: [105, 105, 105],\n\t            dodgerblue: [30, 144, 255],\n\t            firebrick: [178, 34, 34],\n\t            floralwhite: [255, 255, 240],\n\t            forestgreen: [34, 139, 34],\n\t            fuchsia: [255, 0, 255],\n\t            gainsboro: [220, 220, 220],\n\t            ghostwhite: [248, 248, 255],\n\t            gold: [255, 215, 0],\n\t            goldenrod: [218, 165, 32],\n\t            gray: [128, 128, 128],\n\t            green: [0, 128, 0],\n\t            greenyellow: [173, 255, 47],\n\t            grey: [128, 128, 128],\n\t            honeydew: [240, 255, 240],\n\t            hotpink: [255, 105, 180],\n\t            indianred: [205, 92, 92],\n\t            indigo: [75, 0, 130],\n\t            ivory: [255, 255, 240],\n\t            khaki: [240, 230, 140],\n\t            lavender: [230, 230, 250],\n\t            lavenderblush: [255, 240, 245],\n\t            lawngreen: [124, 252, 0],\n\t            lemonchiffon: [255, 250, 205],\n\t            lightblue: [173, 216, 230],\n\t            lightcoral: [240, 128, 128],\n\t            lightcyan: [224, 255, 255],\n\t            lightgoldenrodyellow: [250, 250, 210],\n\t            lightgray: [211, 211, 211],\n\t            lightgreen: [144, 238, 144],\n\t            lightgrey: [211, 211, 211],\n\t            lightpink: [255, 182, 193],\n\t            lightsalmon: [255, 160, 122],\n\t            lightseagreen: [32, 178, 170],\n\t            lightskyblue: [135, 206, 250],\n\t            lightslategray: [119, 136, 153],\n\t            lightslategrey: [119, 136, 153],\n\t            lightsteelblue: [176, 196, 222],\n\t            lightyellow: [255, 255, 224],\n\t            lime: [0, 255, 0],\n\t            limegreen: [50, 205, 50],\n\t            linen: [250, 240, 230],\n\t            magenta: [255, 0, 255],\n\t            maroon: [128, 0, 0],\n\t            mediumaquamarine: [102, 205, 170],\n\t            mediumblue: [0, 0, 205],\n\t            mediumorchid: [186, 85, 211],\n\t            mediumpurple: [147, 112, 219],\n\t            mediumseagreen: [60, 179, 113],\n\t            mediumslateblue: [123, 104, 238],\n\t            mediumspringgreen: [0, 250, 154],\n\t            mediumturquoise: [72, 209, 204],\n\t            mediumvioletred: [199, 21, 133],\n\t            midnightblue: [25, 25, 112],\n\t            mintcream: [245, 255, 250],\n\t            mistyrose: [255, 228, 225],\n\t            moccasin: [255, 228, 181],\n\t            navajowhite: [255, 222, 173],\n\t            navy: [0, 0, 128],\n\t            oldlace: [253, 245, 230],\n\t            olive: [128, 128, 0],\n\t            olivedrab: [107, 142, 35],\n\t            orange: [255, 165, 0],\n\t            orangered: [255, 69, 0],\n\t            orchid: [218, 112, 214],\n\t            palegoldenrod: [238, 232, 170],\n\t            palegreen: [152, 251, 152],\n\t            paleturquoise: [175, 238, 238],\n\t            palevioletred: [219, 112, 147],\n\t            papayawhip: [255, 239, 213],\n\t            peachpuff: [255, 218, 185],\n\t            peru: [205, 133, 63],\n\t            pink: [255, 192, 203],\n\t            plum: [221, 160, 203],\n\t            powderblue: [176, 224, 230],\n\t            purple: [128, 0, 128],\n\t            rebeccapurple: [102, 51, 153],\n\t            red: [255, 0, 0],\n\t            rosybrown: [188, 143, 143],\n\t            royalblue: [65, 105, 225],\n\t            saddlebrown: [139, 69, 19],\n\t            salmon: [250, 128, 114],\n\t            sandybrown: [244, 164, 96],\n\t            seagreen: [46, 139, 87],\n\t            seashell: [255, 245, 238],\n\t            sienna: [160, 82, 45],\n\t            silver: [192, 192, 192],\n\t            skyblue: [135, 206, 235],\n\t            slateblue: [106, 90, 205],\n\t            slategray: [119, 128, 144],\n\t            slategrey: [119, 128, 144],\n\t            snow: [255, 255, 250],\n\t            springgreen: [0, 255, 127],\n\t            steelblue: [70, 130, 180],\n\t            tan: [210, 180, 140],\n\t            teal: [0, 128, 128],\n\t            thistle: [216, 191, 216],\n\t            transparent: [255, 255, 255, 0],\n\t            tomato: [255, 99, 71],\n\t            turquoise: [64, 224, 208],\n\t            violet: [238, 130, 238],\n\t            wheat: [245, 222, 179],\n\t            white: [255, 255, 255],\n\t            whitesmoke: [245, 245, 245],\n\t            yellow: [255, 255, 0],\n\t            yellowgreen: [154, 205, 5]\n\t        },\n\t\n\t        RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\t\n\t    /**\n\t     * @namespace Util\n\t     * @memberof Konva\n\t     */\n\t    Konva.Util = {\n\t        /*\n\t         * cherry-picked utilities from underscore.js\n\t         */\n\t        _isElement: function(obj) {\n\t            return !!(obj && obj.nodeType == 1);\n\t        },\n\t        _isFunction: function(obj) {\n\t            return !!(obj && obj.constructor && obj.call && obj.apply);\n\t        },\n\t        _isObject: function(obj) {\n\t            return (!!obj && obj.constructor === Object);\n\t        },\n\t        _isArray: function(obj) {\n\t            return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n\t        },\n\t        _isNumber: function(obj) {\n\t            return Object.prototype.toString.call(obj) === OBJECT_NUMBER;\n\t        },\n\t        _isString: function(obj) {\n\t            return Object.prototype.toString.call(obj) === OBJECT_STRING;\n\t        },\n\t        // Returns a function, that, when invoked, will only be triggered at most once\n\t        // during a given window of time. Normally, the throttled function will run\n\t        // as much as it can, without ever going more than once per `wait` duration;\n\t        // but if you'd like to disable the execution on the leading edge, pass\n\t        // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t        _throttle: function(func, wait, opts) {\n\t            var context, args, result;\n\t            var timeout = null;\n\t            var previous = 0;\n\t            var options = opts || {};\n\t            var later = function() {\n\t                previous = options.leading === false ? 0 : new Date().getTime();\n\t                timeout = null;\n\t                result = func.apply(context, args);\n\t                context = args = null;\n\t            };\n\t            return function() {\n\t                var now = new Date().getTime();\n\t                if (!previous && options.leading === false) {\n\t                    previous = now;\n\t                }\n\t                var remaining = wait - (now - previous);\n\t                context = this;\n\t                args = arguments;\n\t                if (remaining <= 0) {\n\t                  clearTimeout(timeout);\n\t                  timeout = null;\n\t                  previous = now;\n\t                  result = func.apply(context, args);\n\t                  context = args = null;\n\t                } else if (!timeout && options.trailing !== false) {\n\t                  timeout = setTimeout(later, remaining);\n\t                }\n\t                return result;\n\t            };\n\t        },\n\t        /*\n\t         * other utils\n\t         */\n\t        _hasMethods: function(obj) {\n\t            var names = [],\n\t                key;\n\t\n\t            for(key in obj) {\n\t                if (!obj.hasOwnProperty(key)) {\n\t                    continue;\n\t                }\n\t                if(this._isFunction(obj[key])) {\n\t                    names.push(key);\n\t                }\n\t            }\n\t            return names.length > 0;\n\t        },\n\t        isValidSelector: function(selector) {\n\t            if (typeof selector !== 'string') {\n\t                return false;\n\t            }\n\t            var firstChar = selector[0];\n\t            return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n\t        },\n\t        createCanvasElement: function() {\n\t            var canvas = Konva.document.createElement('canvas');\n\t            // on some environments canvas.style is readonly\n\t            try {\n\t                canvas.style = canvas.style || {};\n\t            } catch (e) {\n\t            }\n\t            return canvas;\n\t        },\n\t        isBrowser: function() {\n\t            return (typeof exports !== 'object');\n\t        },\n\t        _isInDocument: function(el) {\n\t            while(el = el.parentNode) {\n\t                if(el == Konva.document) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t        _simplifyArray: function(arr) {\n\t            var retArr = [],\n\t                len = arr.length,\n\t                util = Konva.Util,\n\t                n, val;\n\t\n\t            for (n = 0; n < len; n++) {\n\t                val = arr[n];\n\t                if (util._isNumber(val)) {\n\t                    val = Math.round(val * 1000) / 1000;\n\t                }\n\t                else if (!util._isString(val)) {\n\t                    val = val.toString();\n\t                }\n\t\n\t                retArr.push(val);\n\t            }\n\t\n\t            return retArr;\n\t        },\n\t        /*\n\t         * arg can be an image object or image data\n\t         */\n\t        _getImage: function(arg, callback) {\n\t            var imageObj, canvas;\n\t\n\t            // if arg is null or undefined\n\t            if(!arg) {\n\t                callback(null);\n\t            }\n\t\n\t            // if arg is already an image object\n\t            else if(this._isElement(arg)) {\n\t                callback(arg);\n\t            }\n\t\n\t            // if arg is a string, then it's a data url\n\t            else if(this._isString(arg)) {\n\t                imageObj = new Konva.window.Image();\n\t                imageObj.onload = function() {\n\t                    callback(imageObj);\n\t                };\n\t                imageObj.src = arg;\n\t            }\n\t\n\t            //if arg is an object that contains the data property, it's an image object\n\t            else if(arg.data) {\n\t                canvas = Konva.Util.createCanvasElement();\n\t                canvas.width = arg.width;\n\t                canvas.height = arg.height;\n\t                var _context = canvas.getContext(CONTEXT_2D);\n\t                _context.putImageData(arg, 0, 0);\n\t                this._getImage(canvas.toDataURL(), callback);\n\t            }\n\t            else {\n\t                callback(null);\n\t            }\n\t        },\n\t        _getRGBAString: function(obj) {\n\t            var red = obj.red || 0,\n\t                green = obj.green || 0,\n\t                blue = obj.blue || 0,\n\t                alpha = obj.alpha || 1;\n\t\n\t            return [\n\t                'rgba(',\n\t                red,\n\t                ',',\n\t                green,\n\t                ',',\n\t                blue,\n\t                ',',\n\t                alpha,\n\t                ')'\n\t            ].join(EMPTY_STRING);\n\t        },\n\t        _rgbToHex: function(r, g, b) {\n\t            return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n\t        },\n\t        _hexToRgb: function(hex) {\n\t            hex = hex.replace(HASH, EMPTY_STRING);\n\t            var bigint = parseInt(hex, 16);\n\t            return {\n\t                r: (bigint >> 16) & 255,\n\t                g: (bigint >> 8) & 255,\n\t                b: bigint & 255\n\t            };\n\t        },\n\t        /**\n\t         * return random hex color\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         */\n\t        getRandomColor: function() {\n\t            var randColor = (Math.random() * 0xFFFFFF << 0).toString(16);\n\t            while (randColor.length < 6) {\n\t                randColor = ZERO + randColor;\n\t            }\n\t            return HASH + randColor;\n\t        },\n\t        /**\n\t         * return value with default fallback\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         */\n\t        get: function(val, def) {\n\t            if (val === undefined) {\n\t                return def;\n\t            }\n\t            else {\n\t                return val;\n\t            }\n\t        },\n\t        /**\n\t         * get RGB components of a color\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         * @param {String} color\n\t         * @example\n\t         * // each of the following examples return {r:0, g:0, b:255}\n\t         * var rgb = Konva.Util.getRGB('blue');\n\t         * var rgb = Konva.Util.getRGB('#0000ff');\n\t         * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n\t         */\n\t        getRGB: function(color) {\n\t            var rgb;\n\t            // color string\n\t            if (color in COLORS) {\n\t                rgb = COLORS[color];\n\t                return {\n\t                    r: rgb[0],\n\t                    g: rgb[1],\n\t                    b: rgb[2]\n\t                };\n\t            }\n\t            // hex\n\t            else if (color[0] === HASH) {\n\t                return this._hexToRgb(color.substring(1));\n\t            }\n\t            // rgb string\n\t            else if (color.substr(0, 4) === RGB_PAREN) {\n\t                rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n\t                return {\n\t                    r: parseInt(rgb[1], 10),\n\t                    g: parseInt(rgb[2], 10),\n\t                    b: parseInt(rgb[3], 10)\n\t                };\n\t            }\n\t            // default\n\t            else {\n\t                return {\n\t                    r: 0,\n\t                    g: 0,\n\t                    b: 0\n\t                };\n\t            }\n\t        },\n\t        // convert any color string to RGBA object\n\t        // from https://github.com/component/color-parser\n\t        colorToRGBA: function(str) {\n\t            str = str || 'black';\n\t            return Konva.Util._namedColorToRBA(str)\n\t                || Konva.Util._hex3ColorToRGBA(str)\n\t                || Konva.Util._hex6ColorToRGBA(str)\n\t                || Konva.Util._rgbColorToRGBA(str)\n\t                || Konva.Util._rgbaColorToRGBA(str);\n\t        },\n\t        // Parse named css color. Like \"green\"\n\t        _namedColorToRBA: function(str) {\n\t            var c = COLORS[str.toLowerCase()];\n\t            if (!c) {\n\t                return null;\n\t            }\n\t            return {\n\t                r: c[0],\n\t                g: c[1],\n\t                b: c[2],\n\t                a: 1\n\t            };\n\t        },\n\t        // Parse rgb(n, n, n)\n\t        _rgbColorToRGBA: function(str) {\n\t            if (str.indexOf('rgb(') === 0) {\n\t                str = str.match(/rgb\\(([^)]+)\\)/)[1];\n\t                var parts = str.split(/ *, */).map(Number);\n\t                return {\n\t                    r: parts[0],\n\t                    g: parts[1],\n\t                    b: parts[2],\n\t                    a: 1\n\t                };\n\t            }\n\t        },\n\t        // Parse rgba(n, n, n, n)\n\t        _rgbaColorToRGBA: function(str) {\n\t            if (str.indexOf('rgba(') === 0) {\n\t                str = str.match(/rgba\\(([^)]+)\\)/)[1];\n\t                var parts = str.split(/ *, */).map(Number);\n\t                return {\n\t                    r: parts[0],\n\t                    g: parts[1],\n\t                    b: parts[2],\n\t                    a: parts[3]\n\t                };\n\t            }\n\t\n\t        },\n\t        // Parse #nnnnnn\n\t        _hex6ColorToRGBA: function(str) {\n\t            if ((str[0] === '#') && (str.length === 7)) {\n\t                return {\n\t                    r: parseInt(str.slice(1, 3), 16),\n\t                    g: parseInt(str.slice(3, 5), 16),\n\t                    b: parseInt(str.slice(5, 7), 16),\n\t                    a: 1\n\t                };\n\t            }\n\t        },\n\t        // Parse #nnn\n\t        _hex3ColorToRGBA: function(str) {\n\t            if ((str[0] === '#') && (str.length === 4)) {\n\t                return {\n\t                    r: parseInt(str[1] + str[1], 16),\n\t                    g: parseInt(str[2] + str[2], 16),\n\t                    b: parseInt(str[3] + str[3], 16),\n\t                    a: 1\n\t                };\n\t            }\n\t        },\n\t        // o1 takes precedence over o2\n\t        _merge: function(o1, o2) {\n\t            var retObj = this._clone(o2);\n\t            for(var key in o1) {\n\t                if(this._isObject(o1[key])) {\n\t                    retObj[key] = this._merge(o1[key], retObj[key]);\n\t                }\n\t                else {\n\t                    retObj[key] = o1[key];\n\t                }\n\t            }\n\t            return retObj;\n\t        },\n\t        cloneObject: function(obj) {\n\t            var retObj = {};\n\t            for(var key in obj) {\n\t                if(this._isObject(obj[key])) {\n\t                    retObj[key] = this.cloneObject(obj[key]);\n\t                }\n\t                else if (this._isArray(obj[key])) {\n\t                    retObj[key] = this.cloneArray(obj[key]);\n\t                } else {\n\t                    retObj[key] = obj[key];\n\t                }\n\t            }\n\t            return retObj;\n\t        },\n\t        cloneArray: function(arr) {\n\t            return arr.slice(0);\n\t        },\n\t        _degToRad: function(deg) {\n\t            return deg * PI_OVER_DEG180;\n\t        },\n\t        _radToDeg: function(rad) {\n\t            return rad * DEG180_OVER_PI;\n\t        },\n\t        _capitalize: function(str) {\n\t            return str.charAt(0).toUpperCase() + str.slice(1);\n\t        },\n\t        throw: function(str) {\n\t            throw new Error(KONVA_ERROR + str);\n\t        },\n\t        error: function(str) {\n\t          console.error(KONVA_ERROR + str);\n\t        },\n\t        warn: function(str) {\n\t            /*\n\t             * IE9 on Windows7 64bit will throw a JS error\n\t             * if we don't use window.console in the conditional\n\t             */\n\t            if(Konva.global.console && console.warn && Konva.showWarnings) {\n\t                console.warn(KONVA_WARNING + str);\n\t            }\n\t        },\n\t        extend: function(child, parent) {\n\t            function Ctor() {\n\t                this.constructor = child;\n\t            }\n\t            Ctor.prototype = parent.prototype;\n\t            var oldProto = child.prototype;\n\t            child.prototype = new Ctor();\n\t            for (var key in oldProto) {\n\t                if (oldProto.hasOwnProperty(key)) {\n\t                    child.prototype[key] = oldProto[key];\n\t                }\n\t            }\n\t            child.__super__ = parent.prototype;\n\t            // create reference to parent\n\t            child.super = parent;\n\t        },\n\t        /**\n\t         * adds methods to a constructor prototype\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         * @param {Function} constructor\n\t         * @param {Object} methods\n\t         */\n\t        addMethods: function(constructor, methods) {\n\t            var key;\n\t\n\t            for (key in methods) {\n\t                constructor.prototype[key] = methods[key];\n\t            }\n\t        },\n\t        _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n\t            var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n\t                d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n\t                fa = t * d01 / (d01 + d12),\n\t                fb = t * d12 / (d01 + d12),\n\t                p1x = x1 - fa * (x2 - x0),\n\t                p1y = y1 - fa * (y2 - y0),\n\t                p2x = x1 + fb * (x2 - x0),\n\t                p2y = y1 + fb * (y2 - y0);\n\t\n\t            return [p1x, p1y, p2x, p2y];\n\t        },\n\t        _expandPoints: function(p, tension) {\n\t            var len = p.length,\n\t                allPoints = [],\n\t                n, cp;\n\t\n\t            for (n = 2; n < len - 2; n += 2) {\n\t                cp = Konva.Util._getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n\t                allPoints.push(cp[0]);\n\t                allPoints.push(cp[1]);\n\t                allPoints.push(p[n]);\n\t                allPoints.push(p[n + 1]);\n\t                allPoints.push(cp[2]);\n\t                allPoints.push(cp[3]);\n\t            }\n\t\n\t            return allPoints;\n\t        },\n\t        _removeLastLetter: function(str) {\n\t            return str.substring(0, str.length - 1);\n\t        },\n\t        each: function(obj, func) {\n\t            for (var key in obj) {\n\t                func(key, obj[key]);\n\t            }\n\t        },\n\t        _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n\t            var x, y, dist;\n\t\n\t            var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\t            if(pd2 == 0) {\n\t                x = x1;\n\t                y = y1;\n\t                dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n\t            } else {\n\t                var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n\t                if(u < 0) {\n\t                    x = x1;\n\t                    y = y1;\n\t                    dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n\t                } else if (u > 1.0) {\n\t                    x = x2;\n\t                    y = y2;\n\t                    dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n\t                } else {\n\t                    x = x1 + u * (x2 - x1);\n\t                    y = y1 + u * (y2 - y1);\n\t                    dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n\t                }\n\t            }\n\t            return [x, y, dist];\n\t        },\n\t        // line as array of points.\n\t        // line might be closed\n\t        _getProjectionToLine: function(pt, line, isClosed) {\n\t            var pc = Konva.Util.cloneObject(pt);\n\t            var dist = Number.MAX_VALUE;\n\t            line.forEach(function(p1, i) {\n\t                if (!isClosed && i === line.length - 1) {\n\t                    return;\n\t                }\n\t                var p2 = line[(i + 1) % line.length];\n\t                var proj = Konva.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n\t                var px = proj[0], py = proj[1], pdist = proj[2];\n\t                if (pdist < dist) {\n\t                    pc.x = px;\n\t                    pc.y = py;\n\t                    dist = pdist;\n\t                }\n\t            });\n\t            return pc;\n\t        },\n\t        _prepareArrayForTween: function(startArray, endArray, isClosed) {\n\t            var n, start = [], end = [];\n\t            if (startArray.length > endArray.length) {\n\t                var temp = endArray;\n\t                endArray = startArray;\n\t                startArray = temp;\n\t            }\n\t            for (n = 0; n < startArray.length; n += 2) {\n\t                start.push({\n\t                    x: startArray[n],\n\t                    y: startArray[n + 1]\n\t                });\n\t            }\n\t            for (n = 0; n < endArray.length; n += 2) {\n\t                end.push({\n\t                    x: endArray[n],\n\t                    y: endArray[n + 1]\n\t                });\n\t            }\n\t\n\t\n\t            var newStart = [];\n\t            end.forEach(function(point) {\n\t                var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n\t                newStart.push(pr.x);\n\t                newStart.push(pr.y);\n\t            });\n\t            return newStart;\n\t        },\n\t        _prepareToStringify: function(obj) {\n\t            var desc;\n\t\n\t            obj.visitedByCircularReferenceRemoval = true;\n\t\n\t            for(var key in obj) {\n\t                if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n\t                    continue;\n\t                }\n\t                desc = Object.getOwnPropertyDescriptor(obj, key);\n\t                if (obj[key].visitedByCircularReferenceRemoval || Konva.Util._isElement(obj[key])) {\n\t                    if (desc.configurable) {\n\t                        delete obj[key];\n\t                    } else {\n\t                        return null;\n\t                    }\n\t                } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n\t                    if (desc.configurable) {\n\t                        delete obj[key];\n\t                    } else {\n\t                        return null;\n\t                    }\n\t                }\n\t            }\n\t\n\t            delete obj.visitedByCircularReferenceRemoval;\n\t\n\t            return obj;\n\t        }\n\t    };\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // calculate pixel ratio\n\t    var canvas = Konva.Util.createCanvasElement(),\n\t        context = canvas.getContext('2d'),\n\t        _pixelRatio = (function(){\n\t            var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n\t            backingStoreRatio = context.webkitBackingStorePixelRatio\n\t                || context.mozBackingStorePixelRatio\n\t                || context.msBackingStorePixelRatio\n\t                || context.oBackingStorePixelRatio\n\t                || context.backingStorePixelRatio\n\t                || 1;\n\t            return devicePixelRatio / backingStoreRatio;\n\t        })();\n\t\n\t    /**\n\t     * Canvas Renderer constructor\n\t     * @constructor\n\t     * @abstract\n\t     * @memberof Konva\n\t     * @param {Object} config\n\t     * @param {Number} config.width\n\t     * @param {Number} config.height\n\t     * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n\t     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n\t     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n\t     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n\t     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n\t     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n\t     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n\t     */\n\t    Konva.Canvas = function(config) {\n\t        this.init(config);\n\t    };\n\t\n\t    Konva.Canvas.prototype = {\n\t        init: function(config) {\n\t            var conf = config || {};\n\t\n\t            var pixelRatio = conf.pixelRatio || Konva.pixelRatio || _pixelRatio;\n\t\n\t            this.pixelRatio = pixelRatio;\n\t            this._canvas = Konva.Util.createCanvasElement();\n\t\n\t            // set inline styles\n\t            this._canvas.style.padding = 0;\n\t            this._canvas.style.margin = 0;\n\t            this._canvas.style.border = 0;\n\t            this._canvas.style.background = 'transparent';\n\t            this._canvas.style.position = 'absolute';\n\t            this._canvas.style.top = 0;\n\t            this._canvas.style.left = 0;\n\t        },\n\t        /**\n\t         * get canvas context\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {CanvasContext} context\n\t         */\n\t        getContext: function() {\n\t            return this.context;\n\t        },\n\t        /**\n\t         * get pixel ratio\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {Number} pixel ratio\n\t         */\n\t        getPixelRatio: function() {\n\t            return this.pixelRatio;\n\t        },\n\t        /**\n\t         * get pixel ratio\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n\t         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n\t         *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n\t         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n\t         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n\t         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n\t         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n\t         */\n\t        setPixelRatio: function(pixelRatio) {\n\t            var previousRatio = this.pixelRatio;\n\t            this.pixelRatio = pixelRatio;\n\t            this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n\t        },\n\t        /**\n\t         * set width\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} width\n\t         */\n\t        setWidth: function(width) {\n\t            // take into account pixel ratio\n\t            this.width = this._canvas.width = width * this.pixelRatio;\n\t            this._canvas.style.width = width + 'px';\n\t\n\t            var pixelRatio = this.pixelRatio,\n\t                _context = this.getContext()._context;\n\t            _context.scale(pixelRatio, pixelRatio);\n\t        },\n\t        /**\n\t         * set height\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} height\n\t         */\n\t        setHeight: function(height) {\n\t            // take into account pixel ratio\n\t            this.height = this._canvas.height = height * this.pixelRatio;\n\t            this._canvas.style.height = height + 'px';\n\t            var pixelRatio = this.pixelRatio,\n\t                _context = this.getContext()._context;\n\t            _context.scale(pixelRatio, pixelRatio);\n\t        },\n\t        /**\n\t         * get width\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {Number} width\n\t         */\n\t        getWidth: function() {\n\t            return this.width;\n\t        },\n\t        /**\n\t         * get height\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {Number} height\n\t         */\n\t        getHeight: function() {\n\t            return this.height;\n\t        },\n\t        /**\n\t         * set size\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} width\n\t         * @param {Number} height\n\t         */\n\t        setSize: function(width, height) {\n\t            this.setWidth(width);\n\t            this.setHeight(height);\n\t        },\n\t        /**\n\t         * to data url\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {String} mimeType\n\t         * @param {Number} quality between 0 and 1 for jpg mime types\n\t         * @returns {String} data url string\n\t         */\n\t        toDataURL: function(mimeType, quality) {\n\t            try {\n\t                // If this call fails (due to browser bug, like in Firefox 3.6),\n\t                // then revert to previous no-parameter image/png behavior\n\t                return this._canvas.toDataURL(mimeType, quality);\n\t            }\n\t            catch(e) {\n\t                try {\n\t                    return this._canvas.toDataURL();\n\t                }\n\t                catch(err) {\n\t                    Konva.Util.warn('Unable to get data URL. ' + err.message);\n\t                    return '';\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    Konva.SceneCanvas = function(config) {\n\t        var conf = config || {};\n\t        var width = conf.width || 0,\n\t            height = conf.height || 0;\n\t\n\t        Konva.Canvas.call(this, conf);\n\t        this.context = new Konva.SceneContext(this);\n\t        this.setSize(width, height);\n\t    };\n\t\n\t    Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\t\n\t    Konva.HitCanvas = function(config) {\n\t        var conf = config || {};\n\t        var width = conf.width || 0,\n\t            height = conf.height || 0;\n\t\n\t        Konva.Canvas.call(this, conf);\n\t        this.context = new Konva.HitContext(this);\n\t        this.setSize(width, height);\n\t        this.hitCanvas = true;\n\t    };\n\t    Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n\t\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    var COMMA = ',',\n\t        OPEN_PAREN = '(',\n\t        CLOSE_PAREN = ')',\n\t        OPEN_PAREN_BRACKET = '([',\n\t        CLOSE_BRACKET_PAREN = '])',\n\t        SEMICOLON = ';',\n\t        DOUBLE_PAREN = '()',\n\t        // EMPTY_STRING = '',\n\t        EQUALS = '=',\n\t        // SET = 'set',\n\t        CONTEXT_METHODS = [\n\t            'arc',\n\t            'arcTo',\n\t            'beginPath',\n\t            'bezierCurveTo',\n\t            'clearRect',\n\t            'clip',\n\t            'closePath',\n\t            'createLinearGradient',\n\t            'createPattern',\n\t            'createRadialGradient',\n\t            'drawImage',\n\t            'fill',\n\t            'fillText',\n\t            'getImageData',\n\t            'createImageData',\n\t            'lineTo',\n\t            'moveTo',\n\t            'putImageData',\n\t            'quadraticCurveTo',\n\t            'rect',\n\t            'restore',\n\t            'rotate',\n\t            'save',\n\t            'scale',\n\t            'setLineDash',\n\t            'setTransform',\n\t            'stroke',\n\t            'strokeText',\n\t            'transform',\n\t            'translate'\n\t        ];\n\t\n\t    var CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX',\n\t        'shadowOffsetY', 'lineCap', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline',\n\t        'globalAlpha', 'globalCompositeOperation'];\n\t\n\t    /**\n\t     * Canvas Context constructor\n\t     * @constructor\n\t     * @abstract\n\t     * @memberof Konva\n\t     */\n\t    Konva.Context = function(canvas) {\n\t        this.init(canvas);\n\t    };\n\t\n\t    Konva.Context.prototype = {\n\t        init: function(canvas) {\n\t            this.canvas = canvas;\n\t            this._context = canvas._canvas.getContext('2d');\n\t\n\t            if (Konva.enableTrace) {\n\t                this.traceArr = [];\n\t                this._enableTrace();\n\t            }\n\t        },\n\t        /**\n\t         * fill shape\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Konva.Shape} shape\n\t         */\n\t        fillShape: function(shape) {\n\t            if(shape.getFillEnabled()) {\n\t                this._fill(shape);\n\t            }\n\t        },\n\t        /**\n\t         * stroke shape\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Konva.Shape} shape\n\t         */\n\t        strokeShape: function(shape) {\n\t            if(shape.getStrokeEnabled()) {\n\t                this._stroke(shape);\n\t            }\n\t        },\n\t        /**\n\t         * fill then stroke\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Konva.Shape} shape\n\t         */\n\t        fillStrokeShape: function(shape) {\n\t            var fillEnabled = shape.getFillEnabled();\n\t            if(fillEnabled) {\n\t                this._fill(shape);\n\t            }\n\t            if(shape.getStrokeEnabled()) {\n\t                this._stroke(shape);\n\t            }\n\t        },\n\t        /**\n\t         * get context trace if trace is enabled\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n\t         *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n\t         *  properites.\n\t         * @returns {String}\n\t         */\n\t        getTrace: function(relaxed) {\n\t            var traceArr = this.traceArr,\n\t                len = traceArr.length,\n\t                str = '',\n\t                n, trace, method, args;\n\t\n\t            for (n = 0; n < len; n++) {\n\t                trace = traceArr[n];\n\t                method = trace.method;\n\t\n\t                // methods\n\t                if (method) {\n\t                    args = trace.args;\n\t                    str += method;\n\t                    if (relaxed) {\n\t                        str += DOUBLE_PAREN;\n\t                    }\n\t                    else {\n\t                        if (Konva.Util._isArray(args[0])) {\n\t                            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n\t                        }\n\t                        else {\n\t                            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n\t                        }\n\t                    }\n\t                }\n\t                // properties\n\t                else {\n\t                    str += trace.property;\n\t                    if (!relaxed) {\n\t                        str += EQUALS + trace.val;\n\t                    }\n\t                }\n\t\n\t                str += SEMICOLON;\n\t            }\n\t\n\t            return str;\n\t        },\n\t        /**\n\t         * clear trace if trace is enabled\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         */\n\t        clearTrace: function() {\n\t            this.traceArr = [];\n\t        },\n\t        _trace: function(str) {\n\t            var traceArr = this.traceArr,\n\t                len;\n\t\n\t            traceArr.push(str);\n\t            len = traceArr.length;\n\t\n\t            if (len >= Konva.traceArrMax) {\n\t                traceArr.shift();\n\t            }\n\t        },\n\t        /**\n\t         * reset canvas context transform\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         */\n\t        reset: function() {\n\t            var pixelRatio = this.getCanvas().getPixelRatio();\n\t            this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n\t        },\n\t        /**\n\t         * get canvas\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @returns {Konva.Canvas}\n\t         */\n\t        getCanvas: function() {\n\t            return this.canvas;\n\t        },\n\t        /**\n\t         * clear canvas\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Object} [bounds]\n\t         * @param {Number} [bounds.x]\n\t         * @param {Number} [bounds.y]\n\t         * @param {Number} [bounds.width]\n\t         * @param {Number} [bounds.height]\n\t         */\n\t        clear: function(bounds) {\n\t            var canvas = this.getCanvas();\n\t\n\t            if (bounds) {\n\t                this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n\t            }\n\t            else {\n\t                this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n\t            }\n\t        },\n\t        _applyLineCap: function(shape) {\n\t            var lineCap = shape.getLineCap();\n\t            if(lineCap) {\n\t                this.setAttr('lineCap', lineCap);\n\t            }\n\t        },\n\t        _applyOpacity: function(shape) {\n\t            var absOpacity = shape.getAbsoluteOpacity();\n\t            if(absOpacity !== 1) {\n\t                this.setAttr('globalAlpha', absOpacity);\n\t            }\n\t        },\n\t        _applyLineJoin: function(shape) {\n\t            var lineJoin = shape.getLineJoin();\n\t            if(lineJoin) {\n\t                this.setAttr('lineJoin', lineJoin);\n\t            }\n\t        },\n\t        setAttr: function(attr, val) {\n\t            this._context[attr] = val;\n\t        },\n\t\n\t        // context pass through methods\n\t        arc: function() {\n\t            var a = arguments;\n\t            this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t        },\n\t        beginPath: function() {\n\t            this._context.beginPath();\n\t        },\n\t        bezierCurveTo: function() {\n\t            var a = arguments;\n\t            this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t        },\n\t        clearRect: function() {\n\t            var a = arguments;\n\t            this._context.clearRect(a[0], a[1], a[2], a[3]);\n\t        },\n\t        clip: function() {\n\t            this._context.clip();\n\t        },\n\t        closePath: function() {\n\t            this._context.closePath();\n\t        },\n\t        createImageData: function() {\n\t            var a = arguments;\n\t            if(a.length === 2) {\n\t                return this._context.createImageData(a[0], a[1]);\n\t            }\n\t            else if(a.length === 1) {\n\t                return this._context.createImageData(a[0]);\n\t            }\n\t        },\n\t        createLinearGradient: function() {\n\t            var a = arguments;\n\t            return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n\t        },\n\t        createPattern: function() {\n\t            var a = arguments;\n\t            return this._context.createPattern(a[0], a[1]);\n\t        },\n\t        createRadialGradient: function() {\n\t            var a = arguments;\n\t            return this._context.createRadialGradient(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t        },\n\t        drawImage: function() {\n\t            var a = arguments,\n\t                _context = this._context;\n\t\n\t            if(a.length === 3) {\n\t                _context.drawImage(a[0], a[1], a[2]);\n\t            }\n\t            else if(a.length === 5) {\n\t                _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n\t            }\n\t            else if(a.length === 9) {\n\t                _context.drawImage(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n\t            }\n\t        },\n\t        isPointInPath: function(x, y) {\n\t            return this._context.isPointInPath(x, y);\n\t        },\n\t        fill: function() {\n\t            this._context.fill();\n\t        },\n\t        fillRect: function(x, y, width, height) {\n\t            this._context.fillRect(x, y, width, height);\n\t        },\n\t        strokeRect: function(x, y, width, height) {\n\t            this._context.strokeRect(x, y, width, height);\n\t        },\n\t        fillText: function() {\n\t            var a = arguments;\n\t            this._context.fillText(a[0], a[1], a[2]);\n\t        },\n\t        measureText: function(text) {\n\t            return this._context.measureText(text);\n\t        },\n\t        getImageData: function() {\n\t            var a = arguments;\n\t            return this._context.getImageData(a[0], a[1], a[2], a[3]);\n\t        },\n\t        lineTo: function() {\n\t            var a = arguments;\n\t            this._context.lineTo(a[0], a[1]);\n\t        },\n\t        moveTo: function() {\n\t            var a = arguments;\n\t            this._context.moveTo(a[0], a[1]);\n\t        },\n\t        rect: function() {\n\t            var a = arguments;\n\t            this._context.rect(a[0], a[1], a[2], a[3]);\n\t        },\n\t        putImageData: function() {\n\t            var a = arguments;\n\t            this._context.putImageData(a[0], a[1], a[2]);\n\t        },\n\t        quadraticCurveTo: function() {\n\t            var a = arguments;\n\t            this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n\t        },\n\t        restore: function() {\n\t            this._context.restore();\n\t        },\n\t        rotate: function() {\n\t            var a = arguments;\n\t            this._context.rotate(a[0]);\n\t        },\n\t        save: function() {\n\t            this._context.save();\n\t        },\n\t        scale: function() {\n\t            var a = arguments;\n\t            this._context.scale(a[0], a[1]);\n\t        },\n\t        setLineDash: function() {\n\t            var a = arguments,\n\t                _context = this._context;\n\t\n\t            // works for Chrome and IE11\n\t            if(this._context.setLineDash) {\n\t                _context.setLineDash(a[0]);\n\t            }\n\t            // verified that this works in firefox\n\t            else if('mozDash' in _context) {\n\t                _context.mozDash = a[0];\n\t            }\n\t            // does not currently work for Safari\n\t            else if('webkitLineDash' in _context) {\n\t                _context.webkitLineDash = a[0];\n\t            }\n\t\n\t            // no support for IE9 and IE10\n\t        },\n\t        getLineDash: function() {\n\t            return this._context.getLineDash();\n\t        },\n\t        setTransform: function() {\n\t            var a = arguments;\n\t            this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t        },\n\t        stroke: function() {\n\t            this._context.stroke();\n\t        },\n\t        strokeText: function() {\n\t            var a = arguments;\n\t            this._context.strokeText(a[0], a[1], a[2]);\n\t        },\n\t        transform: function() {\n\t            var a = arguments;\n\t            this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t        },\n\t        translate: function() {\n\t            var a = arguments;\n\t            this._context.translate(a[0], a[1]);\n\t        },\n\t        _enableTrace: function() {\n\t            var that = this,\n\t                len = CONTEXT_METHODS.length,\n\t                _simplifyArray = Konva.Util._simplifyArray,\n\t                origSetter = this.setAttr,\n\t                n, args;\n\t\n\t            // to prevent creating scope function at each loop\n\t            var func = function(methodName) {\n\t                    var origMethod = that[methodName],\n\t                        ret;\n\t\n\t                    that[methodName] = function() {\n\t                        args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n\t                        ret = origMethod.apply(that, arguments);\n\t\n\t                        that._trace({\n\t                            method: methodName,\n\t                            args: args\n\t                        });\n\t\n\t                        return ret;\n\t                    };\n\t            };\n\t            // methods\n\t            for (n = 0; n < len; n++) {\n\t                func(CONTEXT_METHODS[n]);\n\t            }\n\t\n\t            // attrs\n\t            that.setAttr = function() {\n\t                origSetter.apply(that, arguments);\n\t                that._trace({\n\t                    property: arguments[0],\n\t                    val: arguments[1]\n\t                });\n\t            };\n\t        }\n\t    };\n\t\n\t    CONTEXT_PROPERTIES.forEach(function(prop) {\n\t        Object.defineProperty(Konva.Context.prototype, prop, {\n\t            get: function () {\n\t                return this._context[prop];\n\t            },\n\t            set: function (val) {\n\t                this._context[prop] = val;\n\t            }\n\t        });\n\t    });\n\t\n\t    Konva.SceneContext = function(canvas) {\n\t        Konva.Context.call(this, canvas);\n\t    };\n\t\n\t    Konva.SceneContext.prototype = {\n\t        _fillColor: function(shape) {\n\t            var fill = shape.fill();\n\t\n\t            this.setAttr('fillStyle', fill);\n\t            shape._fillFunc(this);\n\t        },\n\t        _fillPattern: function(shape) {\n\t            var fillPatternX = shape.getFillPatternX(),\n\t                fillPatternY = shape.getFillPatternY(),\n\t                fillPatternScale = shape.getFillPatternScale(),\n\t                fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n\t                fillPatternOffset = shape.getFillPatternOffset();\n\t\n\t            if(fillPatternX || fillPatternY) {\n\t                this.translate(fillPatternX || 0, fillPatternY || 0);\n\t            }\n\t            if(fillPatternRotation) {\n\t                this.rotate(fillPatternRotation);\n\t            }\n\t            if(fillPatternScale) {\n\t                this.scale(fillPatternScale.x, fillPatternScale.y);\n\t            }\n\t            if(fillPatternOffset) {\n\t                this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n\t            }\n\t\n\t            this.setAttr('fillStyle', this.createPattern(shape.getFillPatternImage(), shape.getFillPatternRepeat() || 'repeat'));\n\t            this.fill();\n\t        },\n\t        _fillLinearGradient: function(shape) {\n\t            var start = shape.getFillLinearGradientStartPoint(),\n\t                end = shape.getFillLinearGradientEndPoint(),\n\t                colorStops = shape.getFillLinearGradientColorStops(),\n\t                grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\t\n\t            if (colorStops) {\n\t                // build color stops\n\t                for(var n = 0; n < colorStops.length; n += 2) {\n\t                    grd.addColorStop(colorStops[n], colorStops[n + 1]);\n\t                }\n\t                this.setAttr('fillStyle', grd);\n\t                shape._fillFunc(this);\n\t            }\n\t        },\n\t        _fillRadialGradient: function(shape) {\n\t            var start = shape.getFillRadialGradientStartPoint(),\n\t                end = shape.getFillRadialGradientEndPoint(),\n\t                startRadius = shape.getFillRadialGradientStartRadius(),\n\t                endRadius = shape.getFillRadialGradientEndRadius(),\n\t                colorStops = shape.getFillRadialGradientColorStops(),\n\t                grd = this.createRadialGradient(start.x, start.y, startRadius, end.x, end.y, endRadius);\n\t\n\t            // build color stops\n\t            for(var n = 0; n < colorStops.length; n += 2) {\n\t                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n\t            }\n\t            this.setAttr('fillStyle', grd);\n\t            this.fill();\n\t        },\n\t        _fill: function(shape) {\n\t            var hasColor = shape.fill(),\n\t                hasPattern = shape.getFillPatternImage(),\n\t                hasLinearGradient = shape.getFillLinearGradientColorStops(),\n\t                hasRadialGradient = shape.getFillRadialGradientColorStops(),\n\t                fillPriority = shape.getFillPriority();\n\t\n\t            // priority fills\n\t            if(hasColor && fillPriority === 'color') {\n\t                this._fillColor(shape);\n\t            }\n\t            else if(hasPattern && fillPriority === 'pattern') {\n\t                this._fillPattern(shape);\n\t            }\n\t            else if(hasLinearGradient && fillPriority === 'linear-gradient') {\n\t                this._fillLinearGradient(shape);\n\t            }\n\t            else if(hasRadialGradient && fillPriority === 'radial-gradient') {\n\t                this._fillRadialGradient(shape);\n\t            }\n\t            // now just try and fill with whatever is available\n\t            else if(hasColor) {\n\t                this._fillColor(shape);\n\t            }\n\t            else if(hasPattern) {\n\t                this._fillPattern(shape);\n\t            }\n\t            else if(hasLinearGradient) {\n\t                this._fillLinearGradient(shape);\n\t            }\n\t            else if(hasRadialGradient) {\n\t                this._fillRadialGradient(shape);\n\t            }\n\t        },\n\t        _stroke: function(shape) {\n\t            var dash = shape.dash(),\n\t                // ignore strokeScaleEnabled for Text\n\t                strokeScaleEnabled = (shape.getStrokeScaleEnabled() || (shape instanceof Konva.Text));\n\t\n\t            if(shape.hasStroke()) {\n\t                if (!strokeScaleEnabled) {\n\t                    this.save();\n\t                    this.setTransform(1, 0, 0, 1, 0, 0);\n\t                }\n\t\n\t                this._applyLineCap(shape);\n\t                if(dash && shape.dashEnabled()) {\n\t                    this.setLineDash(dash);\n\t                }\n\t\n\t                this.setAttr('lineWidth', shape.strokeWidth());\n\t                this.setAttr('strokeStyle', shape.stroke());\n\t\n\t                if (!shape.getShadowForStrokeEnabled()) {\n\t                    this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n\t                }\n\t                shape._strokeFunc(this);\n\t\n\t                if (!strokeScaleEnabled) {\n\t                    this.restore();\n\t                }\n\t            }\n\t        },\n\t        _applyShadow: function(shape) {\n\t            var util = Konva.Util,\n\t                color = util.get(shape.getShadowRGBA(), 'black'),\n\t                blur = util.get(shape.getShadowBlur(), 5),\n\t                offset = util.get(shape.getShadowOffset(), {\n\t                    x: 0,\n\t                    y: 0\n\t                }),\n\t                // TODO: get this info from transform??\n\t                scale = shape.getAbsoluteScale(),\n\t                scaleX = scale.x,\n\t                scaleY = scale.y;\n\t\n\t            this.setAttr('shadowColor', color);\n\t            this.setAttr('shadowBlur', blur);\n\t            this.setAttr('shadowOffsetX', offset.x * scaleX);\n\t            this.setAttr('shadowOffsetY', offset.y * scaleY);\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\t\n\t    Konva.HitContext = function(canvas) {\n\t        Konva.Context.call(this, canvas);\n\t    };\n\t\n\t    Konva.HitContext.prototype = {\n\t        _fill: function(shape) {\n\t            this.save();\n\t            this.setAttr('fillStyle', shape.colorKey);\n\t            shape._fillFuncHit(this);\n\t            this.restore();\n\t        },\n\t        _stroke: function(shape) {\n\t            if(shape.hasStroke() && shape.strokeHitEnabled()) {\n\t                // ignore strokeScaleEnabled for Text\n\t                var strokeScaleEnabled = (shape.getStrokeScaleEnabled() || (shape instanceof Konva.Text));\n\t                if (!strokeScaleEnabled) {\n\t                    this.save();\n\t                    this.setTransform(1, 0, 0, 1, 0, 0);\n\t                }\n\t                this._applyLineCap(shape);\n\t                this.setAttr('lineWidth', shape.strokeWidth());\n\t                this.setAttr('strokeStyle', shape.colorKey);\n\t                shape._strokeFuncHit(this);\n\t                if (!strokeScaleEnabled) {\n\t                    this.restore();\n\t                }\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.HitContext, Konva.Context);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // CONSTANTS\n\t    var GET = 'get',\n\t        SET = 'set';\n\t\n\t    Konva.Factory = {\n\t        addGetterSetter: function(constructor, attr, def, validator, after) {\n\t            this.addGetter(constructor, attr, def);\n\t            this.addSetter(constructor, attr, validator, after);\n\t            this.addOverloadedGetterSetter(constructor, attr);\n\t        },\n\t        addGetter: function(constructor, attr, def) {\n\t            var method = GET + Konva.Util._capitalize(attr);\n\t\n\t            constructor.prototype[method] = function() {\n\t                var val = this.attrs[attr];\n\t                return val === undefined ? def : val;\n\t            };\n\t        },\n\t        addSetter: function(constructor, attr, validator, after) {\n\t            var method = SET + Konva.Util._capitalize(attr);\n\t\n\t            constructor.prototype[method] = function(val) {\n\t                if (validator) {\n\t                    val = validator.call(this, val);\n\t                }\n\t\n\t                this._setAttr(attr, val);\n\t\n\t                if (after) {\n\t                    after.call(this);\n\t                }\n\t\n\t                return this;\n\t            };\n\t        },\n\t        addComponentsGetterSetter: function(constructor, attr, components, validator, after) {\n\t            var len = components.length,\n\t                capitalize = Konva.Util._capitalize,\n\t                getter = GET + capitalize(attr),\n\t                setter = SET + capitalize(attr),\n\t                n, component;\n\t\n\t            // getter\n\t            constructor.prototype[getter] = function() {\n\t                var ret = {};\n\t\n\t                for (n = 0; n < len; n++) {\n\t                    component = components[n];\n\t                    ret[component] = this.getAttr(attr + capitalize(component));\n\t                }\n\t\n\t                return ret;\n\t            };\n\t\n\t            // setter\n\t            constructor.prototype[setter] = function(val) {\n\t                var oldVal = this.attrs[attr],\n\t                    key;\n\t\n\t                if (validator) {\n\t                    val = validator.call(this, val);\n\t                }\n\t\n\t                for (key in val) {\n\t                    if (!val.hasOwnProperty(key)) {\n\t                        continue;\n\t                    }\n\t                    this._setAttr(attr + capitalize(key), val[key]);\n\t                }\n\t\n\t                this._fireChangeEvent(attr, oldVal, val);\n\t\n\t                if (after) {\n\t                    after.call(this);\n\t                }\n\t\n\t                return this;\n\t            };\n\t\n\t            this.addOverloadedGetterSetter(constructor, attr);\n\t        },\n\t        addOverloadedGetterSetter: function(constructor, attr) {\n\t            var capitalizedAttr = Konva.Util._capitalize(attr),\n\t                setter = SET + capitalizedAttr,\n\t                getter = GET + capitalizedAttr;\n\t\n\t            constructor.prototype[attr] = function() {\n\t                // setting\n\t                if (arguments.length) {\n\t                    this[setter](arguments[0]);\n\t                    return this;\n\t                }\n\t                // getting\n\t                return this[getter]();\n\t            };\n\t        },\n\t        addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n\t            var method = GET + Konva.Util._capitalize(attr);\n\t            var message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n\t            constructor.prototype[method] = function() {\n\t                Konva.Util.error(message);\n\t                var val = this.attrs[attr];\n\t                return val === undefined ? def : val;\n\t            };\n\t            this.addSetter(constructor, attr, validator, function() {\n\t              Konva.Util.error(message);\n\t            });\n\t            this.addOverloadedGetterSetter(constructor, attr);\n\t        },\n\t        backCompat: function(constructor, methods) {\n\t            Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n\t                var method = constructor.prototype[newMethodName];\n\t                constructor.prototype[oldMethodName] = function(){\n\t                    method.apply(this, arguments);\n\t                    Konva.Util.error(oldMethodName + ' method is deprecated and will be removed soon. Use ' + newMethodName + ' instead');\n\t                };\n\t            });\n\t        },\n\t        afterSetFilter: function() {\n\t            this._filterUpToDate = false;\n\t        }\n\t    };\n\t\n\t    Konva.Validators = {\n\t        /**\n\t         * @return {number}\n\t         */\n\t        RGBComponent: function(val) {\n\t            if (val > 255) {\n\t                return 255;\n\t            } else if (val < 0) {\n\t                return 0;\n\t            }\n\t            return Math.round(val);\n\t        },\n\t        alphaComponent: function(val) {\n\t            if (val > 1) {\n\t                return 1;\n\t            }\n\t            // chrome does not honor alpha values of 0\n\t            else if (val < 0.0001) {\n\t                return 0.0001;\n\t            }\n\t\n\t            return val;\n\t        }\n\t    };\n\t})();\n\t\n\t(function(Konva) {\n\t    'use strict';\n\t    // CONSTANTS\n\t    var ABSOLUTE_OPACITY = 'absoluteOpacity',\n\t        ABSOLUTE_TRANSFORM = 'absoluteTransform',\n\t        ABSOLUTE_SCALE = 'absoluteScale',\n\t        CHANGE = 'Change',\n\t        CHILDREN = 'children',\n\t        DOT = '.',\n\t        EMPTY_STRING = '',\n\t        GET = 'get',\n\t        ID = 'id',\n\t        KONVA = 'konva',\n\t        LISTENING = 'listening',\n\t        MOUSEENTER = 'mouseenter',\n\t        MOUSELEAVE = 'mouseleave',\n\t        NAME = 'name',\n\t        SET = 'set',\n\t        SHAPE = 'Shape',\n\t        SPACE = ' ',\n\t        STAGE = 'stage',\n\t        TRANSFORM = 'transform',\n\t        UPPER_STAGE = 'Stage',\n\t        VISIBLE = 'visible',\n\t        CLONE_BLACK_LIST = ['id'],\n\t\n\t        TRANSFORM_CHANGE_STR = [\n\t            'xChange.konva',\n\t            'yChange.konva',\n\t            'scaleXChange.konva',\n\t            'scaleYChange.konva',\n\t            'skewXChange.konva',\n\t            'skewYChange.konva',\n\t            'rotationChange.konva',\n\t            'offsetXChange.konva',\n\t            'offsetYChange.konva',\n\t            'transformsEnabledChange.konva'\n\t        ].join(SPACE),\n\t\n\t        SCALE_CHANGE_STR = [\n\t            'scaleXChange.konva',\n\t            'scaleYChange.konva'\n\t        ].join(SPACE);\n\t\n\t    /**\n\t     * Node constructor. Nodes are entities that can be transformed, layered,\n\t     * and have bound events. The stage, layers, groups, and shapes all extend Node.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @abstract\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     */\n\t    Konva.Node = function(config) {\n\t        this._init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.Node, {\n\t        _init: function(config) {\n\t            var that = this;\n\t            this._id = Konva.idCounter++;\n\t            this.eventListeners = {};\n\t            this.attrs = {};\n\t            this._cache = {};\n\t            this._filterUpToDate = false;\n\t            this.setAttrs(config);\n\t\n\t            // event bindings for cache handling\n\t            this.on(TRANSFORM_CHANGE_STR, function() {\n\t                this._clearCache(TRANSFORM);\n\t                that._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t            });\n\t\n\t            this.on(SCALE_CHANGE_STR, function() {\n\t                that._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\t            });\n\t\n\t            this.on('visibleChange.konva', function() {\n\t                that._clearSelfAndDescendantCache(VISIBLE);\n\t            });\n\t            this.on('listeningChange.konva', function() {\n\t                that._clearSelfAndDescendantCache(LISTENING);\n\t            });\n\t            this.on('opacityChange.konva', function() {\n\t                that._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\t            });\n\t        },\n\t        _clearCache: function(attr){\n\t            if (attr) {\n\t                delete this._cache[attr];\n\t            }\n\t            else {\n\t                this._cache = {};\n\t            }\n\t        },\n\t        _getCache: function(attr, privateGetter){\n\t            var cache = this._cache[attr];\n\t\n\t            // if not cached, we need to set it using the private getter method.\n\t            if (cache === undefined) {\n\t                this._cache[attr] = privateGetter.call(this);\n\t            }\n\t\n\t            return this._cache[attr];\n\t        },\n\t        /*\n\t         * when the logic for a cached result depends on ancestor propagation, use this\n\t         * method to clear self and children cache\n\t         */\n\t        _clearSelfAndDescendantCache: function(attr) {\n\t            this._clearCache(attr);\n\t\n\t            if (this.children) {\n\t                this.getChildren().each(function(node) {\n\t                    node._clearSelfAndDescendantCache(attr);\n\t                });\n\t            }\n\t        },\n\t        /**\n\t        * clear cached canvas\n\t        * @method\n\t        * @memberof Konva.Node.prototype\n\t        * @returns {Konva.Node}\n\t        * @example\n\t        * node.clearCache();\n\t        */\n\t        clearCache: function() {\n\t            delete this._cache.canvas;\n\t            this._filterUpToDate = false;\n\t            return this;\n\t        },\n\t        /**\n\t        *  cache node to improve drawing performance, apply filters, or create more accurate\n\t        *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n\t        *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n\t        *  properties. Look at [link to demo page](link to demo page) for more information.\n\t        * @method\n\t        * @memberof Konva.Node.prototype\n\t        * @param {Object} [config]\n\t        * @param {Number} [config.x]\n\t        * @param {Number} [config.y]\n\t        * @param {Number} [config.width]\n\t        * @param {Number} [config.height]\n\t        * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n\t        * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n\t        *  region for debugging purposes\n\t        * @returns {Konva.Node}\n\t        * @example\n\t        * // cache a shape with the x,y position of the bounding box at the center and\n\t        * // the width and height of the bounding box equal to the width and height of\n\t        * // the shape obtained from shape.width() and shape.height()\n\t        * image.cache();\n\t        *\n\t        * // cache a node and define the bounding box position and size\n\t        * node.cache({\n\t        *   x: -30,\n\t        *   y: -30,\n\t        *   width: 100,\n\t        *   height: 200\n\t        * });\n\t        *\n\t        * // cache a node and draw a red border around the bounding box\n\t        * // for debugging purposes\n\t        * node.cache({\n\t        *   x: -30,\n\t        *   y: -30,\n\t        *   width: 100,\n\t        *   height: 200,\n\t        *   offset : 10,\n\t        *   drawBorder: true\n\t        * });\n\t        */\n\t        cache: function(config) {\n\t            var conf = config || {},\n\t                rect = this.getClientRect(true),\n\t                width = conf.width || rect.width,\n\t                height = conf.height || rect.height,\n\t                x = conf.x || rect.x,\n\t                y = conf.y || rect.y,\n\t                offset = conf.offset || 0,\n\t                drawBorder = conf.drawBorder || false;\n\t\n\t            if (!width || !height) {\n\t                throw new Error('Width or height of caching configuration equals 0.');\n\t            }\n\t\n\t            width += offset * 2;\n\t            height += offset * 2;\n\t\n\t            x -= offset;\n\t            y -= offset;\n\t\n\t\n\t            var cachedSceneCanvas = new Konva.SceneCanvas({\n\t                width: width,\n\t                height: height\n\t            }),\n\t            cachedFilterCanvas = new Konva.SceneCanvas({\n\t                width: width,\n\t                height: height\n\t            }),\n\t            cachedHitCanvas = new Konva.HitCanvas({\n\t                pixelRatio: 1,\n\t                width: width,\n\t                height: height\n\t            }),\n\t            sceneContext = cachedSceneCanvas.getContext(),\n\t            hitContext = cachedHitCanvas.getContext();\n\t\n\t            cachedHitCanvas.isCache = true;\n\t\n\t            this.clearCache();\n\t\n\t            sceneContext.save();\n\t            hitContext.save();\n\t\n\t            sceneContext.translate(-x, -y);\n\t            hitContext.translate(-x, -y);\n\t\n\t            this.drawScene(cachedSceneCanvas, this, true);\n\t            this.drawHit(cachedHitCanvas, this, true);\n\t\n\t            sceneContext.restore();\n\t            hitContext.restore();\n\t\n\t            // this will draw a red border around the cached box for\n\t            // debugging purposes\n\t            if (drawBorder) {\n\t                sceneContext.save();\n\t                sceneContext.beginPath();\n\t                sceneContext.rect(0, 0, width, height);\n\t                sceneContext.closePath();\n\t                sceneContext.setAttr('strokeStyle', 'red');\n\t                sceneContext.setAttr('lineWidth', 5);\n\t                sceneContext.stroke();\n\t                sceneContext.restore();\n\t            }\n\t\n\t            this._cache.canvas = {\n\t                scene: cachedSceneCanvas,\n\t                filter: cachedFilterCanvas,\n\t                hit: cachedHitCanvas,\n\t                x: x,\n\t                y: y\n\t            };\n\t\n\t            return this;\n\t        },\n\t        /**\n\t         * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n\t         * The rectangle position is relative to parent container.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Boolean} [skipTransform] flag should we skip transformation to rectangle\n\t         * @returns {Object} rect with {x, y, width, height} properties\n\t         * @example\n\t         * var rect = new Konva.Rect({\n\t         *      width : 100,\n\t         *      height : 100,\n\t         *      x : 50,\n\t         *      y : 50,\n\t         *      strokeWidth : 4,\n\t         *      stroke : 'black',\n\t         *      offsetX : 50,\n\t         *      scaleY : 2\n\t         * });\n\t         *\n\t         * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n\t         * rect.getClientRect(true);\n\t         * // returns {\n\t         * //     x : -2,   // two pixels for stroke / 2\n\t         * //     y : -2,\n\t         * //     width : 104, // increased by 4 for stroke\n\t         * //     height : 104\n\t         * //}\n\t         *\n\t         * // get client rect with transformation applied\n\t         * rect.getClientRect();\n\t         * // returns Object {x: -2, y: 46, width: 104, height: 208}\n\t         */\n\t        getClientRect: function() {\n\t            // abstract method\n\t            // redefine in Container and Shape\n\t            throw new Error('abstract \"getClientRect\" method call');\n\t        },\n\t        _transformedRect: function(rect) {\n\t            var points = [\n\t                {x: rect.x, y: rect.y},\n\t                {x: rect.x + rect.width, y: rect.y},\n\t                {x: rect.x + rect.width, y: rect.y + rect.height},\n\t                {x: rect.x, y: rect.y + rect.height}\n\t            ];\n\t            var minX, minY, maxX, maxY;\n\t            var trans = this.getTransform();\n\t            points.forEach(function(point) {\n\t                var transformed = trans.point(point);\n\t                if (minX === undefined) {\n\t                    minX = maxX = transformed.x;\n\t                    minY = maxY = transformed.y;\n\t                }\n\t                minX = Math.min(minX, transformed.x);\n\t                minY = Math.min(minY, transformed.y);\n\t                maxX = Math.max(maxX, transformed.x);\n\t                maxY = Math.max(maxY, transformed.y);\n\t            });\n\t            return {\n\t                x: minX,\n\t                y: minY,\n\t                width: maxX - minX,\n\t                height: maxY - minY\n\t            };\n\t        },\n\t        _drawCachedSceneCanvas: function(context) {\n\t            context.save();\n\t            context._applyOpacity(this);\n\t            context.translate(\n\t                this._cache.canvas.x,\n\t                this._cache.canvas.y\n\t            );\n\t\n\t            var cacheCanvas = this._getCachedSceneCanvas();\n\t            var ratio = cacheCanvas.pixelRatio;\n\t\n\t            context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n\t            context.restore();\n\t        },\n\t        _drawCachedHitCanvas: function(context) {\n\t            var cachedCanvas = this._cache.canvas,\n\t                hitCanvas = cachedCanvas.hit;\n\t            context.save();\n\t            context.translate(\n\t                this._cache.canvas.x,\n\t                this._cache.canvas.y\n\t            );\n\t            context.drawImage(hitCanvas._canvas, 0, 0);\n\t            context.restore();\n\t        },\n\t        _getCachedSceneCanvas: function() {\n\t            var filters = this.filters(),\n\t                cachedCanvas = this._cache.canvas,\n\t                sceneCanvas = cachedCanvas.scene,\n\t                filterCanvas = cachedCanvas.filter,\n\t                filterContext = filterCanvas.getContext(),\n\t                len, imageData, n, filter;\n\t\n\t            if (filters) {\n\t                if (!this._filterUpToDate) {\n\t                    var ratio = sceneCanvas.pixelRatio;\n\t\n\t                    try {\n\t                        len = filters.length;\n\t                        filterContext.clear();\n\t\n\t                        // copy cached canvas onto filter context\n\t                        filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n\t                        imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n\t\n\t                        // apply filters to filter context\n\t                        for (n = 0; n < len; n++) {\n\t                            filter = filters[n];\n\t                            if (typeof filter !== 'function') {\n\t                                Konva.Util.error(\n\t                                  'Filter should be type of function, but got ' +\n\t                                  (typeof filter) + ' insted. Please check correct filters'\n\t                                );\n\t                                continue;\n\t                            }\n\t                            filter.call(this, imageData);\n\t                            filterContext.putImageData(imageData, 0, 0);\n\t                        }\n\t                    }\n\t                    catch(e) {\n\t                        Konva.Util.error('Unable to apply filter. ' + e.message);\n\t                    }\n\t\n\t                    this._filterUpToDate = true;\n\t                }\n\t\n\t                return filterCanvas;\n\t            }\n\t            return sceneCanvas;\n\t        },\n\t        /**\n\t         * bind events to the node. KonvaJS supports mouseover, mousemove,\n\t         *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, click, dblclick, touchstart, touchmove,\n\t         *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n\t         *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel\n\t         *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n\t         *  and contentDblTap.  Pass in a string of events delimmited by a space to bind multiple events at once\n\t         *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n\t         *  event by name such as 'click.foobar'.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n\t         * @param {Function} handler The handler function is passed an event object\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // add click listener\n\t         * node.on('click', function() {\n\t         *   console.log('you clicked me!');\n\t         * });\n\t         *\n\t         * // get the target node\n\t         * node.on('click', function(evt) {\n\t         *   console.log(evt.target);\n\t         * });\n\t         *\n\t         * // stop event propagation\n\t         * node.on('click', function(evt) {\n\t         *   evt.cancelBubble = true;\n\t         * });\n\t         *\n\t         * // bind multiple listeners\n\t         * node.on('click touchstart', function() {\n\t         *   console.log('you clicked/touched me!');\n\t         * });\n\t         *\n\t         * // namespace listener\n\t         * node.on('click.foo', function() {\n\t         *   console.log('you clicked/touched me!');\n\t         * });\n\t         *\n\t         * // get the event type\n\t         * node.on('click tap', function(evt) {\n\t         *   var eventType = evt.type;\n\t         * });\n\t         *\n\t         * // get native event object\n\t         * node.on('click tap', function(evt) {\n\t         *   var nativeEvent = evt.evt;\n\t         * });\n\t         *\n\t         * // for change events, get the old and new val\n\t         * node.on('xChange', function(evt) {\n\t         *   var oldVal = evt.oldVal;\n\t         *   var newVal = evt.newVal;\n\t         * });\n\t         *\n\t         * // get event targets\n\t         * // with event delegations\n\t         * layer.on('click', 'Group', function(evt) {\n\t         *   var shape = evt.target;\n\t         *   var group = evtn.currentTarger;\n\t         * });\n\t         */\n\t        on: function(evtStr, handler) {\n\t            if (arguments.length === 3) {\n\t                return this._delegate.apply(this, arguments);\n\t            }\n\t            var events = evtStr.split(SPACE),\n\t                len = events.length,\n\t                n, event, parts, baseEvent, name;\n\t\n\t             /*\n\t             * loop through types and attach event listeners to\n\t             * each one.  eg. 'click mouseover.namespace mouseout'\n\t             * will create three event bindings\n\t             */\n\t            for(n = 0; n < len; n++) {\n\t                event = events[n];\n\t                parts = event.split(DOT);\n\t                baseEvent = parts[0];\n\t                name = parts[1] || EMPTY_STRING;\n\t\n\t                // create events array if it doesn't exist\n\t                if(!this.eventListeners[baseEvent]) {\n\t                    this.eventListeners[baseEvent] = [];\n\t                }\n\t\n\t                this.eventListeners[baseEvent].push({\n\t                    name: name,\n\t                    handler: handler\n\t                });\n\t            }\n\t\n\t            return this;\n\t        },\n\t        /**\n\t         * remove event bindings from the node. Pass in a string of\n\t         *  event types delimmited by a space to remove multiple event\n\t         *  bindings at once such as 'mousedown mouseup mousemove'.\n\t         *  include a namespace to remove an event binding by name\n\t         *  such as 'click.foobar'. If you only give a name like '.foobar',\n\t         *  all events in that namespace will be removed.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // remove listener\n\t         * node.off('click');\n\t         *\n\t         * // remove multiple listeners\n\t         * node.off('click touchstart');\n\t         *\n\t         * // remove listener by name\n\t         * node.off('click.foo');\n\t         */\n\t        off: function(evtStr) {\n\t            var events = (evtStr || '').split(SPACE),\n\t                len = events.length,\n\t                n, t, event, parts, baseEvent, name;\n\t\n\t            if (!evtStr) {\n\t                // remove all events\n\t                for(t in this.eventListeners) {\n\t                    this._off(t);\n\t                }\n\t            }\n\t            for(n = 0; n < len; n++) {\n\t                event = events[n];\n\t                parts = event.split(DOT);\n\t                baseEvent = parts[0];\n\t                name = parts[1];\n\t\n\t                if(baseEvent) {\n\t                    if(this.eventListeners[baseEvent]) {\n\t                        this._off(baseEvent, name);\n\t                    }\n\t                }\n\t                else {\n\t                    for(t in this.eventListeners) {\n\t                        this._off(t, name);\n\t                    }\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        // some event aliases for third party integration like HammerJS\n\t        dispatchEvent: function(evt) {\n\t            var e = {\n\t              target: this,\n\t              type: evt.type,\n\t              evt: evt\n\t            };\n\t            this.fire(evt.type, e);\n\t            return this;\n\t        },\n\t        addEventListener: function(type, handler) {\n\t            // we have to pass native event to handler\n\t            this.on(type, function(evt){\n\t                handler.call(this, evt.evt);\n\t            });\n\t            return this;\n\t        },\n\t        removeEventListener: function(type) {\n\t            this.off(type);\n\t            return this;\n\t        },\n\t        // like node.on\n\t        _delegate: function(event, selector, handler) {\n\t            var stopNode = this;\n\t            this.on(event, function(evt) {\n\t                var targets = evt.target.findAncestors(selector, true, stopNode);\n\t                for(var i = 0; i < targets.length; i++) {\n\t                    evt = Konva.Util.cloneObject(evt);\n\t                    evt.currentTarget = targets[i];\n\t                    handler.call(targets[i], evt);\n\t                }\n\t            });\n\t        },\n\t        /**\n\t         * remove self from parent, but don't destroy\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.remove();\n\t         */\n\t        remove: function() {\n\t            var parent = this.getParent();\n\t\n\t            if(parent && parent.children) {\n\t                parent.children.splice(this.index, 1);\n\t                parent._setChildrenIndices();\n\t                delete this.parent;\n\t            }\n\t\n\t            // every cached attr that is calculated via node tree\n\t            // traversal must be cleared when removing a node\n\t            this._clearSelfAndDescendantCache(STAGE);\n\t            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t            this._clearSelfAndDescendantCache(VISIBLE);\n\t            this._clearSelfAndDescendantCache(LISTENING);\n\t            this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\t\n\t            return this;\n\t        },\n\t        /**\n\t         * remove and destroy self\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @example\n\t         * node.destroy();\n\t         */\n\t        destroy: function() {\n\t            // remove from ids and names hashes\n\t            Konva._removeId(this.getId());\n\t            Konva._removeName(this.getName(), this._id);\n\t\n\t            this.remove();\n\t            return this;\n\t        },\n\t        /**\n\t         * get attr\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} attr\n\t         * @returns {Integer|String|Object|Array}\n\t         * @example\n\t         * var x = node.getAttr('x');\n\t         */\n\t        getAttr: function(attr) {\n\t            var method = GET + Konva.Util._capitalize(attr);\n\t            if(Konva.Util._isFunction(this[method])) {\n\t                return this[method]();\n\t            }\n\t            // otherwise get directly\n\t            return this.attrs[attr];\n\t        },\n\t        /**\n\t        * get ancestors\n\t        * @method\n\t        * @memberof Konva.Node.prototype\n\t        * @returns {Konva.Collection}\n\t        * @example\n\t        * shape.getAncestors().each(function(node) {\n\t        *   console.log(node.getId());\n\t        * })\n\t        */\n\t        getAncestors: function() {\n\t            var parent = this.getParent(),\n\t                ancestors = new Konva.Collection();\n\t\n\t            while (parent) {\n\t                ancestors.push(parent);\n\t                parent = parent.getParent();\n\t            }\n\t\n\t            return ancestors;\n\t        },\n\t        /**\n\t         * get attrs object literal\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Object}\n\t         */\n\t        getAttrs: function() {\n\t            return this.attrs || {};\n\t        },\n\t        /**\n\t         * set multiple attrs at once using an object literal\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config object containing key value pairs\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.setAttrs({\n\t         *   x: 5,\n\t         *   fill: 'red'\n\t         * });\n\t         */\n\t        setAttrs: function(config) {\n\t            var key, method;\n\t\n\t            if(!config) {\n\t                return this;\n\t            }\n\t            for(key in config) {\n\t                if (key === CHILDREN) {\n\t                    continue;\n\t                }\n\t                method = SET + Konva.Util._capitalize(key);\n\t                // use setter if available\n\t                if(Konva.Util._isFunction(this[method])) {\n\t                    this[method](config[key]);\n\t                }\n\t                // otherwise set directly\n\t                else {\n\t                    this._setAttr(key, config[key]);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * determine if node is listening for events by taking into account ancestors.\n\t         *\n\t         * Parent    | Self      | isListening\n\t         * listening | listening |\n\t         * ----------+-----------+------------\n\t         * T         | T         | T\n\t         * T         | F         | F\n\t         * F         | T         | T\n\t         * F         | F         | F\n\t         * ----------+-----------+------------\n\t         * T         | I         | T\n\t         * F         | I         | F\n\t         * I         | I         | T\n\t         *\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        isListening: function() {\n\t            return this._getCache(LISTENING, this._isListening);\n\t        },\n\t        _isListening: function() {\n\t            var listening = this.getListening(),\n\t                parent = this.getParent();\n\t\n\t            // the following conditions are a simplification of the truth table above.\n\t            // please modify carefully\n\t            if (listening === 'inherit') {\n\t                if (parent) {\n\t                    return parent.isListening();\n\t                }\n\t                else {\n\t                    return true;\n\t                }\n\t            }\n\t            else {\n\t                return listening;\n\t            }\n\t        },\n\t        /**\n\t         * determine if node is visible by taking into account ancestors.\n\t         *\n\t         * Parent    | Self      | isVisible\n\t         * visible   | visible   |\n\t         * ----------+-----------+------------\n\t         * T         | T         | T\n\t         * T         | F         | F\n\t         * F         | T         | T\n\t         * F         | F         | F\n\t         * ----------+-----------+------------\n\t         * T         | I         | T\n\t         * F         | I         | F\n\t         * I         | I         | T\n\t\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        isVisible: function() {\n\t            return this._getCache(VISIBLE, this._isVisible);\n\t        },\n\t        _isVisible: function() {\n\t            var visible = this.getVisible(),\n\t                parent = this.getParent();\n\t\n\t            // the following conditions are a simplification of the truth table above.\n\t            // please modify carefully\n\t            if (visible === 'inherit') {\n\t                if (parent) {\n\t                    return parent.isVisible();\n\t                }\n\t                else {\n\t                    return true;\n\t                }\n\t            }\n\t            else {\n\t                return visible;\n\t            }\n\t        },\n\t        /**\n\t         * determine if listening is enabled by taking into account descendants.  If self or any children\n\t         * have _isListeningEnabled set to true, then self also has listening enabled.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        shouldDrawHit: function(canvas) {\n\t            var layer = this.getLayer();\n\t            return (canvas && canvas.isCache) || (layer && layer.hitGraphEnabled())\n\t                && this.isListening() && this.isVisible();\n\t        },\n\t        /**\n\t         * show node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t        show: function() {\n\t            this.setVisible(true);\n\t            return this;\n\t        },\n\t        /**\n\t         * hide node.  Hidden nodes are no longer detectable\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t        hide: function() {\n\t            this.setVisible(false);\n\t            return this;\n\t        },\n\t        /**\n\t         * get zIndex relative to the node's siblings who share the same parent\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Integer}\n\t         */\n\t        getZIndex: function() {\n\t            return this.index || 0;\n\t        },\n\t        /**\n\t         * get absolute z-index which takes into account sibling\n\t         *  and ancestor indices\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Integer}\n\t         */\n\t        getAbsoluteZIndex: function() {\n\t            var depth = this.getDepth(),\n\t                that = this,\n\t                index = 0,\n\t                nodes, len, n, child;\n\t\n\t            function addChildren(children) {\n\t                nodes = [];\n\t                len = children.length;\n\t                for(n = 0; n < len; n++) {\n\t                    child = children[n];\n\t                    index++;\n\t\n\t                    if(child.nodeType !== SHAPE) {\n\t                        nodes = nodes.concat(child.getChildren().toArray());\n\t                    }\n\t\n\t                    if(child._id === that._id) {\n\t                        n = len;\n\t                    }\n\t                }\n\t\n\t                if(nodes.length > 0 && nodes[0].getDepth() <= depth) {\n\t                    addChildren(nodes);\n\t                }\n\t            }\n\t            if(that.nodeType !== UPPER_STAGE) {\n\t                addChildren(that.getStage().getChildren());\n\t            }\n\t\n\t            return index;\n\t        },\n\t        /**\n\t         * get node depth in node tree.  Returns an integer.\n\t         *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n\t         *  be >= 2\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Integer}\n\t         */\n\t        getDepth: function() {\n\t            var depth = 0,\n\t                parent = this.parent;\n\t\n\t            while(parent) {\n\t                depth++;\n\t                parent = parent.parent;\n\t            }\n\t            return depth;\n\t        },\n\t        setPosition: function(pos) {\n\t            this.setX(pos.x);\n\t            this.setY(pos.y);\n\t            return this;\n\t        },\n\t        getPosition: function() {\n\t            return {\n\t                x: this.getX(),\n\t                y: this.getY()\n\t            };\n\t        },\n\t        /**\n\t         * get absolute position relative to the top left corner of the stage container div\n\t         * or relative to passed node\n\t         * @method\n\t         * @param {Object} [top] optional parent node\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Object}\n\t         */\n\t        getAbsolutePosition: function(top) {\n\t            var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n\t                absoluteTransform = new Konva.Transform(),\n\t                offset = this.offset();\n\t\n\t            // clone the matrix array\n\t            absoluteTransform.m = absoluteMatrix.slice();\n\t            absoluteTransform.translate(offset.x, offset.y);\n\t\n\t            return absoluteTransform.getTranslation();\n\t        },\n\t        /**\n\t         * set absolute position\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @returns {Konva.Node}\n\t         */\n\t        setAbsolutePosition: function(pos) {\n\t            var origTrans = this._clearTransform(),\n\t                it;\n\t\n\t            // don't clear translation\n\t            this.attrs.x = origTrans.x;\n\t            this.attrs.y = origTrans.y;\n\t            delete origTrans.x;\n\t            delete origTrans.y;\n\t\n\t            // unravel transform\n\t            it = this.getAbsoluteTransform();\n\t\n\t            it.invert();\n\t            it.translate(pos.x, pos.y);\n\t            pos = {\n\t                x: this.attrs.x + it.getTranslation().x,\n\t                y: this.attrs.y + it.getTranslation().y\n\t            };\n\t\n\t            this.setPosition({x: pos.x, y: pos.y});\n\t            this._setTransform(origTrans);\n\t\n\t            return this;\n\t        },\n\t        _setTransform: function(trans) {\n\t            var key;\n\t\n\t            for(key in trans) {\n\t                this.attrs[key] = trans[key];\n\t            }\n\t\n\t            this._clearCache(TRANSFORM);\n\t            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t        },\n\t        _clearTransform: function() {\n\t            var trans = {\n\t                x: this.getX(),\n\t                y: this.getY(),\n\t                rotation: this.getRotation(),\n\t                scaleX: this.getScaleX(),\n\t                scaleY: this.getScaleY(),\n\t                offsetX: this.getOffsetX(),\n\t                offsetY: this.getOffsetY(),\n\t                skewX: this.getSkewX(),\n\t                skewY: this.getSkewY()\n\t            };\n\t\n\t            this.attrs.x = 0;\n\t            this.attrs.y = 0;\n\t            this.attrs.rotation = 0;\n\t            this.attrs.scaleX = 1;\n\t            this.attrs.scaleY = 1;\n\t            this.attrs.offsetX = 0;\n\t            this.attrs.offsetY = 0;\n\t            this.attrs.skewX = 0;\n\t            this.attrs.skewY = 0;\n\t\n\t            this._clearCache(TRANSFORM);\n\t            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t\n\t            // return original transform\n\t            return trans;\n\t        },\n\t        /**\n\t         * move node by an amount relative to its current position\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} change\n\t         * @param {Number} change.x\n\t         * @param {Number} change.y\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // move node in x direction by 1px and y direction by 2px\n\t         * node.move({\n\t         *   x: 1,\n\t         *   y: 2)\n\t         * });\n\t         */\n\t        move: function(change) {\n\t            var changeX = change.x,\n\t                changeY = change.y,\n\t                x = this.getX(),\n\t                y = this.getY();\n\t\n\t            if(changeX !== undefined) {\n\t                x += changeX;\n\t            }\n\t\n\t            if(changeY !== undefined) {\n\t                y += changeY;\n\t            }\n\t\n\t            this.setPosition({x: x, y: y});\n\t            return this;\n\t        },\n\t        _eachAncestorReverse: function(func, top) {\n\t            var family = [],\n\t                parent = this.getParent(),\n\t                len, n;\n\t\n\t            // if top node is defined, and this node is top node,\n\t            // there's no need to build a family tree.  just execute\n\t            // func with this because it will be the only node\n\t            if (top && top._id === this._id) {\n\t                func(this);\n\t                return true;\n\t            }\n\t\n\t            family.unshift(this);\n\t\n\t            while(parent && (!top || parent._id !== top._id)) {\n\t                family.unshift(parent);\n\t                parent = parent.parent;\n\t            }\n\t\n\t            len = family.length;\n\t            for(n = 0; n < len; n++) {\n\t                func(family[n]);\n\t            }\n\t        },\n\t        /**\n\t         * rotate node by an amount in degrees relative to its current rotation\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Number} theta\n\t         * @returns {Konva.Node}\n\t         */\n\t        rotate: function(theta) {\n\t            this.setRotation(this.getRotation() + theta);\n\t            return this;\n\t        },\n\t        /**\n\t         * move node to the top of its siblings\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        moveToTop: function() {\n\t            if (!this.parent) {\n\t                Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n\t                return false;\n\t            }\n\t            var index = this.index;\n\t            this.parent.children.splice(index, 1);\n\t            this.parent.children.push(this);\n\t            this.parent._setChildrenIndices();\n\t            return true;\n\t        },\n\t        /**\n\t         * move node up\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean} flag is moved or not\n\t         */\n\t        moveUp: function() {\n\t            if (!this.parent) {\n\t                Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n\t                return false;\n\t            }\n\t            var index = this.index,\n\t                len = this.parent.getChildren().length;\n\t            if(index < len - 1) {\n\t                this.parent.children.splice(index, 1);\n\t                this.parent.children.splice(index + 1, 0, this);\n\t                this.parent._setChildrenIndices();\n\t                return true;\n\t            }\n\t            return false;\n\t        },\n\t        /**\n\t         * move node down\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        moveDown: function() {\n\t            if (!this.parent) {\n\t                Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n\t                return false;\n\t            }\n\t            var index = this.index;\n\t            if(index > 0) {\n\t                this.parent.children.splice(index, 1);\n\t                this.parent.children.splice(index - 1, 0, this);\n\t                this.parent._setChildrenIndices();\n\t                return true;\n\t            }\n\t            return false;\n\t        },\n\t        /**\n\t         * move node to the bottom of its siblings\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        moveToBottom: function() {\n\t            if (!this.parent) {\n\t                Konva.Util.warn('Node has no parent. moveToBottom function is ignored.');\n\t                return false;\n\t            }\n\t            var index = this.index;\n\t            if(index > 0) {\n\t                this.parent.children.splice(index, 1);\n\t                this.parent.children.unshift(this);\n\t                this.parent._setChildrenIndices();\n\t                return true;\n\t            }\n\t            return false;\n\t        },\n\t        /**\n\t         * set zIndex relative to siblings\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Integer} zIndex\n\t         * @returns {Konva.Node}\n\t         */\n\t        setZIndex: function(zIndex) {\n\t            if (!this.parent) {\n\t                Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n\t                return false;\n\t            }\n\t            var index = this.index;\n\t            this.parent.children.splice(index, 1);\n\t            this.parent.children.splice(zIndex, 0, this);\n\t            this.parent._setChildrenIndices();\n\t            return this;\n\t        },\n\t        /**\n\t         * get absolute opacity\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Number}\n\t         */\n\t        getAbsoluteOpacity: function() {\n\t            return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n\t        },\n\t        _getAbsoluteOpacity: function() {\n\t            var absOpacity = this.getOpacity();\n\t            if(this.getParent()) {\n\t                absOpacity *= this.getParent().getAbsoluteOpacity();\n\t            }\n\t            return absOpacity;\n\t        },\n\t        /**\n\t         * move node to another container\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Container} newContainer\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // move node from current layer into layer2\n\t         * node.moveTo(layer2);\n\t         */\n\t        moveTo: function(newContainer) {\n\t            // do nothing if new container is already parent\n\t            if (this.getParent() !== newContainer) {\n\t                this.remove();\n\t                newContainer.add(this);\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * convert Node into an object for serialization.  Returns an object.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Object}\n\t         */\n\t        toObject: function() {\n\t            var obj = {},\n\t                attrs = this.getAttrs(),\n\t                key, val, getter, defaultValue;\n\t\n\t            obj.attrs = {};\n\t\n\t            for(key in attrs) {\n\t                val = attrs[key];\n\t                getter = this[key];\n\t                // remove attr value so that we can extract the default value from the getter\n\t                delete attrs[key];\n\t                defaultValue = getter ? getter.call(this) : null;\n\t                // restore attr value\n\t                attrs[key] = val;\n\t                if (defaultValue !== val) {\n\t                    obj.attrs[key] = val;\n\t                }\n\t            }\n\t\n\t            obj.className = this.getClassName();\n\t            return Konva.Util._prepareToStringify(obj);\n\t        },\n\t        /**\n\t         * convert Node into a JSON string.  Returns a JSON string.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {String}}\n\t         */\n\t        toJSON: function() {\n\t            return JSON.stringify(this.toObject());\n\t        },\n\t        /**\n\t         * get parent container\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t        getParent: function() {\n\t            return this.parent;\n\t        },\n\t        /**\n\t         * get all ancestros (parent then parent of the parent, etc) of the node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} [selector] selector for search\n\t         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n\t         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n\t         * @returns {Array} [ancestors]\n\t         * @example\n\t         * // get one of the parent group\n\t         * var parentGroups = node.findAncestors('Group');\n\t         */\n\t        findAncestors: function(selector, includeSelf, stopNode) {\n\t            var res = [];\n\t\n\t            if (includeSelf && this._isMatch(selector)) {\n\t                res.push(this);\n\t            }\n\t            var ancestor = this.parent;\n\t            while(ancestor) {\n\t                if (ancestor === stopNode) {\n\t                    return res;\n\t                }\n\t                if (ancestor._isMatch(selector)) {\n\t                    res.push(ancestor);\n\t                }\n\t                ancestor = ancestor.parent;\n\t            }\n\t            return res;\n\t        },\n\t        /**\n\t         * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} [selector] selector for search\n\t         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n\t         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n\t         * @returns {Konva.Node} ancestor\n\t         * @example\n\t         * // get one of the parent group\n\t         * var group = node.findAncestors('.mygroup');\n\t         */\n\t        findAncestor: function(selector, includeSelf, stopNode) {\n\t            return this.findAncestors(selector, includeSelf, stopNode)[0];\n\t        },\n\t        // is current node match passed selector?\n\t        _isMatch: function(selector) {\n\t            if (!selector) {\n\t                return false;\n\t            }\n\t            var selectorArr = selector.replace(/ /g, '').split(','),\n\t                len = selectorArr.length,\n\t                n, sel;\n\t\n\t            for (n = 0; n < len; n++) {\n\t                sel = selectorArr[n];\n\t                if (!Konva.Util.isValidSelector(sel)) {\n\t                    Konva.Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n\t                    Konva.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n\t                    Konva.Util.warn('Konva is awesome, right?');\n\t                }\n\t                // id selector\n\t                if(sel.charAt(0) === '#') {\n\t                    if (this.id() === sel.slice(1)) {\n\t                        return true;\n\t                    }\n\t                }\n\t                // name selector\n\t                else if(sel.charAt(0) === '.') {\n\t                    if (this.hasName(sel.slice(1))) {\n\t                        return true;\n\t                    }\n\t                } else if (this._get(sel).length !== 0) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t        /**\n\t         * get layer ancestor\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Layer}\n\t         */\n\t        getLayer: function() {\n\t            var parent = this.getParent();\n\t            return parent ? parent.getLayer() : null;\n\t        },\n\t        /**\n\t         * get stage ancestor\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Stage}\n\t         */\n\t        getStage: function() {\n\t            return this._getCache(STAGE, this._getStage);\n\t        },\n\t        _getStage: function() {\n\t            var parent = this.getParent();\n\t            if(parent) {\n\t                return parent.getStage();\n\t            }\n\t            else {\n\t                return undefined;\n\t            }\n\t        },\n\t        /**\n\t         * fire event\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n\t         * @param {Event} [evt] event object\n\t         * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n\t         *  not bubbling.  Setting the value to true will result in the event bubbling.\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // manually fire click event\n\t         * node.fire('click');\n\t         *\n\t         * // fire custom event\n\t         * node.fire('foo');\n\t         *\n\t         * // fire custom event with custom event object\n\t         * node.fire('foo', {\n\t         *   bar: 10\n\t         * });\n\t         *\n\t         * // fire click event that bubbles\n\t         * node.fire('click', null, true);\n\t         */\n\t        fire: function(eventType, evt, bubble) {\n\t            evt = evt || {};\n\t            evt.target = evt.target || this;\n\t            // bubble\n\t            if (bubble) {\n\t                this._fireAndBubble(eventType, evt);\n\t            }\n\t            // no bubble\n\t            else {\n\t                this._fire(eventType, evt);\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * get absolute transform of the node which takes into\n\t         *  account its ancestor transforms\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t        getAbsoluteTransform: function(top) {\n\t            // if using an argument, we can't cache the result.\n\t            if (top) {\n\t                return this._getAbsoluteTransform(top);\n\t            }\n\t            // if no argument, we can cache the result\n\t            else {\n\t                return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n\t            }\n\t        },\n\t        _getAbsoluteTransform: function(top) {\n\t            var at = new Konva.Transform(),\n\t                transformsEnabled, trans;\n\t\n\t            // start with stage and traverse downwards to self\n\t            this._eachAncestorReverse(function(node) {\n\t                transformsEnabled = node.transformsEnabled();\n\t                trans = node.getTransform();\n\t\n\t                if (transformsEnabled === 'all') {\n\t                    at.multiply(trans);\n\t                }\n\t                else if (transformsEnabled === 'position') {\n\t                    at.translate(node.x(), node.y());\n\t                }\n\t            }, top);\n\t            return at;\n\t        },\n\t        /**\n\t         * get absolute scale of the node which takes into\n\t         *  account its ancestor scales\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t        getAbsoluteScale: function(top) {\n\t            // if using an argument, we can't cache the result.\n\t            if (top) {\n\t                return this._getAbsoluteTransform(top);\n\t            }\n\t            // if no argument, we can cache the result\n\t            else {\n\t                return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n\t            }\n\t        },\n\t        _getAbsoluteScale: function(top) {\n\t            var scaleX = 1, scaleY = 1;\n\t\n\t            // start with stage and traverse downwards to self\n\t            this._eachAncestorReverse(function(node) {\n\t                scaleX *= node.scaleX();\n\t                scaleY *= node.scaleY();\n\t            }, top);\n\t            return {\n\t                x: scaleX,\n\t                y: scaleY\n\t            };\n\t        },\n\t        /**\n\t         * get transform of the node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t        getTransform: function() {\n\t            return this._getCache(TRANSFORM, this._getTransform);\n\t        },\n\t        _getTransform: function() {\n\t            var m = new Konva.Transform(),\n\t                x = this.getX(),\n\t                y = this.getY(),\n\t                rotation = Konva.getAngle(this.getRotation()),\n\t                scaleX = this.getScaleX(),\n\t                scaleY = this.getScaleY(),\n\t                skewX = this.getSkewX(),\n\t                skewY = this.getSkewY(),\n\t                offsetX = this.getOffsetX(),\n\t                offsetY = this.getOffsetY();\n\t\n\t            if(x !== 0 || y !== 0) {\n\t                m.translate(x, y);\n\t            }\n\t            if(rotation !== 0) {\n\t                m.rotate(rotation);\n\t            }\n\t            if(skewX !== 0 || skewY !== 0) {\n\t                m.skew(skewX, skewY);\n\t            }\n\t            if(scaleX !== 1 || scaleY !== 1) {\n\t                m.scale(scaleX, scaleY);\n\t            }\n\t            if(offsetX !== 0 || offsetY !== 0) {\n\t                m.translate(-1 * offsetX, -1 * offsetY);\n\t            }\n\t\n\t            return m;\n\t        },\n\t        /**\n\t         * clone node.  Returns a new Node instance with identical attributes.  You can also override\n\t         *  the node properties with an object literal, enabling you to use an existing node as a template\n\t         *  for another node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} obj override attrs\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // simple clone\n\t         * var clone = node.clone();\n\t         *\n\t         * // clone a node and override the x position\n\t         * var clone = rect.clone({\n\t         *   x: 5\n\t         * });\n\t         */\n\t        clone: function(obj) {\n\t            // instantiate new node\n\t            var attrs = Konva.Util.cloneObject(this.attrs),\n\t                key, allListeners, len, n, listener;\n\t            // filter black attrs\n\t            for (var i in CLONE_BLACK_LIST) {\n\t                var blockAttr = CLONE_BLACK_LIST[i];\n\t                delete attrs[blockAttr];\n\t            }\n\t            // apply attr overrides\n\t            for (key in obj) {\n\t                attrs[key] = obj[key];\n\t            }\n\t\n\t            var node = new this.constructor(attrs);\n\t            // copy over listeners\n\t            for(key in this.eventListeners) {\n\t                allListeners = this.eventListeners[key];\n\t                len = allListeners.length;\n\t                for(n = 0; n < len; n++) {\n\t                    listener = allListeners[n];\n\t                    /*\n\t                     * don't include konva namespaced listeners because\n\t                     *  these are generated by the constructors\n\t                     */\n\t                    if(listener.name.indexOf(KONVA) < 0) {\n\t                        // if listeners array doesn't exist, then create it\n\t                        if(!node.eventListeners[key]) {\n\t                            node.eventListeners[key] = [];\n\t                        }\n\t                        node.eventListeners[key].push(listener);\n\t                    }\n\t                }\n\t            }\n\t            return node;\n\t        },\n\t        /**\n\t         * Creates a composite data URL. If MIME type is not\n\t         * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n\t         * level as quality (range 0.0 - 1.0)\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image url. Default is 1\n\t         * @returns {String}\n\t         */\n\t        toDataURL: function(config) {\n\t            config = config || {};\n\t\n\t            var mimeType = config.mimeType || null,\n\t                quality = config.quality || null,\n\t                stage = this.getStage(),\n\t                x = config.x || 0,\n\t                y = config.y || 0,\n\t                pixelRatio = config.pixelRatio || 1,\n\t                canvas = new Konva.SceneCanvas({\n\t                    width: config.width || this.getWidth() || (stage ? stage.getWidth() : 0),\n\t                    height: config.height || this.getHeight() || (stage ? stage.getHeight() : 0),\n\t                    pixelRatio: pixelRatio\n\t                }),\n\t                context = canvas.getContext();\n\t\n\t            context.save();\n\t\n\t            if(x || y) {\n\t                context.translate(-1 * x, -1 * y);\n\t            }\n\t\n\t            this.drawScene(canvas);\n\t            context.restore();\n\t\n\t            return canvas.toDataURL(mimeType, quality);\n\t        },\n\t        /**\n\t         * converts node into an image.  Since the toImage\n\t         *  method is asynchronous, a callback is required.  toImage is most commonly used\n\t         *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config\n\t         * @param {Function} config.callback function executed when the composite has completed\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n\t         * @example\n\t         * var image = node.toImage({\n\t         *   callback: function(img) {\n\t         *     // do stuff with img\n\t         *   }\n\t         * });\n\t         */\n\t        toImage: function(config) {\n\t            if (!config || !config.callback) {\n\t                throw 'callback required for toImage method config argument';\n\t            }\n\t            Konva.Util._getImage(this.toDataURL(config), function(img) {\n\t                config.callback(img);\n\t            });\n\t        },\n\t        setSize: function(size) {\n\t            this.setWidth(size.width);\n\t            this.setHeight(size.height);\n\t            return this;\n\t        },\n\t        getSize: function() {\n\t            return {\n\t                width: this.getWidth(),\n\t                height: this.getHeight()\n\t            };\n\t        },\n\t        getWidth: function() {\n\t            return this.attrs.width || 0;\n\t        },\n\t        getHeight: function() {\n\t            return this.attrs.height || 0;\n\t        },\n\t        /**\n\t         * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {String}\n\t         */\n\t        getClassName: function() {\n\t            return this.className || this.nodeType;\n\t        },\n\t        /**\n\t         * get the node type, which may return Stage, Layer, Group, or Node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {String}\n\t         */\n\t        getType: function() {\n\t            return this.nodeType;\n\t        },\n\t        getDragDistance: function() {\n\t            // compare with undefined because we need to track 0 value\n\t            if (this.attrs.dragDistance !== undefined) {\n\t                return this.attrs.dragDistance;\n\t            } else if (this.parent) {\n\t                return this.parent.getDragDistance();\n\t            } else {\n\t                return Konva.dragDistance;\n\t            }\n\t        },\n\t        _get: function(selector) {\n\t            return this.className === selector || this.nodeType === selector ? [this] : [];\n\t        },\n\t        _off: function(type, name) {\n\t            var evtListeners = this.eventListeners[type],\n\t                i, evtName;\n\t\n\t            for(i = 0; i < evtListeners.length; i++) {\n\t                evtName = evtListeners[i].name;\n\t                // the following two conditions must be true in order to remove a handler:\n\t                // 1) the current event name cannot be konva unless the event name is konva\n\t                //    this enables developers to force remove a konva specific listener for whatever reason\n\t                // 2) an event name is not specified, or if one is specified, it matches the current event name\n\t                if((evtName !== 'konva' || name === 'konva') && (!name || evtName === name)) {\n\t                    evtListeners.splice(i, 1);\n\t                    if(evtListeners.length === 0) {\n\t                        delete this.eventListeners[type];\n\t                        break;\n\t                    }\n\t                    i--;\n\t                }\n\t            }\n\t        },\n\t        _fireChangeEvent: function(attr, oldVal, newVal) {\n\t            this._fire(attr + CHANGE, {\n\t                oldVal: oldVal,\n\t                newVal: newVal\n\t            });\n\t        },\n\t        setId: function(id) {\n\t            var oldId = this.getId();\n\t\n\t            Konva._removeId(oldId);\n\t            Konva._addId(this, id);\n\t            this._setAttr(ID, id);\n\t            return this;\n\t        },\n\t        setName: function(name) {\n\t            var oldNames = (this.getName() || '').split(/\\s/g);\n\t            var newNames = (name || '').split(/\\s/g);\n\t            var subname, i;\n\t            // remove all subnames\n\t            for(i = 0; i < oldNames.length; i++) {\n\t                subname = oldNames[i];\n\t                if ((newNames.indexOf(subname)) === -1 && subname) {\n\t                    Konva._removeName(subname, this._id);\n\t                }\n\t            }\n\t\n\t            // add new names\n\t            for(i = 0; i < newNames.length; i++) {\n\t                subname = newNames[i];\n\t                if ((oldNames.indexOf(subname) === -1) && subname) {\n\t                    Konva._addName(this, subname);\n\t                }\n\t            }\n\t\n\t            this._setAttr(NAME, name);\n\t            return this;\n\t        },\n\t        // naming methods\n\t        /**\n\t         * add name to node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} name\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.name('red');\n\t         * node.addName('selected');\n\t         * node.name(); // return 'red selected'\n\t         */\n\t        addName: function(name) {\n\t            if (!this.hasName(name)) {\n\t                var oldName = this.name();\n\t                var newName = oldName ? (oldName + ' ' + name) : name;\n\t                this.setName(newName);\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * check is node has name\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} name\n\t         * @returns {Boolean}\n\t         * @example\n\t         * node.name('red');\n\t         * node.hasName('red');   // return true\n\t         * node.hasName('selected'); // return false\n\t         */\n\t        hasName: function(name) {\n\t            var names = (this.name() || '').split(/\\s/g);\n\t            return names.indexOf(name) !== -1;\n\t        },\n\t        /**\n\t         * remove name from node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} name\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.name('red selected');\n\t         * node.removeName('selected');\n\t         * node.hasName('selected'); // return false\n\t         * node.name(); // return 'red'\n\t         */\n\t        removeName: function(name) {\n\t            var names = (this.name() || '').split(/\\s/g);\n\t            var index = names.indexOf(name);\n\t            if (index !== -1) {\n\t                names.splice(index, 1);\n\t                this.setName(names.join(' '));\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * set attr\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} attr\n\t         * @param {*} val\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.setAttr('x', 5);\n\t         */\n\t        setAttr: function(attr, val) {\n\t            var method = SET + Konva.Util._capitalize(attr),\n\t                func = this[method];\n\t\n\t            if(Konva.Util._isFunction(func)) {\n\t                func.call(this, val);\n\t            }\n\t            // otherwise set directly\n\t            else {\n\t                this._setAttr(attr, val);\n\t            }\n\t            return this;\n\t        },\n\t        _setAttr: function(key, val) {\n\t            var oldVal;\n\t            oldVal = this.attrs[key];\n\t            if (oldVal === val) {\n\t                return;\n\t            }\n\t            if (val === undefined || val === null) {\n\t              delete this.attrs[key];\n\t            } else {\n\t              this.attrs[key] = val;\n\t            }\n\t            this._fireChangeEvent(key, oldVal, val);\n\t        },\n\t        _setComponentAttr: function(key, component, val) {\n\t            var oldVal;\n\t            if(val !== undefined) {\n\t                oldVal = this.attrs[key];\n\t\n\t                if (!oldVal) {\n\t                    // set value to default value using getAttr\n\t                    this.attrs[key] = this.getAttr(key);\n\t                }\n\t\n\t                this.attrs[key][component] = val;\n\t                this._fireChangeEvent(key, oldVal, val);\n\t            }\n\t        },\n\t        _fireAndBubble: function(eventType, evt, compareShape) {\n\t            var okayToRun = true;\n\t\n\t            if(evt && this.nodeType === SHAPE) {\n\t                evt.target = this;\n\t            }\n\t\n\t            if(eventType === MOUSEENTER && compareShape && (this._id === compareShape._id || (this.isAncestorOf && this.isAncestorOf(compareShape)))) {\n\t                okayToRun = false;\n\t            }\n\t            else if(eventType === MOUSELEAVE && compareShape && (this._id === compareShape._id || (this.isAncestorOf && this.isAncestorOf(compareShape)))) {\n\t                okayToRun = false;\n\t            }\n\t            if(okayToRun) {\n\t                this._fire(eventType, evt);\n\t\n\t                // simulate event bubbling\n\t                var stopBubble =\n\t                    (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n\t                    ((compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent)));\n\t                if((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && (!stopBubble)) {\n\t                    if (compareShape && compareShape.parent) {\n\t                        this._fireAndBubble.call(this.parent, eventType, evt, compareShape.parent);\n\t                    }\n\t                    else {\n\t                        this._fireAndBubble.call(this.parent, eventType, evt);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        _fire: function(eventType, evt) {\n\t            var events = this.eventListeners[eventType],\n\t                i;\n\t\n\t            evt = evt || {};\n\t            evt.currentTarget = this;\n\t            evt.type = eventType;\n\t\n\t            if (events) {\n\t                for(i = 0; i < events.length; i++) {\n\t                    events[i].handler.call(this, evt);\n\t                }\n\t            }\n\t        },\n\t        /**\n\t         * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t        draw: function() {\n\t            this.drawScene();\n\t            this.drawHit();\n\t            return this;\n\t        }\n\t    });\n\t\n\t    /**\n\t     * create node with JSON string or an Object.  De-serializtion does not generate custom\n\t     *  shape drawing functions, images, or event handlers (this would make the\n\t     *  serialized object huge).  If your app uses custom shapes, images, and\n\t     *  event handlers (it probably does), then you need to select the appropriate\n\t     *  shapes after loading the stage and set these properties via on(), setDrawFunc(),\n\t     *  and setImage() methods\n\t     * @method\n\t     * @memberof Konva.Node\n\t     * @param {String|Object} json string or object\n\t     * @param {Element} [container] optional container dom element used only if you're\n\t     *  creating a stage node\n\t     */\n\t    Konva.Node.create = function(data, container) {\n\t        if (Konva.Util._isString(data)) {\n\t            data = JSON.parse(data);\n\t        }\n\t        return this._createNode(data, container);\n\t    };\n\t    Konva.Node._createNode = function(obj, container) {\n\t        var className = Konva.Node.prototype.getClassName.call(obj),\n\t            children = obj.children,\n\t            no, len, n;\n\t\n\t        // if container was passed in, add it to attrs\n\t        if(container) {\n\t            obj.attrs.container = container;\n\t        }\n\t\n\t        no = new Konva[className](obj.attrs);\n\t        if(children) {\n\t            len = children.length;\n\t            for(n = 0; n < len; n++) {\n\t                no.add(this._createNode(children[n]));\n\t            }\n\t        }\n\t\n\t        return no;\n\t    };\n\t\n\t\n\t    // =========================== add getters setters ===========================\n\t\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n\t    /**\n\t     * get/set node position relative to parent\n\t     * @name position\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} pos\n\t     * @param {Number} pos.x\n\t     * @param {Number} pos.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get position\n\t     * var position = node.position();\n\t     *\n\t     * // set position\n\t     * node.position({\n\t     *   x: 5\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'x', 0);\n\t\n\t    /**\n\t     * get/set x position\n\t     * @name x\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} x\n\t     * @returns {Object}\n\t     * @example\n\t     * // get x\n\t     * var x = node.x();\n\t     *\n\t     * // set x\n\t     * node.x(5);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'y', 0);\n\t\n\t    /**\n\t     * get/set y position\n\t     * @name y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} y\n\t     * @returns {Integer}\n\t     * @example\n\t     * // get y\n\t     * var y = node.y();\n\t     *\n\t     * // set y\n\t     * node.y(5);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'opacity', 1);\n\t\n\t    /**\n\t     * get/set opacity.  Opacity values range from 0 to 1.\n\t     *  A node with an opacity of 0 is fully transparent, and a node\n\t     *  with an opacity of 1 is fully opaque\n\t     * @name opacity\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} opacity\n\t     * @returns {Number}\n\t     * @example\n\t     * // get opacity\n\t     * var opacity = node.opacity();\n\t     *\n\t     * // set opacity\n\t     * node.opacity(0.5);\n\t     */\n\t\n\t    Konva.Factory.addGetter(Konva.Node, 'name');\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\t\n\t    /**\n\t     * get/set name\n\t     * @name name\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {String} name\n\t     * @returns {String}\n\t     * @example\n\t     * // get name\n\t     * var name = node.name();\n\t     *\n\t     * // set name\n\t     * node.name('foo');\n\t     *\n\t     * // also node may have multiple names (as css classes)\n\t     * node.name('foo bar');\n\t     */\n\t\n\t    Konva.Factory.addGetter(Konva.Node, 'id');\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\t\n\t    /**\n\t     * get/set id. Id is global for whole page.\n\t     * @name id\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {String} id\n\t     * @returns {String}\n\t     * @example\n\t     * // get id\n\t     * var name = node.id();\n\t     *\n\t     * // set id\n\t     * node.id('foo');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'rotation', 0);\n\t\n\t    /**\n\t     * get/set rotation in degrees\n\t     * @name rotation\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} rotation\n\t     * @returns {Number}\n\t     * @example\n\t     * // get rotation in degrees\n\t     * var rotation = node.rotation();\n\t     *\n\t     * // set rotation in degrees\n\t     * node.rotation(45);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set scale\n\t     * @name scale\n\t     * @param {Object} scale\n\t     * @param {Number} scale.x\n\t     * @param {Number} scale.y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Object}\n\t     * @example\n\t     * // get scale\n\t     * var scale = node.scale();\n\t     *\n\t     * // set scale\n\t     * shape.scale({\n\t     *   x: 2\n\t     *   y: 3\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'scaleX', 1);\n\t\n\t    /**\n\t     * get/set scale x\n\t     * @name scaleX\n\t     * @param {Number} x\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get scale x\n\t     * var scaleX = node.scaleX();\n\t     *\n\t     * // set scale x\n\t     * node.scaleX(2);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'scaleY', 1);\n\t\n\t    /**\n\t     * get/set scale y\n\t     * @name scaleY\n\t     * @param {Number} y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get scale y\n\t     * var scaleY = node.scaleY();\n\t     *\n\t     * // set scale y\n\t     * node.scaleY(2);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set skew\n\t     * @name skew\n\t     * @param {Object} skew\n\t     * @param {Number} skew.x\n\t     * @param {Number} skew.y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Object}\n\t     * @example\n\t     * // get skew\n\t     * var skew = node.skew();\n\t     *\n\t     * // set skew\n\t     * node.skew({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'skewX', 0);\n\t\n\t    /**\n\t     * get/set skew x\n\t     * @name skewX\n\t     * @param {Number} x\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get skew x\n\t     * var skewX = node.skewX();\n\t     *\n\t     * // set skew x\n\t     * node.skewX(3);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'skewY', 0);\n\t\n\t    /**\n\t     * get/set skew y\n\t     * @name skewY\n\t     * @param {Number} y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get skew y\n\t     * var skewY = node.skewY();\n\t     *\n\t     * // set skew y\n\t     * node.skewY(3);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set offset.  Offsets the default position and rotation point\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} offset\n\t     * @param {Number} offset.x\n\t     * @param {Number} offset.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get offset\n\t     * var offset = node.offset();\n\t     *\n\t     * // set offset\n\t     * node.offset({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'offsetX', 0);\n\t\n\t    /**\n\t     * get/set offset x\n\t     * @name offsetX\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get offset x\n\t     * var offsetX = node.offsetX();\n\t     *\n\t     * // set offset x\n\t     * node.offsetX(3);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'offsetY', 0);\n\t\n\t    /**\n\t     * get/set offset y\n\t     * @name offsetY\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get offset y\n\t     * var offsetY = node.offsetY();\n\t     *\n\t     * // set offset y\n\t     * node.offsetY(3);\n\t     */\n\t\n\t    Konva.Factory.addSetter(Konva.Node, 'dragDistance');\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\t\n\t    /**\n\t     * get/set drag distance\n\t     * @name dragDistance\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} distance\n\t     * @returns {Number}\n\t     * @example\n\t     * // get drag distance\n\t     * var dragDistance = node.dragDistance();\n\t     *\n\t     * // set distance\n\t     * // node starts dragging only if pointer moved more then 3 pixels\n\t     * node.dragDistance(3);\n\t     * // or set globally\n\t     * Konva.dragDistance = 3;\n\t     */\n\t\n\t\n\t    Konva.Factory.addSetter(Konva.Node, 'width', 0);\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n\t    /**\n\t     * get/set width\n\t     * @name width\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} width\n\t     * @returns {Number}\n\t     * @example\n\t     * // get width\n\t     * var width = node.width();\n\t     *\n\t     * // set width\n\t     * node.width(100);\n\t     */\n\t\n\t    Konva.Factory.addSetter(Konva.Node, 'height', 0);\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n\t    /**\n\t     * get/set height\n\t     * @name height\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} height\n\t     * @returns {Number}\n\t     * @example\n\t     * // get height\n\t     * var height = node.height();\n\t     *\n\t     * // set height\n\t     * node.height(100);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit');\n\t    /**\n\t     * get/set listenig attr.  If you need to determine if a node is listening or not\n\t     *   by taking into account its parents, use the isListening() method\n\t     * @name listening\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n\t     * @returns {Boolean|String}\n\t     * @example\n\t     * // get listening attr\n\t     * var listening = node.listening();\n\t     *\n\t     * // stop listening for events\n\t     * node.listening(false);\n\t     *\n\t     * // listen for events\n\t     * node.listening(true);\n\t     *\n\t     * // listen to events according to the parent\n\t     * node.listening('inherit');\n\t     */\n\t\n\t\n\t\n\t     /**\n\t      * get/set preventDefault\n\t      * By default all shapes will prevent default behaviour\n\t      * of a browser on a pointer move or tap.\n\t      * that will prevent native scrolling when you are trying to drag&drop a node\n\t      * but sometimes you may need to enable default actions\n\t      * in that case you can set the property to false\n\t      * @name preventDefault\n\t      * @method\n\t      * @memberof Konva.Node.prototype\n\t      * @param {Number} preventDefault\n\t      * @returns {Number}\n\t      * @example\n\t      * // get preventDefault\n\t      * var shouldPrevent = shape.preventDefault();\n\t      *\n\t      * // set preventDefault\n\t      * shape.preventDefault(false);\n\t      */\n\t\n\t     Konva.Factory.addGetterSetter(Konva.Node, 'preventDefault', true);\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'filters', undefined, function(val) {this._filterUpToDate = false; return val; });\n\t    /**\n\t     * get/set filters.  Filters are applied to cached canvases\n\t     * @name filters\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Array} filters array of filters\n\t     * @returns {Array}\n\t     * @example\n\t     * // get filters\n\t     * var filters = node.filters();\n\t     *\n\t     * // set a single filter\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Blur]);\n\t     *\n\t     * // set multiple filters\n\t     * node.cache();\n\t     * node.filters([\n\t     *   Konva.Filters.Blur,\n\t     *   Konva.Filters.Sepia,\n\t     *   Konva.Filters.Invert\n\t     * ]);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit');\n\t    /**\n\t     * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n\t     *   If you need to determine if a node is visible or not\n\t     *   by taking into account its parents, use the isVisible() method\n\t     * @name visible\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Boolean|String} visible\n\t     * @returns {Boolean|String}\n\t     * @example\n\t     * // get visible attr\n\t     * var visible = node.visible();\n\t     *\n\t     * // make invisible\n\t     * node.visible(false);\n\t     *\n\t     * // make visible\n\t     * node.visible(true);\n\t     *\n\t     * // make visible according to the parent\n\t     * node.visible('inherit');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'transformsEnabled', 'all');\n\t\n\t    /**\n\t     * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n\t     *  is \"all\"\n\t     * @name transformsEnabled\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {String} enabled\n\t     * @returns {String}\n\t     * @example\n\t     * // enable position transform only to improve draw performance\n\t     * node.transformsEnabled('position');\n\t     *\n\t     * // enable all transforms\n\t     * node.transformsEnabled('all');\n\t     */\n\t\n\t\n\t\n\t    /**\n\t     * get/set node size\n\t     * @name size\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} size\n\t     * @param {Number} size.width\n\t     * @param {Number} size.height\n\t     * @returns {Object}\n\t     * @example\n\t     * // get node size\n\t     * var size = node.size();\n\t     * var x = size.x;\n\t     * var y = size.y;\n\t     *\n\t     * // set size\n\t     * node.size({\n\t     *   width: 100,\n\t     *   height: 200\n\t     * });\n\t     */\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\t\n\t    Konva.Factory.backCompat(Konva.Node, {\n\t        rotateDeg: 'rotate',\n\t        setRotationDeg: 'setRotation',\n\t        getRotationDeg: 'getRotation'\n\t    });\n\t\n\t    Konva.Collection.mapMethods(Konva.Node);\n\t})(Konva);\n\t\n\t(function() {\r\n\t    'use strict';\r\n\t    /**\r\n\t    * Grayscale Filter\r\n\t    * @function\r\n\t    * @memberof Konva.Filters\r\n\t    * @param {Object} imageData\r\n\t    * @example\r\n\t    * node.cache();\r\n\t    * node.filters([Konva.Filters.Grayscale]);\r\n\t    */\r\n\t    Konva.Filters.Grayscale = function(imageData) {\r\n\t        var data = imageData.data,\r\n\t            len = data.length,\r\n\t            i, brightness;\r\n\t\r\n\t        for(i = 0; i < len; i += 4) {\r\n\t            brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n\t            // red\r\n\t            data[i] = brightness;\r\n\t            // green\r\n\t            data[i + 1] = brightness;\r\n\t            // blue\r\n\t            data[i + 2] = brightness;\r\n\t        }\r\n\t    };\r\n\t})();\r\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Brighten Filter.\n\t     * @function\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Brighten]);\n\t     * node.brightness(0.8);\n\t     */\n\t    Konva.Filters.Brighten = function(imageData) {\n\t        var brightness = this.brightness() * 255,\n\t            data = imageData.data,\n\t            len = data.length,\n\t            i;\n\t\n\t        for(i = 0; i < len; i += 4) {\n\t            // red\n\t            data[i] += brightness;\n\t            // green\n\t            data[i + 1] += brightness;\n\t            // blue\n\t            data[i + 2] += brightness;\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'brightness', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n\t    *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n\t    * @name brightness\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} brightness value between -1 and 1\n\t    * @returns {Number}\n\t    */\n\t\n\t})();\n\t\n\t(function() {\r\n\t    'use strict';\r\n\t    /**\r\n\t    * Invert Filter\r\n\t    * @function\r\n\t    * @memberof Konva.Filters\r\n\t    * @param {Object} imageData\r\n\t    * @example\r\n\t    * node.cache();\r\n\t    * node.filters([Konva.Filters.Invert]);\r\n\t    */\r\n\t    Konva.Filters.Invert = function(imageData) {\r\n\t        var data = imageData.data,\r\n\t            len = data.length,\r\n\t            i;\r\n\t\r\n\t        for(i = 0; i < len; i += 4) {\r\n\t            // red\r\n\t            data[i] = 255 - data[i];\r\n\t            // green\r\n\t            data[i + 1] = 255 - data[i + 1];\r\n\t            // blue\r\n\t            data[i + 2] = 255 - data[i + 2];\r\n\t        }\r\n\t    };\r\n\t})();\r\n\t\n\t/*\n\t the Gauss filter\n\t master repo: https://github.com/pavelpower/kineticjsGaussFilter\n\t*/\n\t(function() {\n\t    'use strict';\n\t    /*\n\t\n\t     StackBlur - a fast almost Gaussian Blur For Canvas\n\t\n\t     Version:   0.5\n\t     Author:    Mario Klingemann\n\t     Contact:   mario@quasimondo.com\n\t     Website:   http://www.quasimondo.com/StackBlurForCanvas\n\t     Twitter:   @quasimondo\n\t\n\t     In case you find this class useful - especially in commercial projects -\n\t     I am not totally unhappy for a small donation to my PayPal account\n\t     mario@quasimondo.de\n\t\n\t     Or support me on flattr:\n\t     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\t\n\t     Copyright (c) 2010 Mario Klingemann\n\t\n\t     Permission is hereby granted, free of charge, to any person\n\t     obtaining a copy of this software and associated documentation\n\t     files (the \"Software\"), to deal in the Software without\n\t     restriction, including without limitation the rights to use,\n\t     copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t     copies of the Software, and to permit persons to whom the\n\t     Software is furnished to do so, subject to the following\n\t     conditions:\n\t\n\t     The above copyright notice and this permission notice shall be\n\t     included in all copies or substantial portions of the Software.\n\t\n\t     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t     OTHER DEALINGS IN THE SOFTWARE.\n\t     */\n\t\n\t    function BlurStack() {\n\t        this.r = 0;\n\t        this.g = 0;\n\t        this.b = 0;\n\t        this.a = 0;\n\t        this.next = null;\n\t    }\n\t\n\t    var mul_table = [\n\t        512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512,\n\t        454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512,\n\t        482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456,\n\t        437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512,\n\t        497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328,\n\t        320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456,\n\t        446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335,\n\t        329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512,\n\t        505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405,\n\t        399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328,\n\t        324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271,\n\t        268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456,\n\t        451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388,\n\t        385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335,\n\t        332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292,\n\t        289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259\n\t    ];\n\t\n\t    var shg_table = [\n\t        9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\n\t        17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n\t        19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n\t        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n\t        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n\t        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n\t        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n\t        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\n\t        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t        23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24\n\t    ];\n\t\n\t    function filterGaussBlurRGBA( imageData, radius) {\n\t\n\t        var pixels = imageData.data,\n\t            width = imageData.width,\n\t            height = imageData.height;\n\t\n\t        var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\n\t            r_out_sum, g_out_sum, b_out_sum, a_out_sum,\n\t            r_in_sum, g_in_sum, b_in_sum, a_in_sum,\n\t            pr, pg, pb, pa, rbs;\n\t\n\t        var div = radius + radius + 1,\n\t            widthMinus1 = width - 1,\n\t            heightMinus1 = height - 1,\n\t            radiusPlus1 = radius + 1,\n\t            sumFactor = radiusPlus1 * ( radiusPlus1 + 1 ) / 2,\n\t            stackStart = new BlurStack(),\n\t            stackEnd = null,\n\t            stack = stackStart,\n\t            stackIn = null,\n\t            stackOut = null,\n\t            mul_sum = mul_table[radius],\n\t            shg_sum = shg_table[radius];\n\t\n\t        for ( i = 1; i < div; i++ ) {\n\t            stack = stack.next = new BlurStack();\n\t            if ( i === radiusPlus1 ){\n\t                stackEnd = stack;\n\t            }\n\t        }\n\t\n\t        stack.next = stackStart;\n\t\n\t        yw = yi = 0;\n\t\n\t        for ( y = 0; y < height; y++ )\n\t        {\n\t            r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\t\n\t            r_out_sum = radiusPlus1 * ( pr = pixels[yi] );\n\t            g_out_sum = radiusPlus1 * ( pg = pixels[yi + 1] );\n\t            b_out_sum = radiusPlus1 * ( pb = pixels[yi + 2] );\n\t            a_out_sum = radiusPlus1 * ( pa = pixels[yi + 3] );\n\t\n\t            r_sum += sumFactor * pr;\n\t            g_sum += sumFactor * pg;\n\t            b_sum += sumFactor * pb;\n\t            a_sum += sumFactor * pa;\n\t\n\t            stack = stackStart;\n\t\n\t            for( i = 0; i < radiusPlus1; i++ )\n\t            {\n\t                stack.r = pr;\n\t                stack.g = pg;\n\t                stack.b = pb;\n\t                stack.a = pa;\n\t                stack = stack.next;\n\t            }\n\t\n\t            for( i = 1; i < radiusPlus1; i++ )\n\t            {\n\t                p = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n\t                r_sum += ( stack.r = ( pr = pixels[p])) * ( rbs = radiusPlus1 - i );\n\t                g_sum += ( stack.g = ( pg = pixels[p + 1])) * rbs;\n\t                b_sum += ( stack.b = ( pb = pixels[p + 2])) * rbs;\n\t                a_sum += ( stack.a = ( pa = pixels[p + 3])) * rbs;\n\t\n\t                r_in_sum += pr;\n\t                g_in_sum += pg;\n\t                b_in_sum += pb;\n\t                a_in_sum += pa;\n\t\n\t                stack = stack.next;\n\t            }\n\t\n\t\n\t            stackIn = stackStart;\n\t            stackOut = stackEnd;\n\t            for ( x = 0; x < width; x++ )\n\t            {\n\t                pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n\t                if ( pa !== 0 )\n\t                {\n\t                    pa = 255 / pa;\n\t                    pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n\t                    pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n\t                    pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n\t                } else {\n\t                    pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n\t                }\n\t\n\t                r_sum -= r_out_sum;\n\t                g_sum -= g_out_sum;\n\t                b_sum -= b_out_sum;\n\t                a_sum -= a_out_sum;\n\t\n\t                r_out_sum -= stackIn.r;\n\t                g_out_sum -= stackIn.g;\n\t                b_out_sum -= stackIn.b;\n\t                a_out_sum -= stackIn.a;\n\t\n\t                p = (yw + ( ( p = x + radius + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\t\n\t                r_in_sum += ( stackIn.r = pixels[p]);\n\t                g_in_sum += ( stackIn.g = pixels[p + 1]);\n\t                b_in_sum += ( stackIn.b = pixels[p + 2]);\n\t                a_in_sum += ( stackIn.a = pixels[p + 3]);\n\t\n\t                r_sum += r_in_sum;\n\t                g_sum += g_in_sum;\n\t                b_sum += b_in_sum;\n\t                a_sum += a_in_sum;\n\t\n\t                stackIn = stackIn.next;\n\t\n\t                r_out_sum += ( pr = stackOut.r );\n\t                g_out_sum += ( pg = stackOut.g );\n\t                b_out_sum += ( pb = stackOut.b );\n\t                a_out_sum += ( pa = stackOut.a );\n\t\n\t                r_in_sum -= pr;\n\t                g_in_sum -= pg;\n\t                b_in_sum -= pb;\n\t                a_in_sum -= pa;\n\t\n\t                stackOut = stackOut.next;\n\t\n\t                yi += 4;\n\t            }\n\t            yw += width;\n\t        }\n\t\n\t\n\t        for ( x = 0; x < width; x++ )\n\t        {\n\t            g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\t\n\t            yi = x << 2;\n\t            r_out_sum = radiusPlus1 * ( pr = pixels[yi]);\n\t            g_out_sum = radiusPlus1 * ( pg = pixels[yi + 1]);\n\t            b_out_sum = radiusPlus1 * ( pb = pixels[yi + 2]);\n\t            a_out_sum = radiusPlus1 * ( pa = pixels[yi + 3]);\n\t\n\t            r_sum += sumFactor * pr;\n\t            g_sum += sumFactor * pg;\n\t            b_sum += sumFactor * pb;\n\t            a_sum += sumFactor * pa;\n\t\n\t            stack = stackStart;\n\t\n\t            for( i = 0; i < radiusPlus1; i++ )\n\t            {\n\t                stack.r = pr;\n\t                stack.g = pg;\n\t                stack.b = pb;\n\t                stack.a = pa;\n\t                stack = stack.next;\n\t            }\n\t\n\t            yp = width;\n\t\n\t            for( i = 1; i <= radius; i++ )\n\t            {\n\t                yi = ( yp + x ) << 2;\n\t\n\t                r_sum += ( stack.r = ( pr = pixels[yi])) * ( rbs = radiusPlus1 - i );\n\t                g_sum += ( stack.g = ( pg = pixels[yi + 1])) * rbs;\n\t                b_sum += ( stack.b = ( pb = pixels[yi + 2])) * rbs;\n\t                a_sum += ( stack.a = ( pa = pixels[yi + 3])) * rbs;\n\t\n\t                r_in_sum += pr;\n\t                g_in_sum += pg;\n\t                b_in_sum += pb;\n\t                a_in_sum += pa;\n\t\n\t                stack = stack.next;\n\t\n\t                if( i < heightMinus1 )\n\t                {\n\t                    yp += width;\n\t                }\n\t            }\n\t\n\t            yi = x;\n\t            stackIn = stackStart;\n\t            stackOut = stackEnd;\n\t            for ( y = 0; y < height; y++ )\n\t            {\n\t                p = yi << 2;\n\t                pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n\t                if ( pa > 0 )\n\t                {\n\t                    pa = 255 / pa;\n\t                    pixels[p] = ((r_sum * mul_sum) >> shg_sum ) * pa;\n\t                    pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum ) * pa;\n\t                    pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum ) * pa;\n\t                } else {\n\t                    pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n\t                }\n\t\n\t                r_sum -= r_out_sum;\n\t                g_sum -= g_out_sum;\n\t                b_sum -= b_out_sum;\n\t                a_sum -= a_out_sum;\n\t\n\t                r_out_sum -= stackIn.r;\n\t                g_out_sum -= stackIn.g;\n\t                b_out_sum -= stackIn.b;\n\t                a_out_sum -= stackIn.a;\n\t\n\t                p = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\t\n\t                r_sum += ( r_in_sum += ( stackIn.r = pixels[p]));\n\t                g_sum += ( g_in_sum += ( stackIn.g = pixels[p + 1]));\n\t                b_sum += ( b_in_sum += ( stackIn.b = pixels[p + 2]));\n\t                a_sum += ( a_in_sum += ( stackIn.a = pixels[p + 3]));\n\t\n\t                stackIn = stackIn.next;\n\t\n\t                r_out_sum += ( pr = stackOut.r );\n\t                g_out_sum += ( pg = stackOut.g );\n\t                b_out_sum += ( pb = stackOut.b );\n\t                a_out_sum += ( pa = stackOut.a );\n\t\n\t                r_in_sum -= pr;\n\t                g_in_sum -= pg;\n\t                b_in_sum -= pb;\n\t                a_in_sum -= pa;\n\t\n\t                stackOut = stackOut.next;\n\t\n\t                yi += width;\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Blur Filter\n\t     * @function\n\t     * @name Blur\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Blur]);\n\t     * node.blurRadius(10);\n\t     */\n\t    Konva.Filters.Blur = function Blur(imageData) {\n\t        var radius = Math.round(this.blurRadius());\n\t\n\t        if (radius > 0) {\n\t            filterGaussBlurRGBA(imageData, radius);\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'blurRadius', 0, null, Konva.Factory.afterSetFilter);\n\t\n\t    /**\n\t    * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n\t    * @name blurRadius\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} radius\n\t    * @returns {Integer}\n\t    */\n\t})();\n\t\n\t/*eslint-disable  max-depth */\n\t(function() {\n\t\t'use strict';\n\t\tfunction pixelAt(idata, x, y) {\n\t\t\tvar idx = (y * idata.width + x) * 4;\n\t\t\tvar d = [];\n\t\t\td.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n\t\t\treturn d;\n\t\t}\n\t\n\t\tfunction rgbDistance(p1, p2) {\n\t\t\treturn Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));\n\t\t}\n\t\n\t\tfunction rgbMean(pTab) {\n\t\t\tvar m = [0, 0, 0];\n\t\n\t\t\tfor (var i = 0; i < pTab.length; i++) {\n\t\t\t\tm[0] += pTab[i][0];\n\t\t\t\tm[1] += pTab[i][1];\n\t\t\t\tm[2] += pTab[i][2];\n\t\t\t}\n\t\n\t\t\tm[0] /= pTab.length;\n\t\t\tm[1] /= pTab.length;\n\t\t\tm[2] /= pTab.length;\n\t\n\t\t\treturn m;\n\t\t}\n\t\n\t\tfunction backgroundMask(idata, threshold) {\n\t\t\tvar rgbv_no = pixelAt(idata, 0, 0);\n\t\t\tvar rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n\t\t\tvar rgbv_so = pixelAt(idata, 0, idata.height - 1);\n\t\t\tvar rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\t\n\t\n\t\t\tvar thres = threshold || 10;\n\t\t\tif (rgbDistance(rgbv_no, rgbv_ne) < thres && rgbDistance(rgbv_ne, rgbv_se) < thres && rgbDistance(rgbv_se, rgbv_so) < thres && rgbDistance(rgbv_so, rgbv_no) < thres) {\n\t\n\t\t\t\t// Mean color\n\t\t\t\tvar mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\t\n\t\t\t\t// Mask based on color distance\n\t\t\t\tvar mask = [];\n\t\t\t\tfor (var i = 0; i < idata.width * idata.height; i++) {\n\t\t\t\t\tvar d = rgbDistance(mean, [idata.data[i * 4], idata.data[i * 4 + 1], idata.data[i * 4 + 2]]);\n\t\t\t\t\tmask[i] = (d < thres) ? 0 : 255;\n\t\t\t\t}\n\t\n\t\t\t\treturn mask;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction applyMask(idata, mask) {\n\t\t\tfor (var i = 0; i < idata.width * idata.height; i++) {\n\t\t\t\tidata.data[4 * i + 3] = mask[i];\n\t\t\t}\n\t\t}\n\t\n\t\tfunction erodeMask(mask, sw, sh) {\n\t\n\t\t\tvar weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n\t\t\tvar side = Math.round(Math.sqrt(weights.length));\n\t\t\tvar halfSide = Math.floor(side / 2);\n\t\n\t\t\tvar maskResult = [];\n\t\t\tfor (var y = 0; y < sh; y++) {\n\t\t\t\tfor (var x = 0; x < sw; x++) {\n\t\n\t\t\t\t\tvar so = y * sw + x;\n\t\t\t\t\tvar a = 0;\n\t\t\t\t\tfor (var cy = 0; cy < side; cy++) {\n\t\t\t\t\t\tfor (var cx = 0; cx < side; cx++) {\n\t\t\t\t\t\t\tvar scy = y + cy - halfSide;\n\t\t\t\t\t\t\tvar scx = x + cx - halfSide;\n\t\n\t\t\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\t\n\t\t\t\t\t\t\t\tvar srcOff = scy * sw + scx;\n\t\t\t\t\t\t\t\tvar wt = weights[cy * side + cx];\n\t\n\t\t\t\t\t\t\t\ta += mask[srcOff] * wt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaskResult[so] = (a === 255 * 8) ? 255 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn maskResult;\n\t\t}\n\t\n\t\tfunction dilateMask(mask, sw, sh) {\n\t\n\t\t\tvar weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n\t\t\tvar side = Math.round(Math.sqrt(weights.length));\n\t\t\tvar halfSide = Math.floor(side / 2);\n\t\n\t\t\tvar maskResult = [];\n\t\t\tfor (var y = 0; y < sh; y++) {\n\t\t\t\tfor (var x = 0; x < sw; x++) {\n\t\n\t\t\t\t\tvar so = y * sw + x;\n\t\t\t\t\tvar a = 0;\n\t\t\t\t\tfor (var cy = 0; cy < side; cy++) {\n\t\t\t\t\t\tfor (var cx = 0; cx < side; cx++) {\n\t\t\t\t\t\t\tvar scy = y + cy - halfSide;\n\t\t\t\t\t\t\tvar scx = x + cx - halfSide;\n\t\n\t\t\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\t\n\t\t\t\t\t\t\t\tvar srcOff = scy * sw + scx;\n\t\t\t\t\t\t\t\tvar wt = weights[cy * side + cx];\n\t\n\t\t\t\t\t\t\t\ta += mask[srcOff] * wt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaskResult[so] = (a >= 255 * 4) ? 255 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn maskResult;\n\t\t}\n\t\n\t\tfunction smoothEdgeMask(mask, sw, sh) {\n\t\n\t\t\tvar weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n\t\t\tvar side = Math.round(Math.sqrt(weights.length));\n\t\t\tvar halfSide = Math.floor(side / 2);\n\t\n\t\t\tvar maskResult = [];\n\t\t\tfor (var y = 0; y < sh; y++) {\n\t\t\t\tfor (var x = 0; x < sw; x++) {\n\t\n\t\t\t\t\tvar so = y * sw + x;\n\t\t\t\t\tvar a = 0;\n\t\t\t\t\tfor (var cy = 0; cy < side; cy++) {\n\t\t\t\t\t\tfor (var cx = 0; cx < side; cx++) {\n\t\t\t\t\t\t\tvar scy = y + cy - halfSide;\n\t\t\t\t\t\t\tvar scx = x + cx - halfSide;\n\t\n\t\t\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\t\n\t\t\t\t\t\t\t\tvar srcOff = scy * sw + scx;\n\t\t\t\t\t\t\t\tvar wt = weights[cy * side + cx];\n\t\n\t\t\t\t\t\t\t\ta += mask[srcOff] * wt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaskResult[so] = a;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn maskResult;\n\t\t}\n\t\n\t\t/**\n\t\t * Mask Filter\n\t\t * @function\n\t\t * @name Mask\n\t\t * @memberof Konva.Filters\n\t\t * @param {Object} imageData\n\t\t * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Mask]);\n\t     * node.threshold(200);\n\t\t */\n\t\tKonva.Filters.Mask = function(imageData) {\n\t\t\t// Detect pixels close to the background color\n\t\t\tvar threshold = this.threshold(),\n\t        mask = backgroundMask(imageData, threshold);\n\t\t\tif (mask) {\n\t\t\t\t// Erode\n\t\t\t\tmask = erodeMask(mask, imageData.width, imageData.height);\n\t\n\t\t\t\t// Dilate\n\t\t\t\tmask = dilateMask(mask, imageData.width, imageData.height);\n\t\n\t\t\t\t// Gradient\n\t\t\t\tmask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\t\n\t\t\t\t// Apply mask\n\t\t\t\tapplyMask(imageData, mask);\n\t\n\t\t\t\t// todo : Update hit region function according to mask\n\t\t\t}\n\t\n\t\t\treturn imageData;\n\t\t};\n\t\n\t\tKonva.Factory.addGetterSetter(Konva.Node, 'threshold', 0, null, Konva.Factory.afterSetFilter);\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * RGB Filter\n\t     * @function\n\t     * @name RGB\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @author ippo615\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.RGB]);\n\t     * node.blue(120);\n\t     * node.green(200);\n\t     */\n\t    Konva.Filters.RGB = function (imageData) {\n\t        var data = imageData.data,\n\t            nPixels = data.length,\n\t            red = this.red(),\n\t            green = this.green(),\n\t            blue = this.blue(),\n\t            i, brightness;\n\t\n\t        for (i = 0; i < nPixels; i += 4) {\n\t            brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n\t            data[i] = brightness * red; // r\n\t            data[i + 1] = brightness * green; // g\n\t            data[i + 2] = brightness * blue; // b\n\t            data[i + 3] = data[i + 3]; // alpha\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n\t        this._filterUpToDate = false;\n\t        if (val > 255) {\n\t            return 255;\n\t        }\n\t        else if (val < 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            return Math.round(val);\n\t        }\n\t    });\n\t    /**\n\t    * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n\t    * @name red\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} red value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n\t        this._filterUpToDate = false;\n\t        if (val > 255) {\n\t            return 255;\n\t        }\n\t        else if (val < 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            return Math.round(val);\n\t        }\n\t    });\n\t    /**\n\t    * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n\t    * @name green\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} green value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'blue', 0, Konva.Validators.RGBComponent, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n\t    * @name blue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} blue value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * RGBA Filter\n\t     * @function\n\t     * @name RGBA\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @author codefo\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.RGBA]);\n\t     * node.blue(120);\n\t     * node.green(200);\n\t     * node.alpha(0.3);\n\t     */\n\t    Konva.Filters.RGBA = function (imageData) {\n\t        var data = imageData.data,\n\t            nPixels = data.length,\n\t            red = this.red(),\n\t            green = this.green(),\n\t            blue = this.blue(),\n\t            alpha = this.alpha(),\n\t            i, ia;\n\t\n\t        for (i = 0; i < nPixels; i += 4) {\n\t            ia = 1 - alpha;\n\t\n\t            data[i] = red * alpha + data[i] * ia; // r\n\t            data[i + 1] = green * alpha + data[i + 1] * ia; // g\n\t            data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n\t        this._filterUpToDate = false;\n\t        if (val > 255) {\n\t            return 255;\n\t        }\n\t        else if (val < 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            return Math.round(val);\n\t        }\n\t    });\n\t    /**\n\t    * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n\t    * @name red\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} red value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n\t        this._filterUpToDate = false;\n\t        if (val > 255) {\n\t            return 255;\n\t        }\n\t        else if (val < 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            return Math.round(val);\n\t        }\n\t    });\n\t    /**\n\t    * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n\t    * @name green\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} green value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'blue', 0, Konva.Validators.RGBComponent, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n\t    * @name blue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} blue value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n\t        this._filterUpToDate = false;\n\t        if (val > 1) {\n\t            return 1;\n\t        }\n\t        else if (val < 0) {\n\t            return 0;\n\t        }\n\t        else {\n\t            return val;\n\t        }\n\t    });\n\t    /**\n\t     * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n\t     * @name alpha\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Float} alpha value between 0 and 1\n\t     * @returns {Float}\n\t     */\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t    * HSV Filter. Adjusts the hue, saturation and value\n\t    * @function\n\t    * @name HSV\n\t    * @memberof Konva.Filters\n\t    * @param {Object} imageData\n\t    * @author ippo615\n\t    * @example\n\t    * image.filters([Konva.Filters.HSV]);\n\t    * image.value(200);\n\t    */\n\t\n\t    Konva.Filters.HSV = function (imageData) {\n\t        var data = imageData.data,\n\t            nPixels = data.length,\n\t            v = Math.pow(2, this.value()),\n\t            s = Math.pow(2, this.saturation()),\n\t            h = Math.abs((this.hue()) + 360) % 360,\n\t            i;\n\t\n\t        // Basis for the technique used:\n\t        // http://beesbuzz.biz/code/hsv_color_transforms.php\n\t        // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n\t        // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n\t        // H is the hue shift in degrees (0 to 360)\n\t        // vsu = V*S*cos(H*PI/180);\n\t        // vsw = V*S*sin(H*PI/180);\n\t        //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n\t        //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n\t        //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\t\n\t        // Precompute the values in the matrix:\n\t        var vsu = v * s * Math.cos(h * Math.PI / 180),\n\t            vsw = v * s * Math.sin(h * Math.PI / 180);\n\t        // (result spot)(source spot)\n\t        var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n\t            rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n\t            rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n\t        var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n\t            gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n\t            gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n\t        var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n\t            bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n\t            bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\t\n\t        var r, g, b, a;\n\t\n\t        for (i = 0; i < nPixels; i += 4) {\n\t            r = data[i + 0];\n\t            g = data[i + 1];\n\t            b = data[i + 2];\n\t            a = data[i + 3];\n\t\n\t            data[i + 0] = rr * r + rg * g + rb * b;\n\t            data[i + 1] = gr * r + gg * g + gb * b;\n\t            data[i + 2] = br * r + bg * g + bb * b;\n\t            data[i + 3] = a; // alpha\n\t        }\n\t\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'hue', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name hue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} hue value between 0 and 359\n\t    * @returns {Number}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'saturation', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name saturation\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'value', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n\t    * @name value\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'hue', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name hue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} hue value between 0 and 359\n\t    * @returns {Number}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'saturation', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name saturation\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'luminance', 0, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n\t    * @name value\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t    /**\n\t    * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n\t    * @function\n\t    * @memberof Konva.Filters\n\t    * @param {Object} imageData\n\t    * @author ippo615\n\t    * @example\n\t    * image.filters([Konva.Filters.HSL]);\n\t    * image.luminance(200);\n\t    */\n\t\n\t    Konva.Filters.HSL = function (imageData) {\n\t        var data = imageData.data,\n\t            nPixels = data.length,\n\t            v = 1,\n\t            s = Math.pow(2, this.saturation()),\n\t            h = Math.abs((this.hue()) + 360) % 360,\n\t            l = this.luminance() * 127,\n\t            i;\n\t\n\t        // Basis for the technique used:\n\t        // http://beesbuzz.biz/code/hsv_color_transforms.php\n\t        // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n\t        // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n\t        // H is the hue shift in degrees (0 to 360)\n\t        // vsu = V*S*cos(H*PI/180);\n\t        // vsw = V*S*sin(H*PI/180);\n\t        //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n\t        //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n\t        //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\t\n\t        // Precompute the values in the matrix:\n\t        var vsu = v * s * Math.cos(h * Math.PI / 180),\n\t            vsw = v * s * Math.sin(h * Math.PI / 180);\n\t        // (result spot)(source spot)\n\t        var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n\t            rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n\t            rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n\t        var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n\t            gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n\t            gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n\t        var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n\t            bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n\t            bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\t\n\t        var r, g, b, a;\n\t\n\t        for (i = 0; i < nPixels; i += 4) {\n\t            r = data[i + 0];\n\t            g = data[i + 1];\n\t            b = data[i + 2];\n\t            a = data[i + 3];\n\t\n\t            data[i + 0] = rr * r + rg * g + rb * b + l;\n\t            data[i + 1] = gr * r + gg * g + gb * b + l;\n\t            data[i + 2] = br * r + bg * g + bb * b + l;\n\t            data[i + 3] = a; // alpha\n\t        }\n\t    };\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * Emboss Filter.\n\t     * Pixastic Lib - Emboss filter - v0.1.0\n\t     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t     * License: [http://www.pixastic.com/lib/license.txt]\n\t     * @function\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Emboss]);\n\t     * node.embossStrength(0.8);\n\t     * node.embossWhiteLevel(0.3);\n\t     * node.embossDirection('right');\n\t     * node.embossBlend(true);\n\t     */\n\t    Konva.Filters.Emboss = function (imageData) {\n\t\n\t        // pixastic strength is between 0 and 10.  I want it between 0 and 1\n\t        // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n\t        // a max value of greyLevel yields a white emboss, and the min value yields a black\n\t        // emboss.  Therefore, I changed greyLevel to whiteLevel\n\t        var strength = this.embossStrength() * 10,\n\t            greyLevel = this.embossWhiteLevel() * 255,\n\t            direction = this.embossDirection(),\n\t            blend = this.embossBlend(),\n\t            dirY = 0,\n\t            dirX = 0,\n\t            data = imageData.data,\n\t            w = imageData.width,\n\t            h = imageData.height,\n\t            w4 = w * 4,\n\t            y = h;\n\t\n\t        switch (direction) {\n\t            case 'top-left':\n\t                dirY = -1;\n\t                dirX = -1;\n\t                break;\n\t            case 'top':\n\t                dirY = -1;\n\t                dirX = 0;\n\t                break;\n\t            case 'top-right':\n\t                dirY = -1;\n\t                dirX = 1;\n\t                break;\n\t            case 'right':\n\t                dirY = 0;\n\t                dirX = 1;\n\t                break;\n\t            case 'bottom-right':\n\t                dirY = 1;\n\t                dirX = 1;\n\t                break;\n\t            case 'bottom':\n\t                dirY = 1;\n\t                dirX = 0;\n\t                break;\n\t            case 'bottom-left':\n\t                dirY = 1;\n\t                dirX = -1;\n\t                break;\n\t            case 'left':\n\t                dirY = 0;\n\t                dirX = -1;\n\t                break;\n\t            default:\n\t                Konva.Util.error('Unknwo emboss direction: ' + direction);\n\t        }\n\t\n\t        do {\n\t            var offsetY = (y - 1) * w4;\n\t\n\t            var otherY = dirY;\n\t            if (y + otherY < 1){\n\t                otherY = 0;\n\t            }\n\t            if (y + otherY > h) {\n\t                otherY = 0;\n\t            }\n\t\n\t            var offsetYOther = (y - 1 + otherY) * w * 4;\n\t\n\t            var x = w;\n\t            do {\n\t                var offset = offsetY + (x - 1) * 4;\n\t\n\t                var otherX = dirX;\n\t                if (x + otherX < 1){\n\t                    otherX = 0;\n\t                }\n\t                if (x + otherX > w) {\n\t                    otherX = 0;\n\t                }\n\t\n\t                var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\t\n\t                var dR = data[offset] - data[offsetOther];\n\t                var dG = data[offset + 1] - data[offsetOther + 1];\n\t                var dB = data[offset + 2] - data[offsetOther + 2];\n\t\n\t                var dif = dR;\n\t                var absDif = dif > 0 ? dif : -dif;\n\t\n\t                var absG = dG > 0 ? dG : -dG;\n\t                var absB = dB > 0 ? dB : -dB;\n\t\n\t                if (absG > absDif) {\n\t                    dif = dG;\n\t                }\n\t                if (absB > absDif) {\n\t                    dif = dB;\n\t                }\n\t\n\t                dif *= strength;\n\t\n\t                if (blend) {\n\t                    var r = data[offset] + dif;\n\t                    var g = data[offset + 1] + dif;\n\t                    var b = data[offset + 2] + dif;\n\t\n\t                    data[offset] = (r > 255) ? 255 : (r < 0 ? 0 : r);\n\t                    data[offset + 1] = (g > 255) ? 255 : (g < 0 ? 0 : g);\n\t                    data[offset + 2] = (b > 255) ? 255 : (b < 0 ? 0 : b);\n\t                } else {\n\t                    var grey = greyLevel - dif;\n\t                    if (grey < 0) {\n\t                        grey = 0;\n\t                    } else if (grey > 255) {\n\t                        grey = 255;\n\t                    }\n\t\n\t                    data[offset] = data[offset + 1] = data[offset + 2] = grey;\n\t                }\n\t\n\t            } while (--x);\n\t        } while (--y);\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'embossStrength', 0.5, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossStrength\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} level between 0 and 1.  Default is 0.5\n\t    * @returns {Number}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'embossWhiteLevel', 0.5, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossWhiteLevel\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n\t    * @returns {Number}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'embossDirection', 'top-left', null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossDirection\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n\t    *   The default is top-left\n\t    * @returns {String}\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'embossBlend', false, null, Konva.Factory.afterSetFilter);\n\t    /**\n\t    * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossBlend\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Boolean} embossBlend\n\t    * @returns {Boolean}\n\t    */\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n\t        // Compute the range of the data\n\t        var fromRange = fromMax - fromMin,\n\t          toRange = toMax - toMin,\n\t          toValue;\n\t\n\t        // If either range is 0, then the value can only be mapped to 1 value\n\t        if (fromRange === 0) {\n\t            return toMin + toRange / 2;\n\t        }\n\t        if (toRange === 0) {\n\t            return toMin;\n\t        }\n\t\n\t        // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n\t        toValue = (fromValue - fromMin) / fromRange;\n\t        toValue = (toRange * toValue) + toMin;\n\t\n\t        return toValue;\n\t    }\n\t\n\t\n\t    /**\n\t    * Enhance Filter. Adjusts the colors so that they span the widest\n\t    *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n\t    *  writes.\n\t    * @function\n\t    * @name Enhance\n\t    * @memberof Konva.Filters\n\t    * @param {Object} imageData\n\t    * @author ippo615\n\t    * @example\n\t    * node.cache();\n\t    * node.filters([Konva.Filters.Enhance]);\n\t    * node.enhance(0.4);\n\t    */\n\t    Konva.Filters.Enhance = function (imageData) {\n\t        var data = imageData.data,\n\t            nSubPixels = data.length,\n\t            rMin = data[0], rMax = rMin, r,\n\t            gMin = data[1], gMax = gMin, g,\n\t            bMin = data[2], bMax = bMin, b,\n\t            i;\n\t\n\t        // If we are not enhancing anything - don't do any computation\n\t        var enhanceAmount = this.enhance();\n\t        if( enhanceAmount === 0 ){ return; }\n\t\n\t        // 1st Pass - find the min and max for each channel:\n\t        for (i = 0; i < nSubPixels; i += 4) {\n\t            r = data[i + 0];\n\t            if (r < rMin) { rMin = r; }\n\t            else if (r > rMax) { rMax = r; }\n\t            g = data[i + 1];\n\t            if (g < gMin) { gMin = g; } else\n\t            if (g > gMax) { gMax = g; }\n\t            b = data[i + 2];\n\t            if (b < bMin) { bMin = b; } else\n\t            if (b > bMax) { bMax = b; }\n\t            //a = data[i + 3];\n\t            //if (a < aMin) { aMin = a; } else\n\t            //if (a > aMax) { aMax = a; }\n\t        }\n\t\n\t        // If there is only 1 level - don't remap\n\t        if( rMax === rMin ){ rMax = 255; rMin = 0; }\n\t        if( gMax === gMin ){ gMax = 255; gMin = 0; }\n\t        if( bMax === bMin ){ bMax = 255; bMin = 0; }\n\t\n\t        var rMid, rGoalMax, rGoalMin,\n\t            gMid, gGoalMax, gGoalMin,\n\t            bMid, bGoalMax, bGoalMin;\n\t\n\t        // If the enhancement is positive - stretch the histogram\n\t        if ( enhanceAmount > 0 ){\n\t            rGoalMax = rMax + enhanceAmount * (255 - rMax);\n\t            rGoalMin = rMin - enhanceAmount * (rMin - 0);\n\t            gGoalMax = gMax + enhanceAmount * (255 - gMax);\n\t            gGoalMin = gMin - enhanceAmount * (gMin - 0);\n\t            bGoalMax = bMax + enhanceAmount * (255 - bMax);\n\t            bGoalMin = bMin - enhanceAmount * (bMin - 0);\n\t        // If the enhancement is negative -   compress the histogram\n\t        } else {\n\t            rMid = (rMax + rMin) * 0.5;\n\t            rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n\t            rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n\t            gMid = (gMax + gMin) * 0.5;\n\t            gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n\t            gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n\t            bMid = (bMax + bMin) * 0.5;\n\t            bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n\t            bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n\t        }\n\t\n\t        // Pass 2 - remap everything, except the alpha\n\t        for (i = 0; i < nSubPixels; i += 4) {\n\t            data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n\t            data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n\t            data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n\t            //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'enhance', 0, null, Konva.Factory.afterSetFilter);\n\t\n\t    /**\n\t    * get/set enhance. Use with {@link Konva.Filters.Enhance} filter.\n\t    * @name enhance\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Float} amount\n\t    * @returns {Float}\n\t    */\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * Posterize Filter. Adjusts the channels so that there are no more\n\t     *  than n different values for that channel. This is also applied\n\t     *  to the alpha channel.\n\t     * @function\n\t     * @name Posterize\n\t     * @author ippo615\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Posterize]);\n\t     * node.levels(0.8); // between 0 and 1\n\t     */\n\t\n\t    Konva.Filters.Posterize = function (imageData) {\n\t        // level must be between 1 and 255\n\t        var levels = Math.round(this.levels() * 254) + 1,\n\t            data = imageData.data,\n\t            len = data.length,\n\t            scale = (255 / levels),\n\t            i;\n\t\n\t        for (i = 0; i < len; i += 1) {\n\t            data[i] = Math.floor(data[i] / scale) * scale;\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'levels', 0.5, null, Konva.Factory.afterSetFilter);\n\t\n\t    /**\n\t    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n\t    * @name levels\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} level between 0 and 1\n\t    * @returns {Number}\n\t    */\n\t})();\n\t\n\t(function () {\r\n\t    'use strict';\r\n\t\r\n\t    /**\r\n\t     * Noise Filter. Randomly adds or substracts to the color channels\r\n\t     * @function\r\n\t     * @name Noise\r\n\t     * @memberof Konva.Filters\r\n\t     * @param {Object} imageData\r\n\t     * @author ippo615\r\n\t     * @example\r\n\t     * node.cache();\r\n\t     * node.filters([Konva.Filters.Noise]);\r\n\t     * node.noise(0.8);\r\n\t     */\r\n\t    Konva.Filters.Noise = function (imageData) {\r\n\t        var amount = this.noise() * 255,\r\n\t            data = imageData.data,\r\n\t            nPixels = data.length,\r\n\t            half = amount / 2,\r\n\t            i;\r\n\t\r\n\t        for (i = 0; i < nPixels; i += 4) {\r\n\t            data[i + 0] += half - 2 * half * Math.random();\r\n\t            data[i + 1] += half - 2 * half * Math.random();\r\n\t            data[i + 2] += half - 2 * half * Math.random();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'noise', 0.2, null, Konva.Factory.afterSetFilter);\r\n\t\r\n\t    /**\r\n\t    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\r\n\t    * @name noise\r\n\t    * @method\r\n\t    * @memberof Konva.Node.prototype\r\n\t    * @param {Number} noise\r\n\t    * @returns {Number}\r\n\t    */\r\n\t})();\r\n\t\n\t/*eslint-disable max-depth */\r\n\t(function () {\r\n\t    'use strict';\r\n\t    /**\r\n\t     * Pixelate Filter. Averages groups of pixels and redraws\r\n\t     *  them as larger pixels\r\n\t     * @function\r\n\t     * @name Pixelate\r\n\t     * @memberof Konva.Filters\r\n\t     * @param {Object} imageData\r\n\t     * @author ippo615\r\n\t     * @example\r\n\t     * node.cache();\r\n\t     * node.filters([Konva.Filters.Pixelate]);\r\n\t     * node.pixelSize(10);\r\n\t     */\r\n\t\r\n\t    Konva.Filters.Pixelate = function (imageData) {\r\n\t\r\n\t        var pixelSize = Math.ceil(this.pixelSize()),\r\n\t            width = imageData.width,\r\n\t            height = imageData.height,\r\n\t            x, y, i,\r\n\t            //pixelsPerBin = pixelSize * pixelSize,\r\n\t            red, green, blue, alpha,\r\n\t            nBinsX = Math.ceil(width / pixelSize),\r\n\t            nBinsY = Math.ceil(height / pixelSize),\r\n\t            xBinStart, xBinEnd, yBinStart, yBinEnd,\r\n\t            xBin, yBin, pixelsInBin;\r\n\t        imageData = imageData.data;\r\n\t\r\n\t        if (pixelSize <= 0) {\r\n\t            Konva.Util.error('pixelSize value can not be <= 0');\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        for (xBin = 0; xBin < nBinsX; xBin += 1) {\r\n\t            for (yBin = 0; yBin < nBinsY; yBin += 1) {\r\n\t\r\n\t                // Initialize the color accumlators to 0\r\n\t                red = 0;\r\n\t                green = 0;\r\n\t                blue = 0;\r\n\t                alpha = 0;\r\n\t\r\n\t                // Determine which pixels are included in this bin\r\n\t                xBinStart = xBin * pixelSize;\r\n\t                xBinEnd = xBinStart + pixelSize;\r\n\t                yBinStart = yBin * pixelSize;\r\n\t                yBinEnd = yBinStart + pixelSize;\r\n\t\r\n\t                // Add all of the pixels to this bin!\r\n\t                pixelsInBin = 0;\r\n\t                for (x = xBinStart; x < xBinEnd; x += 1) {\r\n\t                    if( x >= width ){ continue; }\r\n\t                    for (y = yBinStart; y < yBinEnd; y += 1) {\r\n\t                        if( y >= height ){ continue; }\r\n\t                        i = (width * y + x) * 4;\r\n\t                        red += imageData[i + 0];\r\n\t                        green += imageData[i + 1];\r\n\t                        blue += imageData[i + 2];\r\n\t                        alpha += imageData[i + 3];\r\n\t                        pixelsInBin += 1;\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                // Make sure the channels are between 0-255\r\n\t                red = red / pixelsInBin;\r\n\t                green = green / pixelsInBin;\r\n\t                blue = blue / pixelsInBin;\r\n\t\r\n\t                // Draw this bin\r\n\t                for (x = xBinStart; x < xBinEnd; x += 1) {\r\n\t                    if( x >= width ){ continue; }\r\n\t                    for (y = yBinStart; y < yBinEnd; y += 1) {\r\n\t                        if( y >= height ){ continue; }\r\n\t                        i = (width * y + x) * 4;\r\n\t                        imageData[i + 0] = red;\r\n\t                        imageData[i + 1] = green;\r\n\t                        imageData[i + 2] = blue;\r\n\t                        imageData[i + 3] = alpha;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t    };\r\n\t\r\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'pixelSize', 8, null, Konva.Factory.afterSetFilter);\r\n\t\r\n\t    /**\r\n\t    * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\r\n\t    * @name pixelSize\r\n\t    * @method\r\n\t    * @memberof Konva.Node.prototype\r\n\t    * @param {Integer} pixelSize\r\n\t    * @returns {Integer}\r\n\t    */\r\n\t})();\r\n\t\n\t(function () {\r\n\t    'use strict';\r\n\t    /**\r\n\t     * Threshold Filter. Pushes any value above the mid point to\r\n\t     *  the max and any value below the mid point to the min.\r\n\t     *  This affects the alpha channel.\r\n\t     * @function\r\n\t     * @name Threshold\r\n\t     * @memberof Konva.Filters\r\n\t     * @param {Object} imageData\r\n\t     * @author ippo615\r\n\t     * @example\r\n\t     * node.cache();\r\n\t     * node.filters([Konva.Filters.Threshold]);\r\n\t     * node.threshold(0.1);\r\n\t     */\r\n\t\r\n\t    Konva.Filters.Threshold = function (imageData) {\r\n\t        var level = this.threshold() * 255,\r\n\t            data = imageData.data,\r\n\t            len = data.length,\r\n\t            i;\r\n\t\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            data[i] = data[i] < level ? 0 : 255;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'threshold', 0.5, null, Konva.Factory.afterSetFilter);\r\n\t\r\n\t    /**\r\n\t    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\r\n\t    * @name threshold\r\n\t    * @method\r\n\t    * @memberof Konva.Node.prototype\r\n\t    * @param {Number} threshold\r\n\t    * @returns {Number}\r\n\t    */\r\n\t})();\r\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Sepia Filter\n\t     * Based on: Pixastic Lib - Sepia filter - v0.1.0\n\t     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t     * @function\n\t     * @name Sepia\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n\t     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Sepia]);\n\t     */\n\t    Konva.Filters.Sepia = function (imageData) {\n\t        var data = imageData.data,\n\t            w = imageData.width,\n\t            y = imageData.height,\n\t            w4 = w * 4,\n\t            offsetY, x, offset, or, og, ob, r, g, b;\n\t\n\t        do {\n\t            offsetY = (y - 1) * w4;\n\t            x = w;\n\t            do {\n\t                offset = offsetY + (x - 1) * 4;\n\t\n\t                or = data[offset];\n\t                og = data[offset + 1];\n\t                ob = data[offset + 2];\n\t\n\t                r = or * 0.393 + og * 0.769 + ob * 0.189;\n\t                g = or * 0.349 + og * 0.686 + ob * 0.168;\n\t                b = or * 0.272 + og * 0.534 + ob * 0.131;\n\t\n\t                data[offset] = r > 255 ? 255 : r;\n\t                data[offset + 1] = g > 255 ? 255 : g;\n\t                data[offset + 2] = b > 255 ? 255 : b;\n\t                data[offset + 3] = data[offset + 3];\n\t            } while (--x);\n\t        } while (--y);\n\t    };\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * Solarize Filter\n\t     * Pixastic Lib - Solarize filter - v0.1.0\n\t     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t     * License: [http://www.pixastic.com/lib/license.txt]\n\t     * @function\n\t     * @name Solarize\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Solarize]);\n\t     */\n\t    Konva.Filters.Solarize = function (imageData) {\n\t        var data = imageData.data,\n\t            w = imageData.width,\n\t            h = imageData.height,\n\t            w4 = w * 4,\n\t            y = h;\n\t\n\t        do {\n\t            var offsetY = (y - 1) * w4;\n\t            var x = w;\n\t            do {\n\t                var offset = offsetY + (x - 1) * 4;\n\t                var r = data[offset];\n\t                var g = data[offset + 1];\n\t                var b = data[offset + 2];\n\t\n\t                if (r > 127) {\n\t                    r = 255 - r;\n\t                }\n\t                if (g > 127) {\n\t                    g = 255 - g;\n\t                }\n\t                if (b > 127) {\n\t                    b = 255 - b;\n\t                }\n\t\n\t                data[offset] = r;\n\t                data[offset + 1] = g;\n\t                data[offset + 2] = b;\n\t            } while (--x);\n\t        } while (--y);\n\t    };\n\t})();\n\t\n\t\n\t\n\t(function () {\n\t    'use strict';\n\t\n\t  /*\n\t   * ToPolar Filter. Converts image data to polar coordinates. Performs\n\t   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n\t   *  what would be the y axis and the theta axis along the x axis.\n\t   * @function\n\t   * @author ippo615\n\t   * @memberof Konva.Filters\n\t   * @param {ImageData} src, the source image data (what will be transformed)\n\t   * @param {ImageData} dst, the destination image data (where it will be saved)\n\t   * @param {Object} opt\n\t   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n\t   *  default is in the middle\n\t   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n\t   *  default is in the middle\n\t   */\n\t\n\t    var ToPolar = function(src, dst, opt){\n\t\n\t        var srcPixels = src.data,\n\t            dstPixels = dst.data,\n\t            xSize = src.width,\n\t            ySize = src.height,\n\t            xMid = opt.polarCenterX || xSize / 2,\n\t            yMid = opt.polarCenterY || ySize / 2,\n\t            i, x, y, r = 0, g = 0, b = 0, a = 0;\n\t\n\t        // Find the largest radius\n\t        var rad, rMax = Math.sqrt( xMid * xMid + yMid * yMid );\n\t        x = xSize - xMid;\n\t        y = ySize - yMid;\n\t        rad = Math.sqrt( x * x + y * y );\n\t        rMax = (rad > rMax) ? rad : rMax;\n\t\n\t        // We'll be uisng y as the radius, and x as the angle (theta=t)\n\t        var rSize = ySize,\n\t            tSize = xSize,\n\t            radius, theta;\n\t\n\t        // We want to cover all angles (0-360) and we need to convert to\n\t        // radians (*PI/180)\n\t        var conversion = 360 / tSize * Math.PI / 180, sin, cos;\n\t\n\t        // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\t\n\t        for( theta = 0; theta < tSize; theta += 1 ){\n\t            sin = Math.sin(theta * conversion);\n\t            cos = Math.cos(theta * conversion);\n\t            for( radius = 0; radius < rSize; radius += 1 ){\n\t                x = Math.floor(xMid + rMax * radius / rSize * cos);\n\t                y = Math.floor(yMid + rMax * radius / rSize * sin);\n\t                i = (y * xSize + x) * 4;\n\t                r = srcPixels[i + 0];\n\t                g = srcPixels[i + 1];\n\t                b = srcPixels[i + 2];\n\t                a = srcPixels[i + 3];\n\t\n\t                // Store it\n\t                //i = (theta * xSize  +  radius) * 4;\n\t                i = (theta + radius * xSize) * 4;\n\t                dstPixels[i + 0] = r;\n\t                dstPixels[i + 1] = g;\n\t                dstPixels[i + 2] = b;\n\t                dstPixels[i + 3] = a;\n\t\n\t            }\n\t        }\n\t    };\n\t\n\t    /*\n\t     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n\t     *  Performs w*h*4 pixel reads and w*h pixel writes.\n\t     * @function\n\t     * @author ippo615\n\t     * @memberof Konva.Filters\n\t     * @param {ImageData} src, the source image data (what will be transformed)\n\t     * @param {ImageData} dst, the destination image data (where it will be saved)\n\t     * @param {Object} opt\n\t     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n\t     *  default is in the middle\n\t     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n\t     *  default is in the middle\n\t     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n\t     *  0 is no rotation, 360 degrees is a full rotation\n\t     */\n\t\n\t    var FromPolar = function(src, dst, opt){\n\t\n\t        var srcPixels = src.data,\n\t            dstPixels = dst.data,\n\t            xSize = src.width,\n\t            ySize = src.height,\n\t            xMid = opt.polarCenterX || xSize / 2,\n\t            yMid = opt.polarCenterY || ySize / 2,\n\t            i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n\t\n\t\n\t        // Find the largest radius\n\t        var rad, rMax = Math.sqrt( xMid * xMid + yMid * yMid );\n\t        x = xSize - xMid;\n\t        y = ySize - yMid;\n\t        rad = Math.sqrt( x * x + y * y );\n\t        rMax = (rad > rMax) ? rad : rMax;\n\t\n\t        // We'll be uisng x as the radius, and y as the angle (theta=t)\n\t        var rSize = ySize,\n\t        tSize = xSize,\n\t        radius, theta,\n\t        phaseShift = opt.polarRotation || 0;\n\t\n\t        // We need to convert to degrees and we need to make sure\n\t        // it's between (0-360)\n\t        // var conversion = tSize/360*180/Math.PI;\n\t        //var conversion = tSize/360*180/Math.PI;\n\t\n\t        var x1, y1;\n\t\n\t        for( x = 0; x < xSize; x += 1 ){\n\t            for( y = 0; y < ySize; y += 1 ){\n\t                dx = x - xMid;\n\t                dy = y - yMid;\n\t                radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n\t                theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n\t                theta = theta * tSize / 360;\n\t                x1 = Math.floor(theta);\n\t                y1 = Math.floor(radius);\n\t                i = (y1 * xSize + x1) * 4;\n\t                r = srcPixels[i + 0];\n\t                g = srcPixels[i + 1];\n\t                b = srcPixels[i + 2];\n\t                a = srcPixels[i + 3];\n\t\n\t                // Store it\n\t                i = (y * xSize + x) * 4;\n\t                dstPixels[i + 0] = r;\n\t                dstPixels[i + 1] = g;\n\t                dstPixels[i + 2] = b;\n\t                dstPixels[i + 3] = a;\n\t            }\n\t        }\n\t\n\t    };\n\t\n\t    //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n\t    //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\t\n\t    // create a temporary canvas for working - shared between multiple calls\n\t    var tempCanvas = Konva.Util.createCanvasElement();\n\t\n\t    /*\n\t     * Kaleidoscope Filter.\n\t     * @function\n\t     * @name Kaleidoscope\n\t     * @author ippo615\n\t     * @memberof Konva.Filters\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Kaleidoscope]);\n\t     * node.kaleidoscopePower(3);\n\t     * node.kaleidoscopeAngle(45);\n\t     */\n\t    Konva.Filters.Kaleidoscope = function(imageData){\n\t        var xSize = imageData.width,\n\t            ySize = imageData.height;\n\t\n\t        var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n\t        var power = Math.round( this.kaleidoscopePower() );\n\t        var angle = Math.round( this.kaleidoscopeAngle() );\n\t        var offset = Math.floor(xSize * (angle % 360) / 360);\n\t\n\t        if( power < 1 ){return; }\n\t\n\t        // Work with our shared buffer canvas\n\t        tempCanvas.width = xSize;\n\t        tempCanvas.height = ySize;\n\t        var scratchData = tempCanvas.getContext('2d').getImageData(0, 0, xSize, ySize);\n\t\n\t        // Convert thhe original to polar coordinates\n\t        ToPolar( imageData, scratchData, {\n\t            polarCenterX: xSize / 2,\n\t            polarCenterY: ySize / 2\n\t        });\n\t\n\t        // Determine how big each section will be, if it's too small\n\t        // make it bigger\n\t        var minSectionSize = xSize / Math.pow(2, power);\n\t        while( minSectionSize <= 8){\n\t            minSectionSize = minSectionSize * 2;\n\t            power -= 1;\n\t        }\n\t        minSectionSize = Math.ceil(minSectionSize);\n\t        var sectionSize = minSectionSize;\n\t\n\t        // Copy the offset region to 0\n\t        // Depending on the size of filter and location of the offset we may need\n\t        // to copy the section backwards to prevent it from rewriting itself\n\t        var xStart = 0,\n\t          xEnd = sectionSize,\n\t          xDelta = 1;\n\t        if( offset + minSectionSize > xSize ){\n\t            xStart = sectionSize;\n\t            xEnd = 0;\n\t            xDelta = -1;\n\t        }\n\t        for( y = 0; y < ySize; y += 1 ){\n\t            for( x = xStart; x !== xEnd; x += xDelta ){\n\t                xoff = Math.round(x + offset) % xSize;\n\t                srcPos = (xSize * y + xoff) * 4;\n\t                r = scratchData.data[srcPos + 0];\n\t                g = scratchData.data[srcPos + 1];\n\t                b = scratchData.data[srcPos + 2];\n\t                a = scratchData.data[srcPos + 3];\n\t                dstPos = (xSize * y + x) * 4;\n\t                scratchData.data[dstPos + 0] = r;\n\t                scratchData.data[dstPos + 1] = g;\n\t                scratchData.data[dstPos + 2] = b;\n\t                scratchData.data[dstPos + 3] = a;\n\t            }\n\t        }\n\t\n\t        // Perform the actual effect\n\t        for( y = 0; y < ySize; y += 1 ){\n\t            sectionSize = Math.floor( minSectionSize );\n\t            for( i = 0; i < power; i += 1 ){\n\t                for( x = 0; x < sectionSize + 1; x += 1 ){\n\t                    srcPos = (xSize * y + x) * 4;\n\t                    r = scratchData.data[srcPos + 0];\n\t                    g = scratchData.data[srcPos + 1];\n\t                    b = scratchData.data[srcPos + 2];\n\t                    a = scratchData.data[srcPos + 3];\n\t                    dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n\t                    scratchData.data[dstPos + 0] = r;\n\t                    scratchData.data[dstPos + 1] = g;\n\t                    scratchData.data[dstPos + 2] = b;\n\t                    scratchData.data[dstPos + 3] = a;\n\t                }\n\t                sectionSize *= 2;\n\t            }\n\t        }\n\t\n\t        // Convert back from polar coordinates\n\t        FromPolar(scratchData, imageData, {polarRotation: 0});\n\t    };\n\t\n\t    /**\n\t    * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n\t    * @name kaleidoscopePower\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} power of kaleidoscope\n\t    * @returns {Integer}\n\t    */\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'kaleidoscopePower', 2, null, Konva.Factory.afterSetFilter);\n\t\n\t    /**\n\t    * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n\t    * @name kaleidoscopeAngle\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} degrees\n\t    * @returns {Integer}\n\t    */\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'kaleidoscopeAngle', 0, null, Konva.Factory.afterSetFilter);\n\t\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Node\n\t     * @abstract\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     */\n\t    Konva.Container = function(config) {\n\t        this.__init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.Container, {\n\t        __init: function(config) {\n\t            this.children = new Konva.Collection();\n\t            Konva.Node.call(this, config);\n\t        },\n\t        /**\n\t         * returns a {@link Konva.Collection} of direct descendant nodes\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {Function} [filterFunc] filter function\n\t         * @returns {Konva.Collection}\n\t         * @example\n\t         * // get all children\n\t         * var children = layer.getChildren();\n\t         *\n\t         * // get only circles\n\t         * var circles = layer.getChildren(function(node){\n\t         *    return node.getClassName() === 'Circle';\n\t         * });\n\t         */\n\t        getChildren: function(filterFunc) {\n\t            if (!filterFunc) {\n\t                return this.children;\n\t            }\n\t\n\t            var results = new Konva.Collection();\n\t            this.children.each(function(child){\n\t                if (filterFunc(child)) {\n\t                    results.push(child);\n\t                }\n\t            });\n\t            return results;\n\t        },\n\t        /**\n\t         * determine if node has children\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        hasChildren: function() {\n\t            return this.getChildren().length > 0;\n\t        },\n\t        /**\n\t         * remove all children\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         */\n\t        removeChildren: function() {\n\t            var children = Konva.Collection.toCollection(this.children);\n\t            var child;\n\t            for (var i = 0; i < children.length; i++) {\n\t                child = children[i];\n\t                // reset parent to prevent many _setChildrenIndices calls\n\t                delete child.parent;\n\t                child.index = 0;\n\t                child.remove();\n\t            }\n\t            children = null;\n\t            this.children = new Konva.Collection();\n\t            return this;\n\t        },\n\t        /**\n\t         * destroy all children\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         */\n\t        destroyChildren: function() {\n\t           var children = Konva.Collection.toCollection(this.children);\n\t            var child;\n\t            for (var i = 0; i < children.length; i++) {\n\t                child = children[i];\n\t                // reset parent to prevent many _setChildrenIndices calls\n\t                delete child.parent;\n\t                child.index = 0;\n\t                child.destroy();\n\t            }\n\t            children = null;\n\t            this.children = new Konva.Collection();\n\t            return this;\n\t        },\n\t        /**\n\t         * Add node or nodes to container.\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {...Konva.Node} child\n\t         * @returns {Container}\n\t         * @example\n\t         * layer.add(shape1, shape2, shape3);\n\t         */\n\t        add: function(child) {\n\t            if (arguments.length > 1) {\n\t                for (var i = 0; i < arguments.length; i++) {\n\t                    this.add(arguments[i]);\n\t                }\n\t                return this;\n\t            }\n\t            if (child.getParent()) {\n\t                child.moveTo(this);\n\t                return this;\n\t            }\n\t            var children = this.children;\n\t            this._validateAdd(child);\n\t            child.index = children.length;\n\t            child.parent = this;\n\t            children.push(child);\n\t            this._fire('add', {\n\t                child: child\n\t            });\n\t\n\t            // if node under drag we need to update drag animation\n\t            if (Konva.DD && child.isDragging()) {\n\t                Konva.DD.anim.setLayers(child.getLayer());\n\t            }\n\t\n\t            // chainable\n\t            return this;\n\t        },\n\t        destroy: function() {\n\t            // destroy children\n\t            if (this.hasChildren()) {\n\t                this.destroyChildren();\n\t            }\n\t            // then destroy self\n\t            Konva.Node.prototype.destroy.call(this);\n\t            return this;\n\t        },\n\t        /**\n\t         * return a {@link Konva.Collection} of nodes that match the selector.  Use '#' for id selections\n\t         * and '.' for name selections.  You can also select by type or class name. Pass multiple selectors\n\t         * separated by a space.\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {String} selector\n\t         * @returns {Collection}\n\t         * @example\n\t         * // select node with id foo\n\t         * var node = stage.find('#foo');\n\t         *\n\t         * // select nodes with name bar inside layer\n\t         * var nodes = layer.find('.bar');\n\t         *\n\t         * // select all groups inside layer\n\t         * var nodes = layer.find('Group');\n\t         *\n\t         * // select all rectangles inside layer\n\t         * var nodes = layer.find('Rect');\n\t         *\n\t         * // select node with an id of foo or a name of bar inside layer\n\t         * var nodes = layer.find('#foo, .bar');\n\t         */\n\t        find: function(selector) {\n\t            var retArr = [],\n\t                selectorArr = selector.replace(/ /g, '').split(','),\n\t                len = selectorArr.length,\n\t                n, i, sel, arr, node, children, clen;\n\t\n\t            for (n = 0; n < len; n++) {\n\t                sel = selectorArr[n];\n\t                if (!Konva.Util.isValidSelector(sel)) {\n\t                    Konva.Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n\t                    Konva.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n\t                    Konva.Util.warn('Konva is awesome, right?');\n\t                }\n\t                // id selector\n\t                if(sel.charAt(0) === '#') {\n\t                    node = this._getNodeById(sel.slice(1));\n\t                    if(node) {\n\t                        retArr.push(node);\n\t                    }\n\t                }\n\t                // name selector\n\t                else if(sel.charAt(0) === '.') {\n\t                    arr = this._getNodesByName(sel.slice(1));\n\t                    retArr = retArr.concat(arr);\n\t                }\n\t                // unrecognized selector, pass to children\n\t                else {\n\t                    children = this.getChildren();\n\t                    clen = children.length;\n\t                    for(i = 0; i < clen; i++) {\n\t                        retArr = retArr.concat(children[i]._get(sel));\n\t                    }\n\t                }\n\t            }\n\t\n\t            return Konva.Collection.toCollection(retArr);\n\t        },\n\t        /**\n\t         * return a first node from `find` method\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {String} selector\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // select node with id foo\n\t         * var node = stage.findOne('#foo');\n\t         *\n\t         * // select node with name bar inside layer\n\t         * var nodes = layer.findOne('.bar');\n\t         */\n\t        findOne: function(selector) {\n\t            return this.find(selector)[0];\n\t        },\n\t        _getNodeById: function(key) {\n\t            var node = Konva.ids[key];\n\t\n\t            if(node !== undefined && this.isAncestorOf(node)) {\n\t                return node;\n\t            }\n\t            return null;\n\t        },\n\t        _getNodesByName: function(key) {\n\t            var arr = Konva.names[key] || [];\n\t            return this._getDescendants(arr);\n\t        },\n\t        _get: function(selector) {\n\t            var retArr = Konva.Node.prototype._get.call(this, selector);\n\t            var children = this.getChildren();\n\t            var len = children.length;\n\t            for(var n = 0; n < len; n++) {\n\t                retArr = retArr.concat(children[n]._get(selector));\n\t            }\n\t            return retArr;\n\t        },\n\t        // extenders\n\t        toObject: function() {\n\t            var obj = Konva.Node.prototype.toObject.call(this);\n\t\n\t            obj.children = [];\n\t\n\t            var children = this.getChildren();\n\t            var len = children.length;\n\t            for(var n = 0; n < len; n++) {\n\t                var child = children[n];\n\t                obj.children.push(child.toObject());\n\t            }\n\t\n\t            return obj;\n\t        },\n\t        _getDescendants: function(arr) {\n\t            var retArr = [];\n\t            var len = arr.length;\n\t            for(var n = 0; n < len; n++) {\n\t                var node = arr[n];\n\t                if(this.isAncestorOf(node)) {\n\t                    retArr.push(node);\n\t                }\n\t            }\n\t\n\t            return retArr;\n\t        },\n\t        /**\n\t         * determine if node is an ancestor\n\t         * of descendant\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {Konva.Node} node\n\t         */\n\t        isAncestorOf: function(node) {\n\t            var parent = node.getParent();\n\t            while(parent) {\n\t                if(parent._id === this._id) {\n\t                    return true;\n\t                }\n\t                parent = parent.getParent();\n\t            }\n\t\n\t            return false;\n\t        },\n\t        clone: function(obj) {\n\t            // call super method\n\t            var node = Konva.Node.prototype.clone.call(this, obj);\n\t\n\t            this.getChildren().each(function(no) {\n\t                node.add(no.clone());\n\t            });\n\t            return node;\n\t        },\n\t        /**\n\t         * get all shapes that intersect a point.  Note: because this method must clear a temporary\n\t         * canvas and redraw every shape inside the container, it should only be used for special sitations\n\t         * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n\t         * because it performs much better\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @returns {Array} array of shapes\n\t         */\n\t        getAllIntersections: function(pos) {\n\t            var arr = [];\n\t\n\t            this.find('Shape').each(function(shape) {\n\t                if(shape.isVisible() && shape.intersects(pos)) {\n\t                    arr.push(shape);\n\t                }\n\t            });\n\t\n\t            return arr;\n\t        },\n\t        _setChildrenIndices: function() {\n\t            this.children.each(function(child, n) {\n\t                child.index = n;\n\t            });\n\t        },\n\t        drawScene: function(can, top, caching) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || (layer && layer.getCanvas()),\n\t                context = canvas && canvas.getContext(),\n\t                cachedCanvas = this._cache.canvas,\n\t                cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\t\n\t            if (this.isVisible()) {\n\t                if (!caching && cachedSceneCanvas) {\n\t                    context.save();\n\t                    layer._applyTransform(this, context, top);\n\t                    this._drawCachedSceneCanvas(context);\n\t                    context.restore();\n\t                }\n\t                else {\n\t                    this._drawChildren(canvas, 'drawScene', top, false, caching);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        drawHit: function(can, top, caching) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || (layer && layer.hitCanvas),\n\t                context = canvas && canvas.getContext(),\n\t                cachedCanvas = this._cache.canvas,\n\t                cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\t\n\t            if (this.shouldDrawHit(canvas)) {\n\t                if (layer) {\n\t                    layer.clearHitCache();\n\t                }\n\t                if (!caching && cachedHitCanvas) {\n\t                    context.save();\n\t                    layer._applyTransform(this, context, top);\n\t                    this._drawCachedHitCanvas(context);\n\t                    context.restore();\n\t                }\n\t                else {\n\t                    this._drawChildren(canvas, 'drawHit', top);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n\t            var layer = this.getLayer(),\n\t                context = canvas && canvas.getContext(),\n\t                clipWidth = this.getClipWidth(),\n\t                clipHeight = this.getClipHeight(),\n\t                clipFunc = this.getClipFunc(),\n\t                hasClip = clipWidth && clipHeight || clipFunc,\n\t                clipX, clipY;\n\t\n\t            if (hasClip && layer) {\n\t                context.save();\n\t                layer._applyTransform(this, context);\n\t                context.beginPath();\n\t                if (clipFunc) {\n\t                  clipFunc.call(this, context, this);\n\t                } else {\n\t                  clipX = this.getClipX();\n\t                  clipY = this.getClipY();\n\t                  context.rect(clipX, clipY, clipWidth, clipHeight);\n\t                }\n\t                context.clip();\n\t                context.reset();\n\t            }\n\t\n\t            this.children.each(function(child) {\n\t                child[drawMethod](canvas, top, caching, skipBuffer);\n\t            });\n\t\n\t            if (hasClip) {\n\t                context.restore();\n\t            }\n\t        },\n\t        shouldDrawHit: function(canvas) {\n\t            var layer = this.getLayer();\n\t            var dd = Konva.DD;\n\t            var layerUnderDrag = dd && Konva.isDragging() && (Konva.DD.anim.getLayers().indexOf(layer) !== -1);\n\t            return (canvas && canvas.isCache) || (layer && layer.hitGraphEnabled())\n\t                && this.isVisible() && !layerUnderDrag;\n\t        },\n\t        getClientRect: function(skipTransform) {\n\t            var minX, minY, maxX, maxY;\n\t            var selfRect = {\n\t                x: 0,\n\t                y: 0,\n\t                width: 0,\n\t                height: 0\n\t            };\n\t            this.children.each(function(child) {\n\t                var rect = child.getClientRect();\n\t\n\t                // skip invisible children (like empty groups)\n\t                // or don't skip... hmmm...\n\t                // if (rect.width === 0 && rect.height === 0) {\n\t                //     return;\n\t                // }\n\t\n\t                if (minX === undefined) { // initial value for first child\n\t                    minX = rect.x;\n\t                    minY = rect.y;\n\t                    maxX = rect.x + rect.width;\n\t                    maxY = rect.y + rect.height;\n\t                } else {\n\t                    minX = Math.min(minX, rect.x);\n\t                    minY = Math.min(minY, rect.y);\n\t                    maxX = Math.max(maxX, rect.x + rect.width);\n\t                    maxY = Math.max(maxY, rect.y + rect.height);\n\t                }\n\t\n\t            });\n\t\n\t            if (this.children.length !== 0) {\n\t                selfRect = {\n\t                    x: minX,\n\t                    y: minY,\n\t                    width: maxX - minX,\n\t                    height: maxY - minY\n\t                };\n\t            }\n\t\n\t            if (!skipTransform) {\n\t                return this._transformedRect(selfRect);\n\t            }\n\t            return selfRect;\n\t        }\n\t    });\n\t\n\t    Konva.Util.extend(Konva.Container, Konva.Node);\n\t    // deprecated methods\n\t    Konva.Container.prototype.get = Konva.Container.prototype.find;\n\t\n\t    // add getters setters\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', ['x', 'y', 'width', 'height']);\n\t    /**\n\t     * get/set clip\n\t     * @method\n\t     * @name clip\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Object} clip\n\t     * @param {Number} clip.x\n\t     * @param {Number} clip.y\n\t     * @param {Number} clip.width\n\t     * @param {Number} clip.height\n\t     * @returns {Object}\n\t     * @example\n\t     * // get clip\n\t     * var clip = container.clip();\n\t     *\n\t     * // set clip\n\t     * container.setClip({\n\t     *   x: 20,\n\t     *   y: 20,\n\t     *   width: 20,\n\t     *   height: 20\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Container, 'clipX');\n\t    /**\n\t     * get/set clip x\n\t     * @name clipX\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip x\n\t     * var clipX = container.clipX();\n\t     *\n\t     * // set clip x\n\t     * container.clipX(10);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Container, 'clipY');\n\t    /**\n\t     * get/set clip y\n\t     * @name clipY\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip y\n\t     * var clipY = container.clipY();\n\t     *\n\t     * // set clip y\n\t     * container.clipY(10);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Container, 'clipWidth');\n\t    /**\n\t     * get/set clip width\n\t     * @name clipWidth\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} width\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip width\n\t     * var clipWidth = container.clipWidth();\n\t     *\n\t     * // set clip width\n\t     * container.clipWidth(100);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Container, 'clipHeight');\n\t    /**\n\t     * get/set clip height\n\t     * @name clipHeight\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} height\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip height\n\t     * var clipHeight = container.clipHeight();\n\t     *\n\t     * // set clip height\n\t     * container.clipHeight(100);\n\t     */\n\t\n\t     Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n\t     /**\n\t      * get/set clip function\n\t      * @name clipFunc\n\t      * @method\n\t      * @memberof Konva.Container.prototype\n\t      * @param {Function} function\n\t      * @returns {Function}\n\t      * @example\n\t      * // get clip function\n\t      * var clipFunction = container.clipFunc();\n\t      *\n\t      * // set clip height\n\t      * container.clipFunc(function(ctx) {\n\t      *   ctx.rect(0, 0, 100, 100);\n\t      * });\n\t      */\n\t\n\t    Konva.Collection.mapMethods(Konva.Container);\n\t})();\n\t\n\t(function(Konva) {\n\t    'use strict';\n\t    var HAS_SHADOW = 'hasShadow';\n\t    var SHADOW_RGBA = 'shadowRGBA';\n\t\n\t    function _fillFunc(context) {\n\t        context.fill();\n\t    }\n\t    function _strokeFunc(context) {\n\t        context.stroke();\n\t    }\n\t    function _fillFuncHit(context) {\n\t        context.fill();\n\t    }\n\t    function _strokeFuncHit(context) {\n\t        context.stroke();\n\t    }\n\t\n\t    function _clearHasShadowCache() {\n\t        this._clearCache(HAS_SHADOW);\n\t    }\n\t\n\t    function _clearGetShadowRGBACache() {\n\t        this._clearCache(SHADOW_RGBA);\n\t    }\n\t\n\t    /**\n\t     * Shape constructor.  Shapes are primitive objects such as rectangles,\n\t     *  circles, text, lines, etc.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Node\n\t     * @param {Object} config\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var customShape = new Konva.Shape({\n\t         *   x: 5,\n\t         *   y: 10,\n\t         *   fill: 'red',\n\t         *   // a Konva.Canvas renderer is passed into the drawFunc function\n\t         *   drawFunc: function(context) {\n\t         *     context.beginPath();\n\t         *     context.moveTo(200, 50);\n\t         *     context.lineTo(420, 80);\n\t         *     context.quadraticCurveTo(300, 100, 260, 170);\n\t         *     context.closePath();\n\t         *     context.fillStrokeShape(this);\n\t         *   }\n\t         *});\n\t     */\n\t    Konva.Shape = function(config) {\n\t        this.__init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.Shape, {\n\t        __init: function(config) {\n\t            this.nodeType = 'Shape';\n\t            this._fillFunc = _fillFunc;\n\t            this._strokeFunc = _strokeFunc;\n\t            this._fillFuncHit = _fillFuncHit;\n\t            this._strokeFuncHit = _strokeFuncHit;\n\t\n\t            // set colorKey\n\t            var shapes = Konva.shapes;\n\t            var key;\n\t\n\t            while(true) {\n\t                key = Konva.Util.getRandomColor();\n\t                if(key && !( key in shapes)) {\n\t                    break;\n\t                }\n\t            }\n\t\n\t            this.colorKey = key;\n\t            shapes[key] = this;\n\t\n\t            // call super constructor\n\t            Konva.Node.call(this, config);\n\t\n\t            this.on('shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\n\t\n\t            this.on('shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\n\t        },\n\t        hasChildren: function() {\n\t            return false;\n\t        },\n\t        getChildren: function() {\n\t            return [];\n\t        },\n\t        /**\n\t         * get canvas context tied to the layer\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Konva.Context}\n\t         */\n\t        getContext: function() {\n\t            return this.getLayer().getContext();\n\t        },\n\t        /**\n\t         * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Konva.Canvas}\n\t         */\n\t        getCanvas: function() {\n\t            return this.getLayer().getCanvas();\n\t        },\n\t        /**\n\t         * returns whether or not a shadow will be rendered\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        hasShadow: function() {\n\t            return this._getCache(HAS_SHADOW, this._hasShadow);\n\t        },\n\t        _hasShadow: function() {\n\t            return this.getShadowEnabled() && (this.getShadowOpacity() !== 0 && !!(this.getShadowColor() || this.getShadowBlur() || this.getShadowOffsetX() || this.getShadowOffsetY()));\n\t        },\n\t        getShadowRGBA: function() {\n\t            return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n\t        },\n\t        _getShadowRGBA: function() {\n\t            if (this.hasShadow()) {\n\t                var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n\t                return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + (rgba.a * (this.getShadowOpacity() || 1)) + ')';\n\t            }\n\t        },\n\t        /**\n\t         * returns whether or not the shape will be filled\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        hasFill: function() {\n\t            return !!(this.getFill() || this.getFillPatternImage() || this.getFillLinearGradientColorStops() || this.getFillRadialGradientColorStops());\n\t        },\n\t        /**\n\t         * returns whether or not the shape will be stroked\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        hasStroke: function() {\n\t            return !!(this.stroke());\n\t        },\n\t        /**\n\t         * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n\t         *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n\t         *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n\t         *  because it performs much better\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @param {Object} point\n\t         * @param {Number} point.x\n\t         * @param {Number} point.y\n\t         * @returns {Boolean}\n\t         */\n\t        intersects: function(point) {\n\t            var stage = this.getStage(),\n\t                bufferHitCanvas = stage.bufferHitCanvas,\n\t                p;\n\t\n\t            bufferHitCanvas.getContext().clear();\n\t            this.drawScene(bufferHitCanvas);\n\t            p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n\t            return p[3] > 0;\n\t        },\n\t        // extends Node.prototype.destroy\n\t        destroy: function() {\n\t            Konva.Node.prototype.destroy.call(this);\n\t            delete Konva.shapes[this.colorKey];\n\t            return this;\n\t        },\n\t        _useBufferCanvas: function(caching) {\n\t            return !caching && (this.perfectDrawEnabled() && (this.getAbsoluteOpacity() !== 1) && this.hasFill() && this.hasStroke() && this.getStage()) ||\n\t                   (this.perfectDrawEnabled() && this.hasShadow() && (this.getAbsoluteOpacity() !== 1) && this.hasFill() && this.hasStroke() && this.getStage());\n\t        },\n\t        /**\n\t         * return self rectangle (x, y, width, height) of shape.\n\t         * This method are not taken into account transformation and styles.\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Object} rect with {x, y, width, height} properties\n\t         * @example\n\t         *\n\t         * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n\t         * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n\t         *\n\t         */\n\t        getSelfRect: function() {\n\t            var size = this.getSize();\n\t            return {\n\t                x: this._centroid ? Math.round(-size.width / 2) : 0,\n\t                y: this._centroid ? Math.round(-size.height / 2) : 0,\n\t                width: size.width,\n\t                height: size.height\n\t            };\n\t        },\n\t        getClientRect: function(skipTransform) {\n\t            var fillRect = this.getSelfRect();\n\t\n\t            var strokeWidth = (this.hasStroke() && this.strokeWidth()) || 0;\n\t            var fillAndStrokeWidth = fillRect.width + strokeWidth;\n\t            var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\t\n\t            var shadowOffsetX = this.shadowOffsetX();\n\t            var shadowOffsetY = this.shadowOffsetY();\n\t\n\t            var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n\t            var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\t\n\t            var blurRadius = (this.hasShadow() && this.shadowBlur() || 0);\n\t\n\t            var width = preWidth + blurRadius * 2;\n\t            var height = preHeight + blurRadius * 2;\n\t\n\t            // if stroke, for example = 3\n\t            // we need to set x to 1.5, but after Math.round it will be 2\n\t            // as we have additional offset we need to increase width and height by 1 pixel\n\t            var roundingOffset = 0;\n\t            if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n\t                roundingOffset = 1;\n\t            }\n\t            var rect = {\n\t                width: width + roundingOffset,\n\t                height: height + roundingOffset,\n\t                x: -Math.round(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetX, 0) + fillRect.x,\n\t                y: -Math.round(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetY, 0) + fillRect.y\n\t            };\n\t            if (!skipTransform) {\n\t                return this._transformedRect(rect);\n\t            }\n\t            return rect;\n\t        },\n\t        drawScene: function(can, top, caching, skipBuffer) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || layer.getCanvas(),\n\t                context = canvas.getContext(),\n\t                cachedCanvas = this._cache.canvas,\n\t                drawFunc = this.sceneFunc(),\n\t                hasShadow = this.hasShadow(),\n\t                hasStroke = this.hasStroke(),\n\t                stage, bufferCanvas, bufferContext;\n\t\n\t            if(!this.isVisible()) {\n\t                return this;\n\t            }\n\t            if (cachedCanvas) {\n\t                context.save();\n\t                layer._applyTransform(this, context, top);\n\t                this._drawCachedSceneCanvas(context);\n\t                context.restore();\n\t                return this;\n\t            }\n\t            if (!drawFunc) {\n\t                return this;\n\t            }\n\t            context.save();\n\t            // if buffer canvas is needed\n\t            if (this._useBufferCanvas(caching) && !skipBuffer) {\n\t                stage = this.getStage();\n\t                bufferCanvas = stage.bufferCanvas;\n\t                bufferContext = bufferCanvas.getContext();\n\t                bufferContext.clear();\n\t                bufferContext.save();\n\t                bufferContext._applyLineJoin(this);\n\t                // layer might be undefined if we are using cache before adding to layer\n\t                if (!caching) {\n\t                    if (layer) {\n\t                        layer._applyTransform(this, bufferContext, top);\n\t                    } else {\n\t                        var m = this.getAbsoluteTransform(top).getMatrix();\n\t                        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t                    }\n\t                }\n\t\n\t                drawFunc.call(this, bufferContext);\n\t                bufferContext.restore();\n\t\n\t                var ratio = bufferCanvas.pixelRatio;\n\t                if (hasShadow && !canvas.hitCanvas) {\n\t                        context.save();\n\t                        context._applyShadow(this);\n\t                        context._applyOpacity(this);\n\t                        context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n\t                        context.restore();\n\t                } else {\n\t                    context._applyOpacity(this);\n\t                    context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n\t                }\n\t            }\n\t            // if buffer canvas is not needed\n\t            else {\n\t                context._applyLineJoin(this);\n\t                // layer might be undefined if we are using cache before adding to layer\n\t                if (!caching) {\n\t                    if (layer) {\n\t                        layer._applyTransform(this, context, top);\n\t                    } else {\n\t                        var o = this.getAbsoluteTransform(top).getMatrix();\n\t                        context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n\t                    }\n\t                }\n\t\n\t                if (hasShadow && hasStroke && !canvas.hitCanvas) {\n\t                    context.save();\n\t                    // apply shadow\n\t                    if (!caching) {\n\t                        context._applyOpacity(this);\n\t                    }\n\t                    context._applyShadow(this);\n\t                    drawFunc.call(this, context);\n\t                    context.restore();\n\t                    // if shape has stroke we need to redraw shape\n\t                    // otherwise we will see a shadow under stroke (and over fill)\n\t                    // but I think this is unexpected behavior\n\t                    if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n\t                        drawFunc.call(this, context);\n\t                    }\n\t                } else if (hasShadow && !canvas.hitCanvas) {\n\t                    context.save();\n\t                    if (!caching) {\n\t                        context._applyOpacity(this);\n\t                    }\n\t                    context._applyShadow(this);\n\t                    drawFunc.call(this, context);\n\t                    context.restore();\n\t                } else {\n\t                    if (!caching) {\n\t                        context._applyOpacity(this);\n\t                    }\n\t                    drawFunc.call(this, context);\n\t                }\n\t            }\n\t            context.restore();\n\t            return this;\n\t        },\n\t        drawHit: function(can, top, caching) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || layer.hitCanvas,\n\t                context = canvas.getContext(),\n\t                drawFunc = this.hitFunc() || this.sceneFunc(),\n\t                cachedCanvas = this._cache.canvas,\n\t                cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\t\n\t            if(!this.shouldDrawHit(canvas)) {\n\t                return this;\n\t            }\n\t            if (layer) {\n\t                layer.clearHitCache();\n\t            }\n\t            if (cachedHitCanvas) {\n\t                context.save();\n\t                layer._applyTransform(this, context, top);\n\t                this._drawCachedHitCanvas(context);\n\t                context.restore();\n\t                return this;\n\t            }\n\t            if (!drawFunc) {\n\t                return this;\n\t            }\n\t            context.save();\n\t            context._applyLineJoin(this);\n\t            if (!caching) {\n\t                if (layer) {\n\t                    layer._applyTransform(this, context, top);\n\t                } else {\n\t                    var o = this.getAbsoluteTransform(top).getMatrix();\n\t                    context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n\t                }\n\t            }\n\t            drawFunc.call(this, context);\n\t            context.restore();\n\t            return this;\n\t        },\n\t        /**\n\t        * draw hit graph using the cached scene canvas\n\t        * @method\n\t        * @memberof Konva.Shape.prototype\n\t        * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n\t        *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n\t        *  The default is 0\n\t        * @returns {Konva.Shape}\n\t        * @example\n\t        * shape.cache();\n\t        * shape.drawHitFromCache();\n\t        */\n\t        drawHitFromCache: function(alphaThreshold) {\n\t            var threshold = alphaThreshold || 0,\n\t                cachedCanvas = this._cache.canvas,\n\t                sceneCanvas = this._getCachedSceneCanvas(),\n\t                hitCanvas = cachedCanvas.hit,\n\t                hitContext = hitCanvas.getContext(),\n\t                hitWidth = hitCanvas.getWidth(),\n\t                hitHeight = hitCanvas.getHeight(),\n\t                hitImageData, hitData, len, rgbColorKey, i, alpha;\n\t\n\t            hitContext.clear();\n\t            hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\t\n\t            try {\n\t                hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n\t                hitData = hitImageData.data;\n\t                len = hitData.length;\n\t                rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\t\n\t                // replace non transparent pixels with color key\n\t                for(i = 0; i < len; i += 4) {\n\t                    alpha = hitData[i + 3];\n\t                    if (alpha > threshold) {\n\t                        hitData[i] = rgbColorKey.r;\n\t                        hitData[i + 1] = rgbColorKey.g;\n\t                        hitData[i + 2] = rgbColorKey.b;\n\t                        hitData[i + 3] = 255;\n\t                    }\n\t                    else {\n\t                        hitData[i + 3] = 0;\n\t                    }\n\t                }\n\t                hitContext.putImageData(hitImageData, 0, 0);\n\t            }\n\t            catch(e) {\n\t                Konva.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n\t            }\n\t\n\t            return this;\n\t        }\n\t    });\n\t    Konva.Util.extend(Konva.Shape, Konva.Node);\n\t\n\t    // add getters and setters\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'stroke');\n\t\n\t    /**\n\t     * get/set stroke color\n\t     * @name stroke\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} color\n\t     * @returns {String}\n\t     * @example\n\t     * // get stroke color\n\t     * var stroke = shape.stroke();\n\t     *\n\t     * // set stroke color with color string\n\t     * shape.stroke('green');\n\t     *\n\t     * // set stroke color with hex\n\t     * shape.stroke('#00ff00');\n\t     *\n\t     * // set stroke color with rgb\n\t     * shape.stroke('rgb(0,255,0)');\n\t     *\n\t     * // set stroke color with rgba and make it 50% opaque\n\t     * shape.stroke('rgba(0,255,0,0.5');\n\t     */\n\t\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeRed', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeGreen', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeBlue', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeAlpha', 1, Konva.Validators.alphaComponent);\n\t\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeWidth', 2);\n\t\n\t    /**\n\t     * get/set stroke width\n\t     * @name strokeWidth\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} strokeWidth\n\t     * @returns {Number}\n\t     * @example\n\t     * // get stroke width\n\t     * var strokeWidth = shape.strokeWidth();\n\t     *\n\t     * // set stroke width\n\t     * shape.strokeWidth();\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeHitEnabled', true);\n\t\n\t    /**\n\t     * get/set strokeHitEnabled property. Useful for performance optimization.\n\t     * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n\t     * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n\t     * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n\t     * Default value is true\n\t     * @name strokeHitEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} strokeHitEnabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get strokeHitEnabled\n\t     * var strokeHitEnabled = shape.strokeHitEnabled();\n\t     *\n\t     * // set strokeHitEnabled\n\t     * shape.strokeHitEnabled();\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'perfectDrawEnabled', true);\n\t\n\t    /**\n\t     * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to improve performance.\n\t     * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n\t     * Default value is true\n\t     * @name perfectDrawEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} perfectDrawEnabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get perfectDrawEnabled\n\t     * var perfectDrawEnabled = shape.perfectDrawEnabled();\n\t     *\n\t     * // set perfectDrawEnabled\n\t     * shape.perfectDrawEnabled();\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowForStrokeEnabled', true);\n\t\n\t    /**\n\t     * get/set shadowForStrokeEnabled. Useful for performance optimization.\n\t     * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n\t     * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n\t     * Default value is true\n\t     * @name shadowForStrokeEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} shadowForStrokeEnabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get shadowForStrokeEnabled\n\t     * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n\t     *\n\t     * // set shadowForStrokeEnabled\n\t     * shape.shadowForStrokeEnabled();\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\t\n\t    /**\n\t     * get/set line join.  Can be miter, round, or bevel.  The\n\t     *  default is miter\n\t     * @name lineJoin\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} lineJoin\n\t     * @returns {String}\n\t     * @example\n\t     * // get line join\n\t     * var lineJoin = shape.lineJoin();\n\t     *\n\t     * // set line join\n\t     * shape.lineJoin('round');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\t\n\t    /**\n\t     * get/set line cap.  Can be butt, round, or square\n\t     * @name lineCap\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} lineCap\n\t     * @returns {String}\n\t     * @example\n\t     * // get line cap\n\t     * var lineCap = shape.lineCap();\n\t     *\n\t     * // set line cap\n\t     * shape.lineCap('round');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\t\n\t    /**\n\t     * get/set scene draw function\n\t     * @name sceneFunc\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Function} drawFunc drawing function\n\t     * @returns {Function}\n\t     * @example\n\t     * // get scene draw function\n\t     * var sceneFunc = shape.sceneFunc();\n\t     *\n\t     * // set scene draw function\n\t     * shape.sceneFunc(function(context) {\n\t     *   context.beginPath();\n\t     *   context.rect(0, 0, this.width(), this.height());\n\t     *   context.closePath();\n\t     *   context.fillStrokeShape(this);\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\t\n\t    /**\n\t     * get/set hit draw function\n\t     * @name hitFunc\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Function} drawFunc drawing function\n\t     * @returns {Function}\n\t     * @example\n\t     * // get hit draw function\n\t     * var hitFunc = shape.hitFunc();\n\t     *\n\t     * // set hit draw function\n\t     * shape.hitFunc(function(context) {\n\t     *   context.beginPath();\n\t     *   context.rect(0, 0, this.width(), this.height());\n\t     *   context.closePath();\n\t     *   context.fillStrokeShape(this);\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\t\n\t    /**\n\t     * get/set dash array for stroke.\n\t     * @name dash\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Array} dash\n\t     * @returns {Array}\n\t     * @example\n\t     *  // apply dashed stroke that is 10px long and 5 pixels apart\n\t     *  line.dash([10, 5]);\n\t     *  // apply dashed stroke that is made up of alternating dashed\n\t     *  // lines that are 10px long and 20px apart, and dots that have\n\t     *  // a radius of 5px and are 20px apart\n\t     *  line.dash([10, 20, 0.001, 20]);\n\t     */\n\t\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowColor');\n\t\n\t    /**\n\t     * get/set shadow color\n\t     * @name shadowColor\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} color\n\t     * @returns {String}\n\t     * @example\n\t     * // get shadow color\n\t     * var shadow = shape.shadowColor();\n\t     *\n\t     * // set shadow color with color string\n\t     * shape.shadowColor('green');\n\t     *\n\t     * // set shadow color with hex\n\t     * shape.shadowColor('#00ff00');\n\t     *\n\t     * // set shadow color with rgb\n\t     * shape.shadowColor('rgb(0,255,0)');\n\t     *\n\t     * // set shadow color with rgba and make it 50% opaque\n\t     * shape.shadowColor('rgba(0,255,0,0.5');\n\t     */\n\t\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowRed', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowGreen', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowBlue', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowAlpha', 1, Konva.Validators.alphaComponent);\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowBlur');\n\t\n\t    /**\n\t     * get/set shadow blur\n\t     * @name shadowBlur\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} blur\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow blur\n\t     * var shadowBlur = shape.shadowBlur();\n\t     *\n\t     * // set shadow blur\n\t     * shape.shadowBlur(10);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOpacity');\n\t\n\t    /**\n\t     * get/set shadow opacity.  must be a value between 0 and 1\n\t     * @name shadowOpacity\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} opacity\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow opacity\n\t     * var shadowOpacity = shape.shadowOpacity();\n\t     *\n\t     * // set shadow opacity\n\t     * shape.shadowOpacity(0.5);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set shadow offset\n\t     * @name shadowOffset\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} offset\n\t     * @param {Number} offset.x\n\t     * @param {Number} offset.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get shadow offset\n\t     * var shadowOffset = shape.shadowOffset();\n\t     *\n\t     * // set shadow offset\n\t     * shape.shadowOffset({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetX', 0);\n\t\n\t     /**\n\t     * get/set shadow offset x\n\t     * @name shadowOffsetX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow offset x\n\t     * var shadowOffsetX = shape.shadowOffsetX();\n\t     *\n\t     * // set shadow offset x\n\t     * shape.shadowOffsetX(5);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetY', 0);\n\t\n\t     /**\n\t     * get/set shadow offset y\n\t     * @name shadowOffsetY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow offset y\n\t     * var shadowOffsetY = shape.shadowOffsetY();\n\t     *\n\t     * // set shadow offset y\n\t     * shape.shadowOffsetY(5);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\t\n\t    /**\n\t     * get/set fill pattern image\n\t     * @name fillPatternImage\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Image} image object\n\t     * @returns {Image}\n\t     * @example\n\t     * // get fill pattern image\n\t     * var fillPatternImage = shape.fillPatternImage();\n\t     *\n\t     * // set fill pattern image\n\t     * var imageObj = new Image();\n\t     * imageObj.onload = function() {\n\t     *   shape.fillPatternImage(imageObj);\n\t     * };\n\t     * imageObj.src = 'path/to/image/jpg';\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fill');\n\t\n\t    /**\n\t     * get/set fill color\n\t     * @name fill\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} color\n\t     * @returns {String}\n\t     * @example\n\t     * // get fill color\n\t     * var fill = shape.fill();\n\t     *\n\t     * // set fill color with color string\n\t     * shape.fill('green');\n\t     *\n\t     * // set fill color with hex\n\t     * shape.fill('#00ff00');\n\t     *\n\t     * // set fill color with rgb\n\t     * shape.fill('rgb(0,255,0)');\n\t     *\n\t     * // set fill color with rgba and make it 50% opaque\n\t     * shape.fill('rgba(0,255,0,0.5');\n\t     *\n\t     * // shape without fill\n\t     * shape.fill(null);\n\t     */\n\t\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillRed', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillGreen', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillBlue', 0, Konva.Validators.RGBComponent);\n\t    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillAlpha', 1, Konva.Validators.alphaComponent);\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternX', 0);\n\t\n\t    /**\n\t     * get/set fill pattern x\n\t     * @name fillPatternX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern x\n\t     * var fillPatternX = shape.fillPatternX();\n\t     * // set fill pattern x\n\t     * shape.fillPatternX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternY', 0);\n\t\n\t    /**\n\t     * get/set fill pattern y\n\t     * @name fillPatternY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern y\n\t     * var fillPatternY = shape.fillPatternY();\n\t     * // set fill pattern y\n\t     * shape.fillPatternY(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\t\n\t    /**\n\t     * get/set fill linear gradient color stops\n\t     * @name fillLinearGradientColorStops\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Array} colorStops\n\t     * @returns {Array} colorStops\n\t     * @example\n\t     * // get fill linear gradient color stops\n\t     * var colorStops = shape.fillLinearGradientColorStops();\n\t     *\n\t     * // create a linear gradient that starts with red, changes to blue\n\t     * // halfway through, and then changes to green\n\t     * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientStartRadius', 0);\n\t\n\t    /**\n\t     * get/set fill radial gradient start radius\n\t     * @name fillRadialGradientStartRadius\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radial gradient start radius\n\t     * var startRadius = shape.fillRadialGradientStartRadius();\n\t     *\n\t     * // set radial gradient start radius\n\t     * shape.fillRadialGradientStartRadius(0);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\t\n\t    /**\n\t     * get/set fill radial gradient end radius\n\t     * @name fillRadialGradientEndRadius\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radial gradient end radius\n\t     * var endRadius = shape.fillRadialGradientEndRadius();\n\t     *\n\t     * // set radial gradient end radius\n\t     * shape.fillRadialGradientEndRadius(100);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\t\n\t    /**\n\t     * get/set fill radial gradient color stops\n\t     * @name fillRadialGradientColorStops\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} colorStops\n\t     * @returns {Array}\n\t     * @example\n\t     * // get fill radial gradient color stops\n\t     * var colorStops = shape.fillRadialGradientColorStops();\n\t     *\n\t     * // create a radial gradient that starts with red, changes to blue\n\t     * // halfway through, and then changes to green\n\t     * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\t\n\t    /**\n\t     * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n\t     * @name fillPatternRepeat\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} repeat\n\t     * @returns {String}\n\t     * @example\n\t     * // get fill pattern repeat\n\t     * var repeat = shape.fillPatternRepeat();\n\t     *\n\t     * // repeat pattern in x direction only\n\t     * shape.fillPatternRepeat('repeat-x');\n\t     *\n\t     * // do not repeat the pattern\n\t     * shape.fillPatternRepeat('no repeat');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\t\n\t    /**\n\t     * get/set fill enabled flag\n\t     * @name fillEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get fill enabled flag\n\t     * var fillEnabled = shape.fillEnabled();\n\t     *\n\t     * // disable fill\n\t     * shape.fillEnabled(false);\n\t     *\n\t     * // enable fill\n\t     * shape.fillEnabled(true);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\t\n\t    /**\n\t     * get/set stroke enabled flag\n\t     * @name strokeEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get stroke enabled flag\n\t     * var strokeEnabled = shape.strokeEnabled();\n\t     *\n\t     * // disable stroke\n\t     * shape.strokeEnabled(false);\n\t     *\n\t     * // enable stroke\n\t     * shape.strokeEnabled(true);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\t\n\t    /**\n\t     * get/set shadow enabled flag\n\t     * @name shadowEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get shadow enabled flag\n\t     * var shadowEnabled = shape.shadowEnabled();\n\t     *\n\t     * // disable shadow\n\t     * shape.shadowEnabled(false);\n\t     *\n\t     * // enable shadow\n\t     * shape.shadowEnabled(true);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\t\n\t    /**\n\t     * get/set dash enabled flag\n\t     * @name dashEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get dash enabled flag\n\t     * var dashEnabled = shape.dashEnabled();\n\t     *\n\t     * // disable dash\n\t     * shape.dashEnabled(false);\n\t     *\n\t     * // enable dash\n\t     * shape.dashEnabled(true);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\t\n\t    /**\n\t     * get/set strokeScale enabled flag\n\t     * @name strokeScaleEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get stroke scale enabled flag\n\t     * var strokeScaleEnabled = shape.strokeScaleEnabled();\n\t     *\n\t     * // disable stroke scale\n\t     * shape.strokeScaleEnabled(false);\n\t     *\n\t     * // enable stroke scale\n\t     * shape.strokeScaleEnabled(true);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\t\n\t    /**\n\t     * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n\t     *   This is handy if you want to toggle between different fill types.\n\t     * @name fillPriority\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} priority\n\t     * @returns {String}\n\t     * @example\n\t     * // get fill priority\n\t     * var fillPriority = shape.fillPriority();\n\t     *\n\t     * // set fill priority\n\t     * shape.fillPriority('linear-gradient');\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set fill pattern offset\n\t     * @name fillPatternOffset\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} offset\n\t     * @param {Number} offset.x\n\t     * @param {Number} offset.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill pattern offset\n\t     * var patternOffset = shape.fillPatternOffset();\n\t     *\n\t     * // set fill pattern offset\n\t     * shape.fillPatternOffset({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetX', 0);\n\t    /**\n\t     * get/set fill pattern offset x\n\t     * @name fillPatternOffsetX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern offset x\n\t     * var patternOffsetX = shape.fillPatternOffsetX();\n\t     *\n\t     * // set fill pattern offset x\n\t     * shape.fillPatternOffsetX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetY', 0);\n\t    /**\n\t     * get/set fill pattern offset y\n\t     * @name fillPatternOffsetY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern offset y\n\t     * var patternOffsetY = shape.fillPatternOffsetY();\n\t     *\n\t     * // set fill pattern offset y\n\t     * shape.fillPatternOffsetY(10);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set fill pattern scale\n\t     * @name fillPatternScale\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} scale\n\t     * @param {Number} scale.x\n\t     * @param {Number} scale.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill pattern scale\n\t     * var patternScale = shape.fillPatternScale();\n\t     *\n\t     * // set fill pattern scale\n\t     * shape.fillPatternScale({\n\t     *   x: 2\n\t     *   y: 2\n\t     * });\n\t     */\n\t\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleX', 1);\n\t    /**\n\t     * get/set fill pattern scale x\n\t     * @name fillPatternScaleX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern scale x\n\t     * var patternScaleX = shape.fillPatternScaleX();\n\t     *\n\t     * // set fill pattern scale x\n\t     * shape.fillPatternScaleX(2);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleY', 1);\n\t    /**\n\t     * get/set fill pattern scale y\n\t     * @name fillPatternScaleY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern scale y\n\t     * var patternScaleY = shape.fillPatternScaleY();\n\t     *\n\t     * // set fill pattern scale y\n\t     * shape.fillPatternScaleY(2);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillLinearGradientStartPoint', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set fill linear gradient start point\n\t     * @name fillLinearGradientStartPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} startPoint\n\t     * @param {Number} startPoint.x\n\t     * @param {Number} startPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill linear gradient start point\n\t     * var startPoint = shape.fillLinearGradientStartPoint();\n\t     *\n\t     * // set fill linear gradient start point\n\t     * shape.fillLinearGradientStartPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientStartPointX', 0);\n\t    /**\n\t     * get/set fill linear gradient start point x\n\t     * @name fillLinearGradientStartPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient start point x\n\t     * var startPointX = shape.fillLinearGradientStartPointX();\n\t     *\n\t     * // set fill linear gradient start point x\n\t     * shape.fillLinearGradientStartPointX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientStartPointY', 0);\n\t    /**\n\t     * get/set fill linear gradient start point y\n\t     * @name fillLinearGradientStartPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient start point y\n\t     * var startPointY = shape.fillLinearGradientStartPointY();\n\t     *\n\t     * // set fill linear gradient start point y\n\t     * shape.fillLinearGradientStartPointY(20);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillLinearGradientEndPoint', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set fill linear gradient end point\n\t     * @name fillLinearGradientEndPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} endPoint\n\t     * @param {Number} endPoint.x\n\t     * @param {Number} endPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill linear gradient end point\n\t     * var endPoint = shape.fillLinearGradientEndPoint();\n\t     *\n\t     * // set fill linear gradient end point\n\t     * shape.fillLinearGradientEndPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n\t    /**\n\t     * get/set fill linear gradient end point x\n\t     * @name fillLinearGradientEndPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient end point x\n\t     * var endPointX = shape.fillLinearGradientEndPointX();\n\t     *\n\t     * // set fill linear gradient end point x\n\t     * shape.fillLinearGradientEndPointX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n\t    /**\n\t     * get/set fill linear gradient end point y\n\t     * @name fillLinearGradientEndPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient end point y\n\t     * var endPointY = shape.fillLinearGradientEndPointY();\n\t     *\n\t     * // set fill linear gradient end point y\n\t     * shape.fillLinearGradientEndPointY(20);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillRadialGradientStartPoint', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set fill radial gradient start point\n\t     * @name fillRadialGradientStartPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} startPoint\n\t     * @param {Number} startPoint.x\n\t     * @param {Number} startPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill radial gradient start point\n\t     * var startPoint = shape.fillRadialGradientStartPoint();\n\t     *\n\t     * // set fill radial gradient start point\n\t     * shape.fillRadialGradientStartPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientStartPointX', 0);\n\t    /**\n\t     * get/set fill radial gradient start point x\n\t     * @name fillRadialGradientStartPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient start point x\n\t     * var startPointX = shape.fillRadialGradientStartPointX();\n\t     *\n\t     * // set fill radial gradient start point x\n\t     * shape.fillRadialGradientStartPointX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientStartPointY', 0);\n\t    /**\n\t     * get/set fill radial gradient start point y\n\t     * @name fillRadialGradientStartPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient start point y\n\t     * var startPointY = shape.fillRadialGradientStartPointY();\n\t     *\n\t     * // set fill radial gradient start point y\n\t     * shape.fillRadialGradientStartPointY(20);\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillRadialGradientEndPoint', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set fill radial gradient end point\n\t     * @name fillRadialGradientEndPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} endPoint\n\t     * @param {Number} endPoint.x\n\t     * @param {Number} endPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill radial gradient end point\n\t     * var endPoint = shape.fillRadialGradientEndPoint();\n\t     *\n\t     * // set fill radial gradient end point\n\t     * shape.fillRadialGradientEndPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n\t    /**\n\t     * get/set fill radial gradient end point x\n\t     * @name fillRadialGradientEndPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient end point x\n\t     * var endPointX = shape.fillRadialGradientEndPointX();\n\t     *\n\t     * // set fill radial gradient end point x\n\t     * shape.fillRadialGradientEndPointX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n\t    /**\n\t     * get/set fill radial gradient end point y\n\t     * @name fillRadialGradientEndPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient end point y\n\t     * var endPointY = shape.fillRadialGradientEndPointY();\n\t     *\n\t     * // set fill radial gradient end point y\n\t     * shape.fillRadialGradientEndPointY(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\t\n\t    /**\n\t     * get/set fill pattern rotation in degrees\n\t     * @name fillPatternRotation\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} rotation\n\t     * @returns {Konva.Shape}\n\t     * @example\n\t     * // get fill pattern rotation\n\t     * var patternRotation = shape.fillPatternRotation();\n\t     *\n\t     * // set fill pattern rotation\n\t     * shape.fillPatternRotation(20);\n\t     */\n\t\n\t\n\t    Konva.Factory.backCompat(Konva.Shape, {\n\t        dashArray: 'dash',\n\t        getDashArray: 'getDash',\n\t        setDashArray: 'getDash',\n\t\n\t        drawFunc: 'sceneFunc',\n\t        getDrawFunc: 'getSceneFunc',\n\t        setDrawFunc: 'setSceneFunc',\n\t\n\t        drawHitFunc: 'hitFunc',\n\t        getDrawHitFunc: 'getHitFunc',\n\t        setDrawHitFunc: 'setHitFunc'\n\t    });\n\t\n\t    Konva.Collection.mapMethods(Konva.Shape);\n\t})(Konva);\n\t\n\t(function() {\n\t    'use strict';\n\t    // CONSTANTS\n\t    var STAGE = 'Stage',\n\t        STRING = 'string',\n\t        PX = 'px',\n\t\n\t        MOUSEOUT = 'mouseout',\n\t        MOUSELEAVE = 'mouseleave',\n\t        MOUSEOVER = 'mouseover',\n\t        MOUSEENTER = 'mouseenter',\n\t        MOUSEMOVE = 'mousemove',\n\t        MOUSEDOWN = 'mousedown',\n\t        MOUSEUP = 'mouseup',\n\t        CLICK = 'click',\n\t        DBL_CLICK = 'dblclick',\n\t        TOUCHSTART = 'touchstart',\n\t        TOUCHEND = 'touchend',\n\t        TAP = 'tap',\n\t        DBL_TAP = 'dbltap',\n\t        TOUCHMOVE = 'touchmove',\n\t        DOMMOUSESCROLL = 'DOMMouseScroll',\n\t        MOUSEWHEEL = 'mousewheel',\n\t        WHEEL = 'wheel',\n\t\n\t        CONTENT_MOUSEOUT = 'contentMouseout',\n\t        CONTENT_MOUSEOVER = 'contentMouseover',\n\t        CONTENT_MOUSEMOVE = 'contentMousemove',\n\t        CONTENT_MOUSEDOWN = 'contentMousedown',\n\t        CONTENT_MOUSEUP = 'contentMouseup',\n\t        CONTENT_CLICK = 'contentClick',\n\t        CONTENT_DBL_CLICK = 'contentDblclick',\n\t        CONTENT_TOUCHSTART = 'contentTouchstart',\n\t        CONTENT_TOUCHEND = 'contentTouchend',\n\t        CONTENT_DBL_TAP = 'contentDbltap',\n\t        CONTENT_TAP = 'contentTap',\n\t        CONTENT_TOUCHMOVE = 'contentTouchmove',\n\t        CONTENT_WHEEL = 'contentWheel',\n\t\n\t        DIV = 'div',\n\t        RELATIVE = 'relative',\n\t        KONVA_CONTENT = 'konvajs-content',\n\t        SPACE = ' ',\n\t        UNDERSCORE = '_',\n\t        CONTAINER = 'container',\n\t        EMPTY_STRING = '',\n\t        EVENTS = [MOUSEDOWN, MOUSEMOVE, MOUSEUP, MOUSEOUT, TOUCHSTART, TOUCHMOVE, TOUCHEND, MOUSEOVER, DOMMOUSESCROLL, MOUSEWHEEL, WHEEL],\n\t\n\t        // cached variables\n\t        eventsLength = EVENTS.length;\n\t\n\t    function addEvent(ctx, eventName) {\n\t        ctx.content.addEventListener(eventName, function(evt) {\n\t            ctx[UNDERSCORE + eventName](evt);\n\t        }, false);\n\t    }\n\t\n\t    /**\n\t     * Stage constructor.  A stage is used to contain multiple layers\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Container\n\t     * @param {Object} config\n\t     * @param {String|Element} config.container Container selector or DOM element\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var stage = new Konva.Stage({\n\t         *   width: 500,\n\t         *   height: 800,\n\t         *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n\t         * });\n\t     */\n\t    Konva.Stage = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.Stage, {\n\t        ___init: function(config) {\n\t            this.nodeType = STAGE;\n\t            // call super constructor\n\t            Konva.Container.call(this, config);\n\t            this._id = Konva.idCounter++;\n\t            this._buildDOM();\n\t            this._bindContentEvents();\n\t            this._enableNestedTransforms = false;\n\t            Konva.stages.push(this);\n\t        },\n\t        _validateAdd: function(child) {\n\t            if (child.getType() !== 'Layer') {\n\t                Konva.Util.throw('You may only add layers to the stage.');\n\t            }\n\t        },\n\t        /**\n\t         * set container dom element which contains the stage wrapper div element\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {DomElement} container can pass in a dom element or id string\n\t         */\n\t        setContainer: function (container) {\n\t            if (typeof container === STRING) {\n\t                if (container.charAt(0) === '.') {\n\t                    var className = container.slice(1);\n\t                    container = Konva.document.getElementsByClassName(className)[0];\n\t                } else {\n\t                    var id;\n\t                    if (container.charAt(0) !== '#') {\n\t                        id = container;\n\t                    } else {\n\t                        id = container.slice(1);\n\t                    }\n\t                    container = Konva.document.getElementById(id);\n\t                }\n\t                if (!container) {\n\t                    throw 'Can not find container in document with id ' + id;\n\t                }\n\t            }\n\t            this._setAttr(CONTAINER, container);\n\t            return this;\n\t        },\n\t        shouldDrawHit: function() {\n\t            return true;\n\t        },\n\t        draw: function() {\n\t            Konva.Node.prototype.draw.call(this);\n\t            return this;\n\t        },\n\t        /**\n\t         * draw layer scene graphs\n\t         * @name draw\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t\n\t        /**\n\t         * draw layer hit graphs\n\t         * @name drawHit\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t\n\t        /**\n\t         * set height\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Number} height\n\t         */\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            this._resizeDOM();\n\t            return this;\n\t        },\n\t        /**\n\t         * set width\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Number} width\n\t         */\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            this._resizeDOM();\n\t            return this;\n\t        },\n\t        /**\n\t         * clear all layers\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t        clear: function() {\n\t            var layers = this.children,\n\t                len = layers.length,\n\t                n;\n\t\n\t            for(n = 0; n < len; n++) {\n\t                layers[n].clear();\n\t            }\n\t            return this;\n\t        },\n\t        clone: function(obj) {\n\t            if (!obj) {\n\t                obj = {};\n\t            }\n\t            obj.container = Konva.document.createElement(DIV);\n\t            return Konva.Container.prototype.clone.call(this, obj);\n\t        },\n\t        /**\n\t         * destroy stage\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t        destroy: function() {\n\t            var content = this.content;\n\t            Konva.Container.prototype.destroy.call(this);\n\t\n\t            if(content && Konva.Util._isInDocument(content)) {\n\t                this.getContainer().removeChild(content);\n\t            }\n\t            var index = Konva.stages.indexOf(this);\n\t            if (index > -1) {\n\t                Konva.stages.splice(index, 1);\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * get pointer position which can be a touch position or mouse position\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @returns {Object}\n\t         */\n\t        getPointerPosition: function() {\n\t            return this.pointerPos;\n\t        },\n\t        getStage: function() {\n\t            return this;\n\t        },\n\t        /**\n\t         * get stage content div element which has the\n\t         *  the class name \"konvajs-content\"\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t        getContent: function() {\n\t            return this.content;\n\t        },\n\t        /**\n\t         * Creates a composite data URL\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Object} config\n\t         * @param {Function} [config.callback] function executed when the composite has completed. Deprecated as method is sync now.\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         */\n\t        toDataURL: function(config) {\n\t            config = config || {};\n\t\n\t            var mimeType = config.mimeType || null,\n\t                quality = config.quality || null,\n\t                x = config.x || 0,\n\t                y = config.y || 0,\n\t                canvas = new Konva.SceneCanvas({\n\t                    width: config.width || this.getWidth(),\n\t                    height: config.height || this.getHeight(),\n\t                    pixelRatio: config.pixelRatio\n\t                }),\n\t                _context = canvas.getContext()._context,\n\t                layers = this.children;\n\t\n\t            if(x || y) {\n\t                _context.translate(-1 * x, -1 * y);\n\t            }\n\t\n\t\n\t            layers.each(function(layer) {\n\t                var width = layer.getCanvas().getWidth();\n\t                var height = layer.getCanvas().getHeight();\n\t                var ratio = layer.getCanvas().getPixelRatio();\n\t                _context.drawImage(layer.getCanvas()._canvas, 0, 0, width / ratio, height / ratio);\n\t            });\n\t            var src = canvas.toDataURL(mimeType, quality);\n\t\n\t            if (config.callback) {\n\t                config.callback(src);\n\t            }\n\t\n\t            return src;\n\t        },\n\t        /**\n\t         * converts stage into an image.\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Object} config\n\t         * @param {Function} config.callback function executed when the composite has completed\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         */\n\t        toImage: function(config) {\n\t            var cb = config.callback;\n\t\n\t            config.callback = function(dataUrl) {\n\t                Konva.Util._getImage(dataUrl, function(img) {\n\t                    cb(img);\n\t                });\n\t            };\n\t            this.toDataURL(config);\n\t        },\n\t        /**\n\t         * get visible intersection shape. This is the preferred\n\t         *  method for determining if a point intersects a shape or not\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @param {String} [selector]\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * var shape = stage.getIntersection({x: 50, y: 50});\n\t         * // or if you interested in shape parent:\n\t         * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n\t         */\n\t        getIntersection: function(pos, selector) {\n\t            var layers = this.getChildren(),\n\t                len = layers.length,\n\t                end = len - 1,\n\t                n, shape;\n\t\n\t            for(n = end; n >= 0; n--) {\n\t                shape = layers[n].getIntersection(pos, selector);\n\t                if (shape) {\n\t                    return shape;\n\t                }\n\t            }\n\t\n\t            return null;\n\t        },\n\t        _resizeDOM: function() {\n\t            if(this.content) {\n\t                var width = this.getWidth(),\n\t                    height = this.getHeight(),\n\t                    layers = this.getChildren(),\n\t                    len = layers.length,\n\t                    n, layer;\n\t\n\t                // set content dimensions\n\t                this.content.style.width = width + PX;\n\t                this.content.style.height = height + PX;\n\t\n\t                this.bufferCanvas.setSize(width, height);\n\t                this.bufferHitCanvas.setSize(width, height);\n\t\n\t                // set layer dimensions\n\t                for(n = 0; n < len; n++) {\n\t                    layer = layers[n];\n\t                    layer.setSize(width, height);\n\t                    layer.draw();\n\t                }\n\t            }\n\t        },\n\t        /**\n\t         * add layer or layers to stage\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {...Konva.Layer} layer\n\t         * @example\n\t         * stage.add(layer1, layer2, layer3);\n\t         */\n\t        add: function(layer) {\n\t            if (arguments.length > 1) {\n\t                for (var i = 0; i < arguments.length; i++) {\n\t                    this.add(arguments[i]);\n\t                }\n\t                return this;\n\t            }\n\t            Konva.Container.prototype.add.call(this, layer);\n\t            layer._setCanvasSize(this.width(), this.height());\n\t\n\t            // draw layer and append canvas to container\n\t            layer.draw();\n\t            this.content.appendChild(layer.canvas._canvas);\n\t\n\t            // chainable\n\t            return this;\n\t        },\n\t        getParent: function() {\n\t            return null;\n\t        },\n\t        getLayer: function() {\n\t            return null;\n\t        },\n\t        /**\n\t         * returns a {@link Konva.Collection} of layers\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t        getLayers: function() {\n\t            return this.getChildren();\n\t        },\n\t        _bindContentEvents: function() {\n\t            for (var n = 0; n < eventsLength; n++) {\n\t                addEvent(this, EVENTS[n]);\n\t            }\n\t        },\n\t        _mouseover: function(evt) {\n\t            if (!Konva.UA.mobile) {\n\t                this._setPointerPosition(evt);\n\t                this._fire(CONTENT_MOUSEOVER, {evt: evt});\n\t            }\n\t        },\n\t        _mouseout: function(evt) {\n\t            if (!Konva.UA.mobile) {\n\t                this._setPointerPosition(evt);\n\t                var targetShape = this.targetShape;\n\t\n\t                if(targetShape && !Konva.isDragging()) {\n\t                    targetShape._fireAndBubble(MOUSEOUT, {evt: evt});\n\t                    targetShape._fireAndBubble(MOUSELEAVE, {evt: evt});\n\t                    this.targetShape = null;\n\t                }\n\t                this.pointerPos = undefined;\n\t\n\t                this._fire(CONTENT_MOUSEOUT, {evt: evt});\n\t            }\n\t        },\n\t        _mousemove: function(evt) {\n\t            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n\t            if (Konva.UA.ieMobile) {\n\t                return this._touchmove(evt);\n\t            }\n\t            // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n\t            if ((typeof evt.movementX !== 'undefined' || typeof evt.movementY !== 'undefined') && evt.movementY === 0 && evt.movementX === 0) {\n\t                return null;\n\t            }\n\t            if (Konva.UA.mobile) {\n\t                return null;\n\t            }\n\t            this._setPointerPosition(evt);\n\t            var shape;\n\t\n\t            if (!Konva.isDragging()) {\n\t                shape = this.getIntersection(this.getPointerPosition());\n\t                if(shape && shape.isListening()) {\n\t                    if(!Konva.isDragging() && (!this.targetShape || this.targetShape._id !== shape._id)) {\n\t                        if(this.targetShape) {\n\t                            this.targetShape._fireAndBubble(MOUSEOUT, {evt: evt}, shape);\n\t                            this.targetShape._fireAndBubble(MOUSELEAVE, {evt: evt}, shape);\n\t                        }\n\t                        shape._fireAndBubble(MOUSEOVER, {evt: evt}, this.targetShape);\n\t                        shape._fireAndBubble(MOUSEENTER, {evt: evt}, this.targetShape);\n\t                        this.targetShape = shape;\n\t                    }\n\t                    else {\n\t                        shape._fireAndBubble(MOUSEMOVE, {evt: evt});\n\t                    }\n\t                }\n\t                /*\n\t                 * if no shape was detected, clear target shape and try\n\t                 * to run mouseout from previous target shape\n\t                 */\n\t                else {\n\t                    if(this.targetShape && !Konva.isDragging()) {\n\t                        this.targetShape._fireAndBubble(MOUSEOUT, {evt: evt});\n\t                        this.targetShape._fireAndBubble(MOUSELEAVE, {evt: evt});\n\t                        this.targetShape = null;\n\t                    }\n\t\n\t                }\n\t\n\t                // content event\n\t                this._fire(CONTENT_MOUSEMOVE, {evt: evt});\n\t            }\n\t\n\t            // always call preventDefault for desktop events because some browsers\n\t            // try to drag and drop the canvas element\n\t            if (evt.preventDefault) {\n\t                evt.preventDefault();\n\t            }\n\t        },\n\t        _mousedown: function(evt) {\n\t            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n\t            if (Konva.UA.ieMobile) {\n\t                return this._touchstart(evt);\n\t            }\n\t            if (!Konva.UA.mobile) {\n\t                this._setPointerPosition(evt);\n\t                var shape = this.getIntersection(this.getPointerPosition());\n\t\n\t                Konva.listenClickTap = true;\n\t\n\t                if (shape && shape.isListening()) {\n\t                    this.clickStartShape = shape;\n\t                    shape._fireAndBubble(MOUSEDOWN, {evt: evt});\n\t                }\n\t\n\t                // content event\n\t                this._fire(CONTENT_MOUSEDOWN, {evt: evt});\n\t            }\n\t\n\t            // always call preventDefault for desktop events because some browsers\n\t            // try to drag and drop the canvas element\n\t            if (evt.preventDefault) {\n\t                evt.preventDefault();\n\t            }\n\t        },\n\t        _mouseup: function(evt) {\n\t\n\t            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n\t            if (Konva.UA.ieMobile) {\n\t                return this._touchend(evt);\n\t            }\n\t            if (!Konva.UA.mobile) {\n\t                this._setPointerPosition(evt);\n\t                var shape = this.getIntersection(this.getPointerPosition()),\n\t                    clickStartShape = this.clickStartShape,\n\t                    fireDblClick = false,\n\t                    dd = Konva.DD;\n\t\n\t                if(Konva.inDblClickWindow) {\n\t                    fireDblClick = true;\n\t                    Konva.inDblClickWindow = false;\n\t                }\n\t                // don't set inDblClickWindow after dragging\n\t                else if (!dd || !dd.justDragged) {\n\t                    Konva.inDblClickWindow = true;\n\t                } else if (dd) {\n\t                    dd.justDragged = false;\n\t                }\n\t\n\t                setTimeout(function() {\n\t                    Konva.inDblClickWindow = false;\n\t                }, Konva.dblClickWindow);\n\t\n\t                if (shape && shape.isListening()) {\n\t                    shape._fireAndBubble(MOUSEUP, {evt: evt});\n\t\n\t                    // detect if click or double click occurred\n\t                    if(Konva.listenClickTap && clickStartShape && clickStartShape._id === shape._id) {\n\t                        shape._fireAndBubble(CLICK, {evt: evt});\n\t\n\t                        if(fireDblClick) {\n\t                            shape._fireAndBubble(DBL_CLICK, {evt: evt});\n\t                        }\n\t                    }\n\t                }\n\t                // content events\n\t                this._fire(CONTENT_MOUSEUP, {evt: evt});\n\t                if (Konva.listenClickTap) {\n\t                    this._fire(CONTENT_CLICK, {evt: evt});\n\t                    if(fireDblClick) {\n\t                        this._fire(CONTENT_DBL_CLICK, {evt: evt});\n\t                    }\n\t                }\n\t\n\t                Konva.listenClickTap = false;\n\t            }\n\t\n\t            // always call preventDefault for desktop events because some browsers\n\t            // try to drag and drop the canvas element\n\t            if (evt.preventDefault) {\n\t                evt.preventDefault();\n\t            }\n\t        },\n\t        _touchstart: function(evt) {\n\t            this._setPointerPosition(evt);\n\t            var shape = this.getIntersection(this.getPointerPosition());\n\t\n\t            Konva.listenClickTap = true;\n\t\n\t            if (shape && shape.isListening()) {\n\t                this.tapStartShape = shape;\n\t                shape._fireAndBubble(TOUCHSTART, {evt: evt});\n\t\n\t                // only call preventDefault if the shape is listening for events\n\t                if (shape.isListening() && shape.preventDefault() && evt.preventDefault) {\n\t                    evt.preventDefault();\n\t                }\n\t            }\n\t            // content event\n\t            this._fire(CONTENT_TOUCHSTART, {evt: evt});\n\t        },\n\t        _touchend: function(evt) {\n\t            this._setPointerPosition(evt);\n\t            var shape = this.getIntersection(this.getPointerPosition()),\n\t                fireDblClick = false;\n\t\n\t            if(Konva.inDblClickWindow) {\n\t                fireDblClick = true;\n\t                Konva.inDblClickWindow = false;\n\t            }\n\t            else {\n\t                Konva.inDblClickWindow = true;\n\t            }\n\t\n\t            setTimeout(function() {\n\t                Konva.inDblClickWindow = false;\n\t            }, Konva.dblClickWindow);\n\t\n\t            if (shape && shape.isListening()) {\n\t                shape._fireAndBubble(TOUCHEND, {evt: evt});\n\t\n\t                // detect if tap or double tap occurred\n\t                if(Konva.listenClickTap && this.tapStartShape && shape._id === this.tapStartShape._id) {\n\t                    shape._fireAndBubble(TAP, {evt: evt});\n\t\n\t                    if(fireDblClick) {\n\t                        shape._fireAndBubble(DBL_TAP, {evt: evt});\n\t                    }\n\t                }\n\t                // only call preventDefault if the shape is listening for events\n\t                if (shape.isListening() && shape.preventDefault() && evt.preventDefault) {\n\t                    evt.preventDefault();\n\t                }\n\t            }\n\t            // content events\n\t            this._fire(CONTENT_TOUCHEND, {evt: evt});\n\t            if (Konva.listenClickTap) {\n\t                this._fire(CONTENT_TAP, {evt: evt});\n\t                if(fireDblClick) {\n\t                    this._fire(CONTENT_DBL_TAP, {evt: evt});\n\t                }\n\t            }\n\t\n\t            Konva.listenClickTap = false;\n\t        },\n\t        _touchmove: function(evt) {\n\t            this._setPointerPosition(evt);\n\t            var dd = Konva.DD,\n\t                shape;\n\t            if (!Konva.isDragging()) {\n\t                shape = this.getIntersection(this.getPointerPosition());\n\t                if (shape && shape.isListening()) {\n\t                    shape._fireAndBubble(TOUCHMOVE, {evt: evt});\n\t                    // only call preventDefault if the shape is listening for events\n\t                    if (shape.isListening() && shape.preventDefault() && evt.preventDefault) {\n\t                        evt.preventDefault();\n\t                    }\n\t                }\n\t                this._fire(CONTENT_TOUCHMOVE, {evt: evt});\n\t            }\n\t            if(dd) {\n\t                if (Konva.isDragging() && Konva.DD.node.preventDefault()) {\n\t                    evt.preventDefault();\n\t                }\n\t            }\n\t        },\n\t        _DOMMouseScroll: function(evt) {\n\t            this._mousewheel(evt);\n\t        },\n\t        _mousewheel: function(evt) {\n\t            this._setPointerPosition(evt);\n\t            var shape = this.getIntersection(this.getPointerPosition());\n\t\n\t            if (shape && shape.isListening()) {\n\t                shape._fireAndBubble(WHEEL, {evt: evt});\n\t            }\n\t            this._fire(CONTENT_WHEEL, {evt: evt});\n\t        },\n\t        _wheel: function(evt) {\n\t            this._mousewheel(evt);\n\t        },\n\t        _setPointerPosition: function(evt) {\n\t            var contentPosition = this._getContentPosition(),\n\t                x = null,\n\t                y = null;\n\t            evt = evt ? evt : window.event;\n\t\n\t            // touch events\n\t            if(evt.touches !== undefined) {\n\t                // currently, only handle one finger\n\t                if (evt.touches.length > 0) {\n\t\n\t                    var touch = evt.touches[0];\n\t                    // get the information for finger #1\n\t                    x = touch.clientX - contentPosition.left;\n\t                    y = touch.clientY - contentPosition.top;\n\t                }\n\t            }\n\t            // mouse events\n\t            else {\n\t                x = evt.clientX - contentPosition.left;\n\t                y = evt.clientY - contentPosition.top;\n\t            }\n\t            if (x !== null && y !== null) {\n\t                this.pointerPos = {\n\t                    x: x,\n\t                    y: y\n\t                };\n\t            }\n\t        },\n\t        _getContentPosition: function() {\n\t            var rect = this.content.getBoundingClientRect ? this.content.getBoundingClientRect() : { top: 0, left: 0 };\n\t            return {\n\t                top: rect.top,\n\t                left: rect.left\n\t            };\n\t        },\n\t        _buildDOM: function() {\n\t            var container = this.getContainer();\n\t            if (!container) {\n\t                if (Konva.Util.isBrowser()) {\n\t                    throw 'Stage has no container. A container is required.';\n\t                } else {\n\t                    // automatically create element for jsdom in nodejs env\n\t                    container = Konva.document.createElement(DIV);\n\t                }\n\t            }\n\t            // clear content inside container\n\t            container.innerHTML = EMPTY_STRING;\n\t\n\t            // content\n\t            this.content = Konva.document.createElement(DIV);\n\t            this.content.style.position = RELATIVE;\n\t            this.content.className = KONVA_CONTENT;\n\t            this.content.setAttribute('role', 'presentation');\n\t            container.appendChild(this.content);\n\t\n\t            // the buffer canvas pixel ratio must be 1 because it is used as an\n\t            // intermediate canvas before copying the result onto a scene canvas.\n\t            // not setting it to 1 will result in an over compensation\n\t            this.bufferCanvas = new Konva.SceneCanvas();\n\t            this.bufferHitCanvas = new Konva.HitCanvas({pixelRatio: 1});\n\t\n\t            this._resizeDOM();\n\t        },\n\t        _onContent: function(typesStr, handler) {\n\t            var types = typesStr.split(SPACE),\n\t                len = types.length,\n\t                n, baseEvent;\n\t\n\t            for(n = 0; n < len; n++) {\n\t                baseEvent = types[n];\n\t                this.content.addEventListener(baseEvent, handler, false);\n\t            }\n\t        },\n\t        // currently cache function is now working for stage, because stage has no its own canvas element\n\t        // TODO: may be it is better to cache all children layers?\n\t        cache: function() {\n\t            Konva.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n\t        },\n\t        clearCache: function() {\n\t        }\n\t    });\n\t    Konva.Util.extend(Konva.Stage, Konva.Container);\n\t\n\t    // add getters and setters\n\t    Konva.Factory.addGetter(Konva.Stage, 'container');\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\t\n\t    /**\n\t     * get container DOM element\n\t     * @name container\n\t     * @method\n\t     * @memberof Konva.Stage.prototype\n\t     * @returns {DomElement} container\n\t     * @example\n\t     * // get container\n\t     * var container = stage.container();\n\t     * // set container\n\t     * var container = document.createElement('div');\n\t     * body.appendChild(container);\n\t     * stage.container(container);\n\t     */\n\t\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * BaseLayer constructor.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Container\n\t     * @param {Object} config\n\t     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n\t     * to clear the canvas before each layer draw.  The default value is true.\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var layer = new Konva.Layer();\n\t     */\n\t    Konva.BaseLayer = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.BaseLayer, {\n\t        ___init: function(config) {\n\t            this.nodeType = 'Layer';\n\t            Konva.Container.call(this, config);\n\t        },\n\t        createPNGStream: function() {\n\t            return this.canvas._canvas.createPNGStream();\n\t        },\n\t        /**\n\t         * get layer canvas\n\t         * @method\n\t         * @memberof Konva.BaseLayer.prototype\n\t         */\n\t        getCanvas: function() {\n\t            return this.canvas;\n\t        },\n\t        /**\n\t         * get layer hit canvas\n\t         * @method\n\t         * @memberof Konva.BaseLayer.prototype\n\t         */\n\t        getHitCanvas: function() {\n\t            return this.hitCanvas;\n\t        },\n\t        /**\n\t         * get layer canvas context\n\t         * @method\n\t         * @memberof Konva.BaseLayer.prototype\n\t         */\n\t        getContext: function() {\n\t            return this.getCanvas().getContext();\n\t        },\n\t        /**\n\t         * clear scene and hit canvas contexts tied to the layer\n\t         * @method\n\t         * @memberof Konva.BaseLayer.prototype\n\t         * @param {Object} [bounds]\n\t         * @param {Number} [bounds.x]\n\t         * @param {Number} [bounds.y]\n\t         * @param {Number} [bounds.width]\n\t         * @param {Number} [bounds.height]\n\t         * @example\n\t         * layer.clear();\n\t         * layer.clear({\n\t         *   x : 0,\n\t         *   y : 0,\n\t         *   width : 100,\n\t         *   height : 100\n\t         * });\n\t         */\n\t        clear: function(bounds) {\n\t            this.getContext().clear(bounds);\n\t            return this;\n\t        },\n\t        clearHitCache: function() {\n\t            this._hitImageData = undefined;\n\t        },\n\t        // extend Node.prototype.setZIndex\n\t        setZIndex: function(index) {\n\t            Konva.Node.prototype.setZIndex.call(this, index);\n\t            var stage = this.getStage();\n\t            if(stage) {\n\t                stage.content.removeChild(this.getCanvas()._canvas);\n\t\n\t                if(index < stage.getChildren().length - 1) {\n\t                    stage.content.insertBefore(this.getCanvas()._canvas, stage.getChildren()[index + 1].getCanvas()._canvas);\n\t                }\n\t                else {\n\t                    stage.content.appendChild(this.getCanvas()._canvas);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        // extend Node.prototype.moveToTop\n\t        moveToTop: function() {\n\t            Konva.Node.prototype.moveToTop.call(this);\n\t            var stage = this.getStage();\n\t            if(stage) {\n\t                stage.content.removeChild(this.getCanvas()._canvas);\n\t                stage.content.appendChild(this.getCanvas()._canvas);\n\t            }\n\t            return this;\n\t        },\n\t        // extend Node.prototype.moveUp\n\t        moveUp: function() {\n\t            var moved = Konva.Node.prototype.moveUp.call(this);\n\t            if (!moved){\n\t                return this;\n\t            }\n\t            var stage = this.getStage();\n\t            if(!stage) {\n\t                return this;\n\t            }\n\t            stage.content.removeChild(this.getCanvas()._canvas);\n\t\n\t            if(this.index < stage.getChildren().length - 1) {\n\t                stage.content.insertBefore(this.getCanvas()._canvas, stage.getChildren()[this.index + 1].getCanvas()._canvas);\n\t            } else {\n\t                stage.content.appendChild(this.getCanvas()._canvas);\n\t            }\n\t            return this;\n\t        },\n\t        // extend Node.prototype.moveDown\n\t        moveDown: function() {\n\t            if(Konva.Node.prototype.moveDown.call(this)) {\n\t                var stage = this.getStage();\n\t                if(stage) {\n\t                    var children = stage.getChildren();\n\t                    stage.content.removeChild(this.getCanvas()._canvas);\n\t                    stage.content.insertBefore(this.getCanvas()._canvas, children[this.index + 1].getCanvas()._canvas);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        // extend Node.prototype.moveToBottom\n\t        moveToBottom: function() {\n\t            if(Konva.Node.prototype.moveToBottom.call(this)) {\n\t                var stage = this.getStage();\n\t                if(stage) {\n\t                    var children = stage.getChildren();\n\t                    stage.content.removeChild(this.getCanvas()._canvas);\n\t                    stage.content.insertBefore(this.getCanvas()._canvas, children[1].getCanvas()._canvas);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t        getLayer: function() {\n\t            return this;\n\t        },\n\t        remove: function() {\n\t            var _canvas = this.getCanvas()._canvas;\n\t\n\t            Konva.Node.prototype.remove.call(this);\n\t\n\t            if(_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n\t                _canvas.parentNode.removeChild(_canvas);\n\t            }\n\t            return this;\n\t        },\n\t        getStage: function() {\n\t            return this.parent;\n\t        },\n\t        setSize: function(width, height) {\n\t            this.canvas.setSize(width, height);\n\t            return this;\n\t        },\n\t        /**\n\t         * get/set width of layer.getter return width of stage. setter doing nothing.\n\t         * if you want change width use `stage.width(value);`\n\t         * @name width\n\t         * @method\n\t         * @memberof Konva.BaseLayer.prototype\n\t         * @returns {Number}\n\t         * @example\n\t         * var width = layer.width();\n\t         */\n\t        getWidth: function() {\n\t            if (this.parent) {\n\t                return this.parent.getWidth();\n\t            }\n\t        },\n\t        setWidth: function() {\n\t            Konva.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n\t        },\n\t        /**\n\t         * get/set height of layer.getter return height of stage. setter doing nothing.\n\t         * if you want change height use `stage.height(value);`\n\t         * @name height\n\t         * @method\n\t         * @memberof Konva.BaseLayer.prototype\n\t         * @returns {Number}\n\t         * @example\n\t         * var height = layer.height();\n\t         */\n\t        getHeight: function() {\n\t            if (this.parent) {\n\t                return this.parent.getHeight();\n\t            }\n\t        },\n\t        setHeight: function() {\n\t            Konva.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n\t        },\n\t        // the apply transform method is handled by the Layer and FastLayer class\n\t        // because it is up to the layer to decide if an absolute or relative transform\n\t        // should be used\n\t        _applyTransform: function(shape, context, top) {\n\t            var m = shape.getAbsoluteTransform(top).getMatrix();\n\t            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t        }\n\t    });\n\t    Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\t\n\t    // add getters and setters\n\t    Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n\t    /**\n\t     * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n\t     *  before drawing\n\t     * @name clearBeforeDraw\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     * @param {Boolean} clearBeforeDraw\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get clearBeforeDraw flag\n\t     * var clearBeforeDraw = layer.clearBeforeDraw();\n\t     *\n\t     * // disable clear before draw\n\t     * layer.clearBeforeDraw(false);\n\t     *\n\t     * // enable clear before draw\n\t     * layer.clearBeforeDraw(true);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.BaseLayer);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // constants\n\t    var HASH = '#',\n\t        BEFORE_DRAW = 'beforeDraw',\n\t        DRAW = 'draw',\n\t\n\t        /*\n\t         * 2 - 3 - 4\n\t         * |       |\n\t         * 1 - 0   5\n\t         *         |\n\t         * 8 - 7 - 6\n\t         */\n\t        INTERSECTION_OFFSETS = [\n\t            {x: 0, y: 0},  // 0\n\t            {x: -1, y: 0}, // 1\n\t            {x: -1, y: -1}, // 2\n\t            {x: 0, y: -1}, // 3\n\t            {x: 1, y: -1}, // 4\n\t            {x: 1, y: 0}, // 5\n\t            {x: 1, y: 1}, // 6\n\t            {x: 0, y: 1}, // 7\n\t            {x: -1, y: 1}  // 8\n\t        ],\n\t        INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\t\n\t    /**\n\t     * Layer constructor.  Layers are tied to their own canvas element and are used\n\t     * to contain groups or shapes.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.BaseLayer\n\t     * @param {Object} config\n\t     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n\t     * to clear the canvas before each layer draw.  The default value is true.\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var layer = new Konva.Layer();\n\t     */\n\t    Konva.Layer = function(config) {\n\t        this.____init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.Layer, {\n\t        ____init: function(config) {\n\t            this.nodeType = 'Layer';\n\t            this.canvas = new Konva.SceneCanvas();\n\t            this.hitCanvas = new Konva.HitCanvas({\n\t                pixelRatio: 1\n\t            });\n\t            // call super constructor\n\t            Konva.BaseLayer.call(this, config);\n\t        },\n\t        _setCanvasSize: function(width, height) {\n\t            this.canvas.setSize(width, height);\n\t            this.hitCanvas.setSize(width, height);\n\t        },\n\t        _validateAdd: function(child) {\n\t            var type = child.getType();\n\t            if (type !== 'Group' && type !== 'Shape') {\n\t                Konva.Util.throw('You may only add groups and shapes to a layer.');\n\t            }\n\t        },\n\t        /**\n\t         * get visible intersection shape. This is the preferred\n\t         * method for determining if a point intersects a shape or not\n\t         * also you may pass optional selector parametr to return ancestor of intersected shape\n\t         * @method\n\t         * @memberof Konva.Layer.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @param {String} [selector]\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * var shape = layer.getIntersection({x: 50, y: 50});\n\t         * // or if you interested in shape parent:\n\t         * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n\t         */\n\t        getIntersection: function(pos, selector) {\n\t            var obj, i, intersectionOffset, shape;\n\t\n\t            if(!this.hitGraphEnabled() || !this.isVisible()) {\n\t                return null;\n\t            }\n\t            // in some cases antialiased area may be bigger than 1px\n\t            // it is possible if we will cache node, then scale it a lot\n\t            // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n\t            var spiralSearchDistance = 1;\n\t            var continueSearch = false;\n\t            while (true) {\n\t                for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n\t                    intersectionOffset = INTERSECTION_OFFSETS[i];\n\t                    obj = this._getIntersection({\n\t                        x: pos.x + intersectionOffset.x * spiralSearchDistance,\n\t                        y: pos.y + intersectionOffset.y * spiralSearchDistance\n\t                    });\n\t                    shape = obj.shape;\n\t                    if (shape && selector) {\n\t                        return shape.findAncestor(selector, true);\n\t                    } else if (shape) {\n\t                        return shape;\n\t                    }\n\t                    // we should continue search if we found antialiased pixel\n\t                    // that means our node somewhere very close\n\t                    continueSearch = !!obj.antialiased;\n\t                    // stop search if found empty pixel\n\t                    if (!obj.antialiased) {\n\t                        break;\n\t                    }\n\t                }\n\t                // if no shape, and no antialiased pixel, we should end searching\n\t                if (continueSearch) {\n\t                    spiralSearchDistance += 1;\n\t                } else {\n\t                    return null;\n\t                }\n\t            }\n\t        },\n\t        _getImageData: function(x, y) {\n\t            var width = this.hitCanvas.width || 1,\n\t                height = this.hitCanvas.height || 1,\n\t                index = (Math.round(y) * width ) + Math.round(x);\n\t\n\t            if (!this._hitImageData) {\n\t                this._hitImageData = this.hitCanvas.context.getImageData(0, 0, width, height);\n\t            }\n\t\n\t            return [\n\t                this._hitImageData.data[4 * index + 0], // Red\n\t                this._hitImageData.data[4 * index + 1], // Green\n\t                this._hitImageData.data[4 * index + 2], // Blue\n\t                this._hitImageData.data[4 * index + 3] // Alpha\n\t            ];\n\t        },\n\t        _getIntersection: function(pos) {\n\t            var ratio = this.hitCanvas.pixelRatio;\n\t            var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data,\n\t                p3 = p[3],\n\t                colorKey, shape;\n\t            // fully opaque pixel\n\t            if(p3 === 255) {\n\t                colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n\t                shape = Konva.shapes[HASH + colorKey];\n\t                if (shape) {\n\t                    return {\n\t                        shape: shape\n\t                    };\n\t                }\n\t                return {\n\t                    antialiased: true\n\t                };\n\t            }\n\t            // antialiased pixel\n\t            else if(p3 > 0) {\n\t                return {\n\t                    antialiased: true\n\t                };\n\t            }\n\t            // empty pixel\n\t            return {};\n\t        },\n\t        drawScene: function(can, top) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || (layer && layer.getCanvas());\n\t\n\t            this._fire(BEFORE_DRAW, {\n\t                node: this\n\t            });\n\t\n\t            if(this.getClearBeforeDraw()) {\n\t                canvas.getContext().clear();\n\t            }\n\t\n\t            Konva.Container.prototype.drawScene.call(this, canvas, top);\n\t\n\t            this._fire(DRAW, {\n\t                node: this\n\t            });\n\t\n\t            return this;\n\t        },\n\t        drawHit: function(can, top) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || (layer && layer.hitCanvas);\n\t\n\t            if(layer && layer.getClearBeforeDraw()) {\n\t                layer.getHitCanvas().getContext().clear();\n\t            }\n\t\n\t            Konva.Container.prototype.drawHit.call(this, canvas, top);\n\t            this.imageData = null; // Clear imageData cache\n\t            return this;\n\t        },\n\t        clear: function(bounds) {\n\t            Konva.BaseLayer.prototype.clear.call(this, bounds);\n\t            this.getHitCanvas().getContext().clear(bounds);\n\t            this.imageData = null; // Clear getImageData cache\n\t            return this;\n\t        },\n\t        // extend Node.prototype.setVisible\n\t        setVisible: function(visible) {\n\t            Konva.Node.prototype.setVisible.call(this, visible);\n\t            if(visible) {\n\t                this.getCanvas()._canvas.style.display = 'block';\n\t                this.hitCanvas._canvas.style.display = 'block';\n\t            }\n\t            else {\n\t                this.getCanvas()._canvas.style.display = 'none';\n\t                this.hitCanvas._canvas.style.display = 'none';\n\t            }\n\t            return this;\n\t        },\n\t        /**\n\t         * enable hit graph\n\t         * @name enableHitGraph\n\t         * @method\n\t         * @memberof Konva.Layer.prototype\n\t         * @returns {Layer}\n\t         */\n\t        enableHitGraph: function() {\n\t            this.setHitGraphEnabled(true);\n\t            return this;\n\t        },\n\t        /**\n\t         * disable hit graph\n\t         * @name disableHitGraph\n\t         * @method\n\t         * @memberof Konva.Layer.prototype\n\t         * @returns {Layer}\n\t         */\n\t        disableHitGraph: function() {\n\t            this.setHitGraphEnabled(false);\n\t            return this;\n\t        },\n\t        setSize: function(width, height) {\n\t            Konva.BaseLayer.prototype.setSize.call(this, width, height);\n\t            this.hitCanvas.setSize(width, height);\n\t            return this;\n\t        }\n\t    });\n\t    Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n\t    /**\n\t     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n\t     *  draw performance because the hit graph will not be redrawn each time the layer is\n\t     *  drawn.  This, however, also disables mouse/touch event detection\n\t     * @name hitGraphEnabled\n\t     * @method\n\t     * @memberof Konva.Layer.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get hitGraphEnabled flag\n\t     * var hitGraphEnabled = layer.hitGraphEnabled();\n\t     *\n\t     * // disable hit graph\n\t     * layer.hitGraphEnabled(false);\n\t     *\n\t     * // enable hit graph\n\t     * layer.hitGraphEnabled(true);\n\t     */\n\t    Konva.Collection.mapMethods(Konva.Layer);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * FastLayer constructor. Layers are tied to their own canvas element and are used\n\t     * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n\t     * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n\t     * It renders about 2x faster than normal layers.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.BaseLayer\n\t     * @param {Object} config\n\t     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n\t     * to clear the canvas before each layer draw.  The default value is true.\n\t     * @param {Boolean} [config.visible]\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var layer = new Konva.FastLayer();\n\t     */\n\t    Konva.FastLayer = function(config) {\n\t        this.____init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.FastLayer, {\n\t        ____init: function(config) {\n\t            this.nodeType = 'Layer';\n\t            this.canvas = new Konva.SceneCanvas();\n\t            // call super constructor\n\t            Konva.BaseLayer.call(this, config);\n\t        },\n\t        _validateAdd: function(child) {\n\t            var type = child.getType();\n\t            if (type !== 'Shape') {\n\t                Konva.Util.throw('You may only add shapes to a fast layer.');\n\t            }\n\t        },\n\t        _setCanvasSize: function(width, height) {\n\t            this.canvas.setSize(width, height);\n\t        },\n\t        hitGraphEnabled: function() {\n\t            return false;\n\t        },\n\t        getIntersection: function() {\n\t            return null;\n\t        },\n\t        drawScene: function(can) {\n\t            var layer = this.getLayer(),\n\t                canvas = can || (layer && layer.getCanvas());\n\t\n\t            if(this.getClearBeforeDraw()) {\n\t                canvas.getContext().clear();\n\t            }\n\t\n\t            Konva.Container.prototype.drawScene.call(this, canvas);\n\t\n\t            return this;\n\t        },\n\t        draw: function() {\n\t            this.drawScene();\n\t            return this;\n\t        },\n\t        // extend Node.prototype.setVisible\n\t        setVisible: function(visible) {\n\t            Konva.Node.prototype.setVisible.call(this, visible);\n\t            if(visible) {\n\t                this.getCanvas()._canvas.style.display = 'block';\n\t            }\n\t            else {\n\t                this.getCanvas()._canvas.style.display = 'none';\n\t            }\n\t            return this;\n\t        }\n\t    });\n\t    Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\t\n\t    Konva.Collection.mapMethods(Konva.FastLayer);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Group constructor.  Groups are used to contain shapes or other groups.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Container\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var group = new Konva.Group();\n\t     */\n\t    Konva.Group = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Util.addMethods(Konva.Group, {\n\t        ___init: function(config) {\n\t            this.nodeType = 'Group';\n\t            // call super constructor\n\t            Konva.Container.call(this, config);\n\t        },\n\t        _validateAdd: function(child) {\n\t            var type = child.getType();\n\t            if (type !== 'Group' && type !== 'Shape') {\n\t                Konva.Util.throw('You may only add groups and shapes to groups.');\n\t            }\n\t        }\n\t    });\n\t    Konva.Util.extend(Konva.Group, Konva.Container);\n\t\n\t    Konva.Collection.mapMethods(Konva.Group);\n\t})();\n\t\n\t(function(Konva) {\n\t    'use strict';\n\t\n\t    var now = (function() {\n\t        if (Konva.global.performance && Konva.global.performance.now) {\n\t            return function() {\n\t                return Konva.global.performance.now();\n\t            };\n\t        }\n\t\n\t        return function() {\n\t            return new Date().getTime();\n\t        };\n\t    })();\n\t\n\t    function FRAF(callback) {\n\t        setTimeout(callback, 1000 / 60);\n\t    }\n\t\n\t    var RAF = (function(){\n\t        return Konva.global.requestAnimationFrame\n\t            || Konva.global.webkitRequestAnimationFrame\n\t            || Konva.global.mozRequestAnimationFrame\n\t            || Konva.global.oRequestAnimationFrame\n\t            || Konva.global.msRequestAnimationFrame\n\t            || FRAF;\n\t    })();\n\t\n\t\n\t\n\t    function requestAnimFrame() {\n\t        return RAF.apply(Konva.global, arguments);\n\t    }\n\t\n\t    /**\n\t     * Animation constructor.  A stage is used to contain multiple layers and handle\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n\t     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n\t     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n\t     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n\t     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n\t     *  if you don't need to redraw layer/layers on some frames.\n\t     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n\t     *  Not specifying a node will result in no redraw.\n\t     * @example\n\t     * // move a node to the right at 50 pixels / second\n\t     * var velocity = 50;\n\t     *\n\t     * var anim = new Konva.Animation(function(frame) {\n\t     *   var dist = velocity * (frame.timeDiff / 1000);\n\t     *   node.move(dist, 0);\n\t     * }, layer);\n\t     *\n\t     * anim.start();\n\t     */\n\t    Konva.Animation = function(func, layers) {\n\t        var Anim = Konva.Animation;\n\t        this.func = func;\n\t        this.setLayers(layers);\n\t        this.id = Anim.animIdCounter++;\n\t        this.frame = {\n\t            time: 0,\n\t            timeDiff: 0,\n\t            lastTime: now()\n\t        };\n\t    };\n\t    /*\n\t     * Animation methods\n\t     */\n\t    Konva.Animation.prototype = {\n\t        /**\n\t         * set layers to be redrawn on each animation frame\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n\t         * @return {Konva.Animation} this\n\t         */\n\t        setLayers: function(layers) {\n\t            var lays = [];\n\t            // if passing in no layers\n\t            if (!layers) {\n\t                lays = [];\n\t            }\n\t            // if passing in an array of Layers\n\t            // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n\t            // the length property to check for both cases\n\t            else if (layers.length > 0) {\n\t                lays = layers;\n\t            }\n\t            // if passing in a Layer\n\t            else {\n\t                lays = [layers];\n\t            }\n\t\n\t            this.layers = lays;\n\t            return this;\n\t        },\n\t        /**\n\t         * get layers\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Array} Array of Konva.Layer\n\t         */\n\t        getLayers: function() {\n\t            return this.layers;\n\t        },\n\t        /**\n\t         * add layer.  Returns true if the layer was added, and false if it was not\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @param {Konva.Layer} layer to add\n\t         * @return {Bool} true if layer is added to animation, otherwise false\n\t         */\n\t        addLayer: function(layer) {\n\t            var layers = this.layers,\n\t                len = layers.length, n;\n\t\n\t            // don't add the layer if it already exists\n\t            for (n = 0; n < len; n++) {\n\t                if (layers[n]._id === layer._id){\n\t                    return false;\n\t                }\n\t            }\n\t\n\t            this.layers.push(layer);\n\t            return true;\n\t        },\n\t        /**\n\t         * determine if animation is running or not.  returns true or false\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Bool} is animation running?\n\t         */\n\t        isRunning: function() {\n\t            var a = Konva.Animation,\n\t                animations = a.animations,\n\t                len = animations.length,\n\t                n;\n\t\n\t            for (n = 0; n < len; n++) {\n\t                if (animations[n].id === this.id) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t        /**\n\t         * start animation\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Konva.Animation} this\n\t         */\n\t        start: function() {\n\t            var Anim = Konva.Animation;\n\t            this.stop();\n\t            this.frame.timeDiff = 0;\n\t            this.frame.lastTime = now();\n\t            Anim._addAnimation(this);\n\t            return this;\n\t        },\n\t        /**\n\t         * stop animation\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Konva.Animation} this\n\t         */\n\t        stop: function() {\n\t            Konva.Animation._removeAnimation(this);\n\t            return this;\n\t        },\n\t        _updateFrameObject: function(time) {\n\t            this.frame.timeDiff = time - this.frame.lastTime;\n\t            this.frame.lastTime = time;\n\t            this.frame.time += this.frame.timeDiff;\n\t            this.frame.frameRate = 1000 / this.frame.timeDiff;\n\t        }\n\t    };\n\t    Konva.Animation.animations = [];\n\t    Konva.Animation.animIdCounter = 0;\n\t    Konva.Animation.animRunning = false;\n\t\n\t    Konva.Animation._addAnimation = function(anim) {\n\t        this.animations.push(anim);\n\t        this._handleAnimation();\n\t    };\n\t    Konva.Animation._removeAnimation = function(anim) {\n\t        var id = anim.id,\n\t            animations = this.animations,\n\t            len = animations.length,\n\t            n;\n\t\n\t        for(n = 0; n < len; n++) {\n\t            if(animations[n].id === id) {\n\t                this.animations.splice(n, 1);\n\t                break;\n\t            }\n\t        }\n\t    };\n\t\n\t    Konva.Animation._runFrames = function() {\n\t        var layerHash = {},\n\t            animations = this.animations,\n\t            anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n\t        /*\n\t         * loop through all animations and execute animation\n\t         *  function.  if the animation object has specified node,\n\t         *  we can add the node to the nodes hash to eliminate\n\t         *  drawing the same node multiple times.  The node property\n\t         *  can be the stage itself or a layer\n\t         */\n\t        /*\n\t         * WARNING: don't cache animations.length because it could change while\n\t         * the for loop is running, causing a JS error\n\t         */\n\t\n\t        for(n = 0; n < animations.length; n++) {\n\t            anim = animations[n];\n\t            layers = anim.layers;\n\t            func = anim.func;\n\t\n\t\n\t            anim._updateFrameObject(now());\n\t            layersLen = layers.length;\n\t\n\t            // if animation object has a function, execute it\n\t            if (func) {\n\t                // allow anim bypassing drawing\n\t                needRedraw = (func.call(anim, anim.frame) !== false);\n\t            } else {\n\t                needRedraw = true;\n\t            }\n\t            if (!needRedraw) {\n\t                continue;\n\t            }\n\t            for (i = 0; i < layersLen; i++) {\n\t                layer = layers[i];\n\t\n\t                if (layer._id !== undefined) {\n\t                    layerHash[layer._id] = layer;\n\t                }\n\t            }\n\t        }\n\t\n\t        for (key in layerHash) {\n\t            if (!layerHash.hasOwnProperty(key)) {\n\t                continue;\n\t            }\n\t            layerHash[key].draw();\n\t        }\n\t    };\n\t    Konva.Animation._animationLoop = function() {\n\t        var Anim = Konva.Animation;\n\t        if(Anim.animations.length) {\n\t            Anim._runFrames();\n\t            requestAnimFrame(Anim._animationLoop);\n\t        }\n\t        else {\n\t            Anim.animRunning = false;\n\t        }\n\t    };\n\t    Konva.Animation._handleAnimation = function() {\n\t        if(!this.animRunning) {\n\t            this.animRunning = true;\n\t            requestAnimFrame(this._animationLoop);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * batch draw. this function will not do immediate draw\n\t     * but it will schedule drawing to next tick (requestAnimFrame)\n\t     * @method\n\t     * @return {Konva.Layer} this\n\t     * @memberof Konva.Base.prototype\n\t     */\n\t    Konva.BaseLayer.prototype.batchDraw = function() {\n\t        var that = this,\n\t            Anim = Konva.Animation;\n\t\n\t        if (!this.batchAnim) {\n\t            this.batchAnim = new Anim(function() {\n\t                // stop animation after first tick\n\t                that.batchAnim.stop();\n\t            }, this);\n\t        }\n\t\n\t        this.lastBatchDrawTime = now();\n\t\n\t        if (!this.batchAnim.isRunning()) {\n\t            this.batchAnim.start();\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * batch draw\n\t     * @method\n\t     * @return {Konva.Stage} this\n\t     * @memberof Konva.Stage.prototype\n\t     */\n\t    Konva.Stage.prototype.batchDraw = function() {\n\t        this.getChildren().each(function(layer) {\n\t            layer.batchDraw();\n\t        });\n\t        return this;\n\t    };\n\t})(Konva);\n\t\n\t(function() {\n\t    'use strict';\n\t    var blacklist = {\n\t        node: 1,\n\t        duration: 1,\n\t        easing: 1,\n\t        onFinish: 1,\n\t        yoyo: 1\n\t    },\n\t\n\t    PAUSED = 1,\n\t    PLAYING = 2,\n\t    REVERSING = 3,\n\t\n\t    idCounter = 0,\n\t    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\t\n\t    var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n\t        this.prop = prop;\n\t        this.propFunc = propFunc;\n\t        this.begin = begin;\n\t        this._pos = begin;\n\t        this.duration = duration;\n\t        this._change = 0;\n\t        this.prevPos = 0;\n\t        this.yoyo = yoyo;\n\t        this._time = 0;\n\t        this._position = 0;\n\t        this._startTime = 0;\n\t        this._finish = 0;\n\t        this.func = func;\n\t        this._change = finish - this.begin;\n\t        this.pause();\n\t    };\n\t    /*\n\t     * Tween methods\n\t     */\n\t    Tween.prototype = {\n\t        fire: function(str) {\n\t            var handler = this[str];\n\t            if (handler) {\n\t                handler();\n\t            }\n\t        },\n\t        setTime: function(t) {\n\t            if(t > this.duration) {\n\t                if(this.yoyo) {\n\t                    this._time = this.duration;\n\t                    this.reverse();\n\t                }\n\t                else {\n\t                    this.finish();\n\t                }\n\t            }\n\t            else if(t < 0) {\n\t                if(this.yoyo) {\n\t                    this._time = 0;\n\t                    this.play();\n\t                }\n\t                else {\n\t                    this.reset();\n\t                }\n\t            }\n\t            else {\n\t                this._time = t;\n\t                this.update();\n\t            }\n\t        },\n\t        getTime: function() {\n\t            return this._time;\n\t        },\n\t        setPosition: function(p) {\n\t            this.prevPos = this._pos;\n\t            this.propFunc(p);\n\t            this._pos = p;\n\t        },\n\t        getPosition: function(t) {\n\t            if(t === undefined) {\n\t                t = this._time;\n\t            }\n\t            return this.func(t, this.begin, this._change, this.duration);\n\t        },\n\t        play: function() {\n\t            this.state = PLAYING;\n\t            this._startTime = this.getTimer() - this._time;\n\t            this.onEnterFrame();\n\t            this.fire('onPlay');\n\t        },\n\t        reverse: function() {\n\t            this.state = REVERSING;\n\t            this._time = this.duration - this._time;\n\t            this._startTime = this.getTimer() - this._time;\n\t            this.onEnterFrame();\n\t            this.fire('onReverse');\n\t        },\n\t        seek: function(t) {\n\t            this.pause();\n\t            this._time = t;\n\t            this.update();\n\t            this.fire('onSeek');\n\t        },\n\t        reset: function() {\n\t            this.pause();\n\t            this._time = 0;\n\t            this.update();\n\t            this.fire('onReset');\n\t        },\n\t        finish: function() {\n\t            this.pause();\n\t            this._time = this.duration;\n\t            this.update();\n\t            this.fire('onFinish');\n\t        },\n\t        update: function() {\n\t            this.setPosition(this.getPosition(this._time));\n\t        },\n\t        onEnterFrame: function() {\n\t            var t = this.getTimer() - this._startTime;\n\t            if(this.state === PLAYING) {\n\t                this.setTime(t);\n\t            }\n\t            else if (this.state === REVERSING) {\n\t                this.setTime(this.duration - t);\n\t            }\n\t        },\n\t        pause: function() {\n\t            this.state = PAUSED;\n\t            this.fire('onPause');\n\t        },\n\t        getTimer: function() {\n\t            return new Date().getTime();\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n\t     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n\t     *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @example\n\t     * // instantiate new tween which fully rotates a node in 1 second\n\t     * var tween = new Konva.Tween({\n\t     *   node: node,\n\t     *   rotationDeg: 360,\n\t     *   duration: 1,\n\t     *   easing: Konva.Easings.EaseInOut\n\t     * });\n\t     *\n\t     * // play tween\n\t     * tween.play();\n\t     *\n\t     * // pause tween\n\t     * tween.pause();\n\t     */\n\t    Konva.Tween = function(config) {\n\t        var that = this,\n\t            node = config.node,\n\t            nodeId = node._id,\n\t            duration,\n\t            easing = config.easing || Konva.Easings.Linear,\n\t            yoyo = !!config.yoyo,\n\t            key;\n\t\n\t        if (typeof config.duration === 'undefined') {\n\t            duration = 1;\n\t        } else if (config.duration === 0) {  // zero is bad value for duration\n\t            duration = 0.001;\n\t        } else {\n\t            duration = config.duration;\n\t        }\n\t        this.node = node;\n\t        this._id = idCounter++;\n\t\n\t        var layers = node.getLayer() || ((node instanceof Konva.Stage) ? node.getLayers() : null);\n\t        if (!layers) {\n\t            Konva.Util.error(\n\t                'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n\t            );\n\t        }\n\t        this.anim = new Konva.Animation(function() {\n\t            that.tween.onEnterFrame();\n\t        }, layers);\n\t\n\t        this.tween = new Tween(key, function(i) {\n\t            that._tweenFunc(i);\n\t        }, easing, 0, 1, duration * 1000, yoyo);\n\t\n\t        this._addListeners();\n\t\n\t        // init attrs map\n\t        if (!Konva.Tween.attrs[nodeId]) {\n\t            Konva.Tween.attrs[nodeId] = {};\n\t        }\n\t        if (!Konva.Tween.attrs[nodeId][this._id]) {\n\t            Konva.Tween.attrs[nodeId][this._id] = {};\n\t        }\n\t        // init tweens map\n\t        if (!Konva.Tween.tweens[nodeId]) {\n\t            Konva.Tween.tweens[nodeId] = {};\n\t        }\n\t\n\t        for (key in config) {\n\t            if (blacklist[key] === undefined) {\n\t                this._addAttr(key, config[key]);\n\t            }\n\t        }\n\t\n\t        this.reset();\n\t\n\t        // callbacks\n\t        this.onFinish = config.onFinish;\n\t        this.onReset = config.onReset;\n\t    };\n\t\n\t    // start/diff object = attrs.nodeId.tweenId.attr\n\t    Konva.Tween.attrs = {};\n\t    // tweenId = tweens.nodeId.attr\n\t    Konva.Tween.tweens = {};\n\t\n\t    Konva.Tween.prototype = {\n\t        _addAttr: function(key, end) {\n\t            var node = this.node,\n\t                nodeId = node._id,\n\t                start, diff, tweenId, n, len, trueEnd, trueStart;\n\t\n\t            // remove conflict from tween map if it exists\n\t            tweenId = Konva.Tween.tweens[nodeId][key];\n\t\n\t            if (tweenId) {\n\t                delete Konva.Tween.attrs[nodeId][tweenId][key];\n\t            }\n\t\n\t            // add to tween map\n\t            start = node.getAttr(key);\n\t\n\t            if (Konva.Util._isArray(end)) {\n\t                diff = [];\n\t                len = Math.max(end.length, start.length);\n\t\n\t                if (key === 'points' && end.length !== start.length) {\n\t                    // before tweening points we need to make sure that start.length === end.length\n\t                    // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\t\n\t                    if (end.length > start.length) {\n\t                        // so in this case we will increase number of starting points\n\t                        trueStart = start;\n\t                        start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n\t                    } else {\n\t                        // in this case we will increase number of eding points\n\t                        trueEnd = end;\n\t                        end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n\t                    }\n\t                }\n\t\n\t                for (n = 0; n < len; n++) {\n\t                    diff.push((end[n]) - (start[n]));\n\t                }\n\t\n\t            } else if (colorAttrs.indexOf(key) !== -1) {\n\t                start = Konva.Util.colorToRGBA(start);\n\t                var endRGBA = Konva.Util.colorToRGBA(end);\n\t                diff = {\n\t                    r: endRGBA.r - start.r,\n\t                    g: endRGBA.g - start.g,\n\t                    b: endRGBA.b - start.b,\n\t                    a: endRGBA.a - start.a\n\t                };\n\t            } else {\n\t                diff = end - start;\n\t            }\n\t\n\t            Konva.Tween.attrs[nodeId][this._id][key] = {\n\t                start: start,\n\t                diff: diff,\n\t                end: end,\n\t                trueEnd: trueEnd,\n\t                trueStart: trueStart\n\t            };\n\t            Konva.Tween.tweens[nodeId][key] = this._id;\n\t        },\n\t        _tweenFunc: function(i) {\n\t            var node = this.node,\n\t                attrs = Konva.Tween.attrs[node._id][this._id],\n\t                key, attr, start, diff, newVal, n, len, end;\n\t\n\t            for (key in attrs) {\n\t                attr = attrs[key];\n\t                start = attr.start;\n\t                diff = attr.diff;\n\t                end = attr.end;\n\t\n\t                if (Konva.Util._isArray(start)) {\n\t                    newVal = [];\n\t                    len = Math.max(start.length, end.length);\n\t                    for (n = 0; n < len; n++) {\n\t                        newVal.push((start[n] || 0) + (diff[n] * i));\n\t                    }\n\t                } else if (colorAttrs.indexOf(key) !== -1) {\n\t                    newVal = 'rgba(' +\n\t                            Math.round(start.r + diff.r * i) + ',' +\n\t                            Math.round(start.g + diff.g * i) + ',' +\n\t                            Math.round(start.b + diff.b * i) + ',' +\n\t                            (start.a + diff.a * i) + ')';\n\t                } else {\n\t                    newVal = start + (diff * i);\n\t                }\n\t\n\t                node.setAttr(key, newVal);\n\t            }\n\t        },\n\t        _addListeners: function() {\n\t            var that = this;\n\t\n\t            // start listeners\n\t            this.tween.onPlay = function() {\n\t                that.anim.start();\n\t            };\n\t            this.tween.onReverse = function() {\n\t                that.anim.start();\n\t            };\n\t\n\t            // stop listeners\n\t            this.tween.onPause = function() {\n\t                that.anim.stop();\n\t            };\n\t            this.tween.onFinish = function() {\n\t                var node = that.node;\n\t\n\t                // after tweening  points of line we need to set original end\n\t                var attrs = Konva.Tween.attrs[node._id][that._id];\n\t                if (attrs.points && attrs.points.trueEnd) {\n\t                    node.points(attrs.points.trueEnd);\n\t                }\n\t\n\t                if (that.onFinish) {\n\t                    that.onFinish.call(that);\n\t                }\n\t            };\n\t            this.tween.onReset = function() {\n\t                var node = that.node;\n\t                // after tweening  points of line we need to set original start\n\t                var attrs = Konva.Tween.attrs[node._id][that._id];\n\t                if (attrs.points && attrs.points.trueStart) {\n\t                    node.points(attrs.points.trueStart);\n\t                }\n\t\n\t                if (that.onReset) {\n\t                    that.onReset();\n\t                }\n\t            };\n\t        },\n\t        /**\n\t         * play\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t        play: function() {\n\t            this.tween.play();\n\t            return this;\n\t        },\n\t        /**\n\t         * reverse\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t        reverse: function() {\n\t            this.tween.reverse();\n\t            return this;\n\t        },\n\t        /**\n\t         * reset\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t        reset: function() {\n\t            this.tween.reset();\n\t            return this;\n\t        },\n\t        /**\n\t         * seek\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @param {Integer} t time in seconds between 0 and the duration\n\t         * @returns {Tween}\n\t         */\n\t        seek: function(t) {\n\t            this.tween.seek(t * 1000);\n\t            return this;\n\t        },\n\t        /**\n\t         * pause\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t        pause: function() {\n\t            this.tween.pause();\n\t            return this;\n\t        },\n\t        /**\n\t         * finish\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t        finish: function() {\n\t            this.tween.finish();\n\t            return this;\n\t        },\n\t        /**\n\t         * destroy\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         */\n\t        destroy: function() {\n\t            var nodeId = this.node._id,\n\t                thisId = this._id,\n\t                attrs = Konva.Tween.tweens[nodeId],\n\t                key;\n\t\n\t            this.pause();\n\t\n\t            for (key in attrs) {\n\t                delete Konva.Tween.tweens[nodeId][key];\n\t            }\n\t\n\t            delete Konva.Tween.attrs[nodeId][thisId];\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n\t     *\n\t     * @method Konva.Node#to\n\t     * @memberof Konva.Node\n\t     * @param {Object} [params] tween params\n\t     * @example\n\t     *\n\t     * circle.to({\n\t     *  x : 50,\n\t     *  duration : 0.5\n\t     * });\n\t     */\n\t    Konva.Node.prototype.to = function(params) {\n\t        var onFinish = params.onFinish;\n\t        params.node = this;\n\t        params.onFinish = function() {\n\t            this.destroy();\n\t            if (onFinish) {\n\t                onFinish();\n\t            }\n\t        };\n\t        var tween = new Konva.Tween(params);\n\t        tween.play();\n\t    };\n\t\n\t    /*\n\t    * These eases were ported from an Adobe Flash tweening library to JavaScript\n\t    * by Xaric\n\t    */\n\t\n\t    /**\n\t     * @namespace Easings\n\t     * @memberof Konva\n\t     */\n\t    Konva.Easings = {\n\t        /**\n\t        * back ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'BackEaseIn': function(t, b, c, d) {\n\t            var s = 1.70158;\n\t            return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t        },\n\t        /**\n\t        * back ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'BackEaseOut': function(t, b, c, d) {\n\t            var s = 1.70158;\n\t            return c * (( t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t        },\n\t        /**\n\t        * back ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'BackEaseInOut': function(t, b, c, d) {\n\t            var s = 1.70158;\n\t            if((t /= d / 2) < 1) {\n\t                return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t            }\n\t            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t        },\n\t        /**\n\t        * elastic ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'ElasticEaseIn': function(t, b, c, d, a, p) {\n\t            // added s = 0\n\t            var s = 0;\n\t            if(t === 0) {\n\t                return b;\n\t            }\n\t            if((t /= d) === 1) {\n\t                return b + c;\n\t            }\n\t            if(!p) {\n\t                p = d * 0.3;\n\t            }\n\t            if(!a || a < Math.abs(c)) {\n\t                a = c;\n\t                s = p / 4;\n\t            }\n\t            else {\n\t                s = p / (2 * Math.PI) * Math.asin(c / a);\n\t            }\n\t            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n\t        },\n\t        /**\n\t        * elastic ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'ElasticEaseOut': function(t, b, c, d, a, p) {\n\t            // added s = 0\n\t            var s = 0;\n\t            if(t === 0) {\n\t                return b;\n\t            }\n\t            if((t /= d) === 1) {\n\t                return b + c;\n\t            }\n\t            if(!p) {\n\t                p = d * 0.3;\n\t            }\n\t            if(!a || a < Math.abs(c)) {\n\t                a = c;\n\t                s = p / 4;\n\t            }\n\t            else {\n\t                s = p / (2 * Math.PI) * Math.asin(c / a);\n\t            }\n\t            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\n\t        },\n\t        /**\n\t        * elastic ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'ElasticEaseInOut': function(t, b, c, d, a, p) {\n\t            // added s = 0\n\t            var s = 0;\n\t            if(t === 0) {\n\t                return b;\n\t            }\n\t            if((t /= d / 2) === 2) {\n\t                return b + c;\n\t            }\n\t            if(!p) {\n\t                p = d * (0.3 * 1.5);\n\t            }\n\t            if(!a || a < Math.abs(c)) {\n\t                a = c;\n\t                s = p / 4;\n\t            }\n\t            else {\n\t                s = p / (2 * Math.PI) * Math.asin(c / a);\n\t            }\n\t            if(t < 1) {\n\t                return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n\t            }\n\t            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n\t        },\n\t        /**\n\t        * bounce ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'BounceEaseOut': function(t, b, c, d) {\n\t            if((t /= d) < (1 / 2.75)) {\n\t                return c * (7.5625 * t * t) + b;\n\t            }\n\t            else if(t < (2 / 2.75)) {\n\t                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t            }\n\t            else if(t < (2.5 / 2.75)) {\n\t                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t            }\n\t            else {\n\t                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t            }\n\t        },\n\t        /**\n\t        * bounce ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'BounceEaseIn': function(t, b, c, d) {\n\t            return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n\t        },\n\t        /**\n\t        * bounce ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'BounceEaseInOut': function(t, b, c, d) {\n\t            if(t < d / 2) {\n\t                return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n\t            }\n\t            else {\n\t                return Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t            }\n\t        },\n\t        /**\n\t        * ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'EaseIn': function(t, b, c, d) {\n\t            return c * (t /= d) * t + b;\n\t        },\n\t        /**\n\t        * ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'EaseOut': function(t, b, c, d) {\n\t            return -c * (t /= d) * (t - 2) + b;\n\t        },\n\t        /**\n\t        * ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'EaseInOut': function(t, b, c, d) {\n\t            if((t /= d / 2) < 1) {\n\t                return c / 2 * t * t + b;\n\t            }\n\t            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t        },\n\t        /**\n\t        * strong ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'StrongEaseIn': function(t, b, c, d) {\n\t            return c * (t /= d) * t * t * t * t + b;\n\t        },\n\t        /**\n\t        * strong ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'StrongEaseOut': function(t, b, c, d) {\n\t            return c * (( t = t / d - 1) * t * t * t * t + 1) + b;\n\t        },\n\t        /**\n\t        * strong ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'StrongEaseInOut': function(t, b, c, d) {\n\t            if((t /= d / 2) < 1) {\n\t                return c / 2 * t * t * t * t * t + b;\n\t            }\n\t            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t        },\n\t        /**\n\t        * linear\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t        'Linear': function(t, b, c, d) {\n\t            return c * t / d + b;\n\t        }\n\t    };\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    Konva.DD = {\n\t        // properties\n\t        anim: new Konva.Animation(function() {\n\t            var b = this.dirty;\n\t            this.dirty = false;\n\t            return b;\n\t        }),\n\t        isDragging: false,\n\t        justDragged: false,\n\t        offset: {\n\t            x: 0,\n\t            y: 0\n\t        },\n\t        node: null,\n\t\n\t        // methods\n\t        _drag: function(evt) {\n\t            var dd = Konva.DD,\n\t                node = dd.node;\n\t\n\t            if(node) {\n\t               if(!dd.isDragging) {\n\t                    var pos = node.getStage().getPointerPosition();\n\t                    var dragDistance = node.dragDistance();\n\t                    var distance = Math.max(\n\t                        Math.abs(pos.x - dd.startPointerPos.x),\n\t                        Math.abs(pos.y - dd.startPointerPos.y)\n\t                    );\n\t                    if (distance < dragDistance) {\n\t                        return;\n\t                    }\n\t                }\n\t\n\t\n\t                node.getStage()._setPointerPosition(evt);\n\t                node._setDragPosition(evt);\n\t                if(!dd.isDragging) {\n\t                    dd.isDragging = true;\n\t                    node.fire('dragstart', {\n\t                        type: 'dragstart',\n\t                        target: node,\n\t                        evt: evt\n\t                    }, true);\n\t                }\n\t\n\t                // execute ondragmove if defined\n\t                node.fire('dragmove', {\n\t                    type: 'dragmove',\n\t                    target: node,\n\t                    evt: evt\n\t                }, true);\n\t            }\n\t        },\n\t        _endDragBefore: function(evt) {\n\t            var dd = Konva.DD,\n\t                node = dd.node,\n\t                layer;\n\t\n\t            if(node) {\n\t                layer = node.getLayer();\n\t                dd.anim.stop();\n\t\n\t                // only fire dragend event if the drag and drop\n\t                // operation actually started.\n\t                if(dd.isDragging) {\n\t                    dd.isDragging = false;\n\t                    dd.justDragged = true;\n\t                    Konva.listenClickTap = false;\n\t\n\t                    if (evt) {\n\t                        evt.dragEndNode = node;\n\t                    }\n\t                }\n\t\n\t                delete dd.node;\n\t\n\t                if (node.getLayer() || layer) {\n\t                  (layer || node).draw();\n\t                }\n\t\n\t            }\n\t        },\n\t        _endDragAfter: function(evt) {\n\t            evt = evt || {};\n\t            var dragEndNode = evt.dragEndNode;\n\t\n\t            if (evt && dragEndNode) {\n\t                dragEndNode.fire('dragend', {\n\t                    type: 'dragend',\n\t                    target: dragEndNode,\n\t                    evt: evt\n\t                }, true);\n\t            }\n\t        }\n\t    };\n\t\n\t    // Node extenders\n\t\n\t    /**\n\t     * initiate drag and drop\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     */\n\t    Konva.Node.prototype.startDrag = function() {\n\t        var dd = Konva.DD,\n\t            stage = this.getStage(),\n\t            layer = this.getLayer(),\n\t            pos = stage.getPointerPosition(),\n\t            ap = this.getAbsolutePosition();\n\t\n\t        if(pos) {\n\t            if (dd.node) {\n\t                dd.node.stopDrag();\n\t            }\n\t\n\t            dd.node = this;\n\t            dd.startPointerPos = pos;\n\t            dd.offset.x = pos.x - ap.x;\n\t            dd.offset.y = pos.y - ap.y;\n\t            dd.anim.setLayers(layer || this.getLayers());\n\t            dd.anim.start();\n\t\n\t            this._setDragPosition();\n\t        }\n\t    };\n\t\n\t    Konva.Node.prototype._setDragPosition = function(evt) {\n\t        var dd = Konva.DD,\n\t            pos = this.getStage().getPointerPosition(),\n\t            dbf = this.getDragBoundFunc();\n\t        if (!pos) {\n\t            return;\n\t        }\n\t        var newNodePos = {\n\t            x: pos.x - dd.offset.x,\n\t            y: pos.y - dd.offset.y\n\t        };\n\t\n\t        if(dbf !== undefined) {\n\t            newNodePos = dbf.call(this, newNodePos, evt);\n\t        }\n\t        this.setAbsolutePosition(newNodePos);\n\t\n\t        if (!this._lastPos || this._lastPos.x !== newNodePos.x ||\n\t            this._lastPos.y !== newNodePos.y) {\n\t            dd.anim.dirty = true;\n\t        }\n\t\n\t        this._lastPos = newNodePos;\n\t    };\n\t\n\t    /**\n\t     * stop drag and drop\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     */\n\t    Konva.Node.prototype.stopDrag = function() {\n\t        var dd = Konva.DD,\n\t            evt = {};\n\t        dd._endDragBefore(evt);\n\t        dd._endDragAfter(evt);\n\t    };\n\t\n\t    Konva.Node.prototype.setDraggable = function(draggable) {\n\t        this._setAttr('draggable', draggable);\n\t        this._dragChange();\n\t    };\n\t\n\t    var origDestroy = Konva.Node.prototype.destroy;\n\t\n\t    Konva.Node.prototype.destroy = function() {\n\t        var dd = Konva.DD;\n\t\n\t        // stop DD\n\t        if(dd.node && dd.node._id === this._id) {\n\t\n\t            this.stopDrag();\n\t        }\n\t\n\t        origDestroy.call(this);\n\t    };\n\t\n\t    /**\n\t     * determine if node is currently in drag and drop mode\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     */\n\t    Konva.Node.prototype.isDragging = function() {\n\t        var dd = Konva.DD;\n\t        return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n\t    };\n\t\n\t    Konva.Node.prototype._listenDrag = function() {\n\t        var that = this;\n\t\n\t        this._dragCleanup();\n\t\n\t        if (this.getClassName() === 'Stage') {\n\t            this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n\t                if(!Konva.DD.node) {\n\t                    that.startDrag(evt);\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            this.on('mousedown.konva touchstart.konva', function(evt) {\n\t                // ignore right and middle buttons\n\t                if (evt.evt.button === 1 || evt.evt.button === 2) {\n\t                    return;\n\t                }\n\t                if(!Konva.DD.node) {\n\t                    that.startDrag(evt);\n\t                }\n\t            });\n\t        }\n\t\n\t        // listening is required for drag and drop\n\t        /*\n\t        this._listeningEnabled = true;\n\t        this._clearSelfAndAncestorCache('listeningEnabled');\n\t        */\n\t    };\n\t\n\t    Konva.Node.prototype._dragChange = function() {\n\t        if(this.attrs.draggable) {\n\t            this._listenDrag();\n\t        }\n\t        else {\n\t            // remove event listeners\n\t            this._dragCleanup();\n\t\n\t            /*\n\t             * force drag and drop to end\n\t             * if this node is currently in\n\t             * drag and drop mode\n\t             */\n\t            var stage = this.getStage();\n\t            var dd = Konva.DD;\n\t            if(stage && dd.node && dd.node._id === this._id) {\n\t                dd.node.stopDrag();\n\t            }\n\t        }\n\t    };\n\t\n\t    Konva.Node.prototype._dragCleanup = function() {\n\t        if (this.getClassName() === 'Stage') {\n\t            this.off('contentMousedown.konva');\n\t            this.off('contentTouchstart.konva');\n\t        } else {\n\t            this.off('mousedown.konva');\n\t            this.off('touchstart.konva');\n\t        }\n\t    };\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\t\n\t    /**\n\t     * get/set drag bound function.  This is used to override the default\n\t     *  drag and drop position\n\t     * @name dragBoundFunc\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Function} dragBoundFunc\n\t     * @returns {Function}\n\t     * @example\n\t     * // get drag bound function\n\t     * var dragBoundFunc = node.dragBoundFunc();\n\t     *\n\t     * // create vertical drag and drop\n\t     * node.dragBoundFunc(function(pos){\n\t     *   return {\n\t     *     x: this.getAbsolutePosition().x,\n\t     *     y: pos.y\n\t     *   };\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\t\n\t     /**\n\t     * get/set draggable flag\n\t     * @name draggable\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Boolean} draggable\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get draggable flag\n\t     * var draggable = node.draggable();\n\t     *\n\t     * // enable drag and drop\n\t     * node.draggable(true);\n\t     *\n\t     * // disable drag and drop\n\t     * node.draggable(false);\n\t     */\n\t\n\t    var html = Konva.document.documentElement;\n\t    html.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n\t    html.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\t\n\t    html.addEventListener('mousemove', Konva.DD._drag);\n\t    html.addEventListener('touchmove', Konva.DD._drag);\n\t\n\t    html.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n\t    html.addEventListener('touchend', Konva.DD._endDragAfter, false);\n\t\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Rect constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} [config.cornerRadius]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var rect = new Konva.Rect({\n\t     *   width: 100,\n\t     *   height: 50,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 5\n\t     * });\n\t     */\n\t    Konva.Rect = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Rect.prototype = {\n\t        ___init: function(config) {\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Rect';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var cornerRadius = this.getCornerRadius(),\n\t                width = this.getWidth(),\n\t                height = this.getHeight();\n\t\n\t            context.beginPath();\n\t\n\t            if(!cornerRadius) {\n\t                // simple rect - don't bother doing all that complicated maths stuff.\n\t                context.rect(0, 0, width, height);\n\t            } else {\n\t                // arcTo would be nicer, but browser support is patchy (Opera)\n\t                cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n\t                context.moveTo(cornerRadius, 0);\n\t                context.lineTo(width - cornerRadius, 0);\n\t                context.arc(width - cornerRadius, cornerRadius, cornerRadius, Math.PI * 3 / 2, 0, false);\n\t                context.lineTo(width, height - cornerRadius);\n\t                context.arc(width - cornerRadius, height - cornerRadius, cornerRadius, 0, Math.PI / 2, false);\n\t                context.lineTo(cornerRadius, height);\n\t                context.arc(cornerRadius, height - cornerRadius, cornerRadius, Math.PI / 2, Math.PI, false);\n\t                context.lineTo(0, cornerRadius);\n\t                context.arc(cornerRadius, cornerRadius, cornerRadius, Math.PI, Math.PI * 3 / 2, false);\n\t            }\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        }\n\t    };\n\t\n\t    Konva.Util.extend(Konva.Rect, Konva.Shape);\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Rect, 'cornerRadius', 0);\n\t    /**\n\t     * get/set corner radius\n\t     * @name cornerRadius\n\t     * @method\n\t     * @memberof Konva.Rect.prototype\n\t     * @param {Number} cornerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get corner radius\n\t     * var cornerRadius = rect.cornerRadius();\n\t     *\n\t     * // set corner radius\n\t     * rect.cornerRadius(10);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Rect);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // the 0.0001 offset fixes a bug in Chrome 27\n\t    var PIx2 = (Math.PI * 2) - 0.0001,\n\t        CIRCLE = 'Circle';\n\t\n\t    /**\n\t     * Circle constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.radius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // create circle\n\t     * var circle = new Konva.Circle({\n\t     *   radius: 40,\n\t     *   fill: 'red',\n\t     *   stroke: 'black'\n\t     *   strokeWidth: 5\n\t     * });\n\t     */\n\t    Konva.Circle = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Circle.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = CIRCLE;\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            context.beginPath();\n\t            context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        // implements Shape.prototype.getWidth()\n\t        getWidth: function() {\n\t            return this.getRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            if (this.radius() !== width / 2) {\n\t                this.setRadius(width / 2);\n\t            }\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            if (this.radius() !== height / 2) {\n\t                this.setRadius(height / 2);\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Circle, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Circle, 'radius', 0);\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\t\n\t    /**\n\t     * get/set radius\n\t     * @name radius\n\t     * @method\n\t     * @memberof Konva.Circle.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius\n\t     * var radius = circle.radius();\n\t     *\n\t     * // set radius\n\t     * circle.radius(10);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Circle);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // the 0.0001 offset fixes a bug in Chrome 27\n\t    var PIx2 = (Math.PI * 2) - 0.0001,\n\t        ELLIPSE = 'Ellipse';\n\t\n\t    /**\n\t     * Ellipse constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Object} config.radius defines x and y radius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var ellipse = new Konva.Ellipse({\n\t     *   radius : {\n\t     *     x : 50,\n\t     *     y : 50\n\t     *   },\n\t     *   fill: 'red'\n\t     * });\n\t     */\n\t    Konva.Ellipse = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Ellipse.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = ELLIPSE;\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var rx = this.getRadiusX(),\n\t                ry = this.getRadiusY();\n\t\n\t            context.beginPath();\n\t            context.save();\n\t            if(rx !== ry) {\n\t                context.scale(1, ry / rx);\n\t            }\n\t            context.arc(0, 0, rx, 0, PIx2, false);\n\t            context.restore();\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        // implements Shape.prototype.getWidth()\n\t        getWidth: function() {\n\t            return this.getRadiusX() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getRadiusY() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            this.setRadius({\n\t                x: width / 2\n\t            });\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            this.setRadius({\n\t                y: height / 2\n\t            });\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\t\n\t    /**\n\t     * get/set radius\n\t     * @name radius\n\t     * @method\n\t     * @memberof Konva.Ellipse.prototype\n\t     * @param {Object} radius\n\t     * @param {Number} radius.x\n\t     * @param {Number} radius.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get radius\n\t     * var radius = ellipse.radius();\n\t     *\n\t     * // set radius\n\t     * ellipse.radius({\n\t     *   x: 200,\n\t     *   y: 100\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusX', 0);\n\t    /**\n\t     * get/set radius x\n\t     * @name radiusX\n\t     * @method\n\t     * @memberof Konva.Ellipse.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius x\n\t     * var radiusX = ellipse.radiusX();\n\t     *\n\t     * // set radius x\n\t     * ellipse.radiusX(200);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusY', 0);\n\t    /**\n\t     * get/set radius y\n\t     * @name radiusY\n\t     * @method\n\t     * @memberof Konva.Ellipse.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius y\n\t     * var radiusY = ellipse.radiusY();\n\t     *\n\t     * // set radius y\n\t     * ellipse.radiusY(200);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Ellipse);\n\t\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // the 0.0001 offset fixes a bug in Chrome 27\n\t    var PIx2 = (Math.PI * 2) - 0.0001;\n\t    /**\n\t     * Ring constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.innerRadius\n\t     * @param {Number} config.outerRadius\n\t     * @param {Boolean} [config.clockwise]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var ring = new Konva.Ring({\n\t     *   innerRadius: 40,\n\t     *   outerRadius: 80,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 5\n\t     * });\n\t     */\n\t    Konva.Ring = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Ring.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Ring';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            context.beginPath();\n\t            context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n\t            context.moveTo(this.getOuterRadius(), 0);\n\t            context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        // implements Shape.prototype.getWidth()\n\t        getWidth: function() {\n\t            return this.getOuterRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getOuterRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            if (this.outerRadius() !== width / 2) {\n\t                this.setOuterRadius(width / 2);\n\t            }\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            if (this.outerRadius() !== height / 2) {\n\t                this.setOuterRadius(height / 2);\n\t            }\n\t        },\n\t        setOuterRadius: function(val) {\n\t            this._setAttr('outerRadius', val);\n\t            this.setWidth(val * 2);\n\t            this.setHeight(val * 2);\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Ring, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Ring, 'innerRadius', 0);\n\t\n\t    /**\n\t     * get/set innerRadius\n\t     * @name innerRadius\n\t     * @method\n\t     * @memberof Konva.Ring.prototype\n\t     * @param {Number} innerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get inner radius\n\t     * var innerRadius = ring.innerRadius();\n\t     *\n\t     * // set inner radius\n\t     * ring.innerRadius(20);\n\t     */\n\t    Konva.Factory.addGetter(Konva.Ring, 'outerRadius', 0);\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\t\n\t    /**\n\t     * get/set outerRadius\n\t     * @name outerRadius\n\t     * @method\n\t     * @memberof Konva.Ring.prototype\n\t     * @param {Number} outerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get outer radius\n\t     * var outerRadius = ring.outerRadius();\n\t     *\n\t     * // set outer radius\n\t     * ring.outerRadius(20);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Ring);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Wedge constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.angle in degrees\n\t     * @param {Number} config.radius\n\t     * @param {Boolean} [config.clockwise]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // draw a wedge that's pointing downwards\n\t     * var wedge = new Konva.Wedge({\n\t     *   radius: 40,\n\t     *   fill: 'red',\n\t     *   stroke: 'black'\n\t     *   strokeWidth: 5,\n\t     *   angleDeg: 60,\n\t     *   rotationDeg: -120\n\t     * });\n\t     */\n\t    Konva.Wedge = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Wedge.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Wedge';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            context.beginPath();\n\t            context.arc(0, 0, this.getRadius(), 0, Konva.getAngle(this.getAngle()), this.getClockwise());\n\t            context.lineTo(0, 0);\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        // implements Shape.prototype.getWidth()\n\t        getWidth: function() {\n\t            return this.getRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            if (this.radius() !== width / 2) {\n\t                this.setRadius(width / 2);\n\t            }\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            if (this.radius() !== height / 2) {\n\t                this.setRadius(height / 2);\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Wedge, 'radius', 0);\n\t\n\t    /**\n\t     * get/set radius\n\t     * @name radius\n\t     * @method\n\t     * @memberof Konva.Wedge.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius\n\t     * var radius = wedge.radius();\n\t     *\n\t     * // set radius\n\t     * wedge.radius(10);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Wedge, 'angle', 0);\n\t\n\t    /**\n\t     * get/set angle in degrees\n\t     * @name angle\n\t     * @method\n\t     * @memberof Konva.Wedge.prototype\n\t     * @param {Number} angle\n\t     * @returns {Number}\n\t     * @example\n\t     * // get angle\n\t     * var angle = wedge.angle();\n\t     *\n\t     * // set angle\n\t     * wedge.angle(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\t\n\t    /**\n\t     * get/set clockwise flag\n\t     * @name clockwise\n\t     * @method\n\t     * @memberof Konva.Wedge.prototype\n\t     * @param {Number} clockwise\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clockwise flag\n\t     * var clockwise = wedge.clockwise();\n\t     *\n\t     * // draw wedge counter-clockwise\n\t     * wedge.clockwise(false);\n\t     *\n\t     * // draw wedge clockwise\n\t     * wedge.clockwise(true);\n\t     */\n\t\n\t    Konva.Factory.backCompat(Konva.Wedge, {\n\t        angleDeg: 'angle',\n\t        getAngleDeg: 'getAngle',\n\t        setAngleDeg: 'setAngle'\n\t    });\n\t\n\t    Konva.Collection.mapMethods(Konva.Wedge);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Arc constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.angle in degrees\n\t     * @param {Number} config.innerRadius\n\t     * @param {Number} config.outerRadius\n\t     * @param {Boolean} [config.clockwise]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // draw a Arc that's pointing downwards\n\t     * var arc = new Konva.Arc({\n\t     *   innerRadius: 40,\n\t     *   outerRadius: 80,\n\t     *   fill: 'red',\n\t     *   stroke: 'black'\n\t     *   strokeWidth: 5,\n\t     *   angle: 60,\n\t     *   rotationDeg: -120\n\t     * });\n\t     */\n\t    Konva.Arc = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Arc.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Arc';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var angle = Konva.getAngle(this.angle()),\n\t                clockwise = this.clockwise();\n\t\n\t            context.beginPath();\n\t            context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n\t            context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        // implements Shape.prototype.getWidth()\n\t        getWidth: function() {\n\t            return this.getOuterRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getOuterRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            if (this.getOuterRadius() !== width / 2) {\n\t                this.setOuterRadius(width / 2);\n\t            }\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            if (this.getOuterRadius() !== height / 2) {\n\t                this.setOuterRadius(height / 2);\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Arc, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Arc, 'innerRadius', 0);\n\t\n\t    /**\n\t     * get/set innerRadius\n\t     * @name innerRadius\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Number} innerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get inner radius\n\t     * var innerRadius = arc.innerRadius();\n\t     *\n\t     * // set inner radius\n\t     * arc.innerRadius(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Arc, 'outerRadius', 0);\n\t\n\t    /**\n\t     * get/set outerRadius\n\t     * @name outerRadius\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Number} outerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get outer radius\n\t     * var outerRadius = arc.outerRadius();\n\t     *\n\t     * // set outer radius\n\t     * arc.outerRadius(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Arc, 'angle', 0);\n\t\n\t    /**\n\t     * get/set angle in degrees\n\t     * @name angle\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Number} angle\n\t     * @returns {Number}\n\t     * @example\n\t     * // get angle\n\t     * var angle = arc.angle();\n\t     *\n\t     * // set angle\n\t     * arc.angle(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\t\n\t    /**\n\t     * get/set clockwise flag\n\t     * @name clockwise\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Boolean} clockwise\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get clockwise flag\n\t     * var clockwise = arc.clockwise();\n\t     *\n\t     * // draw arc counter-clockwise\n\t     * arc.clockwise(false);\n\t     *\n\t     * // draw arc clockwise\n\t     * arc.clockwise(true);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Arc);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // CONSTANTS\n\t    var IMAGE = 'Image';\n\t\n\t    /**\n\t     * Image constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Image} config.image\n\t     * @param {Object} [config.crop]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var imageObj = new Image();\n\t     * imageObj.onload = function() {\n\t     *   var image = new Konva.Image({\n\t     *     x: 200,\n\t     *     y: 50,\n\t     *     image: imageObj,\n\t     *     width: 100,\n\t     *     height: 100\n\t     *   });\n\t     * };\n\t     * imageObj.src = '/path/to/image.jpg'\n\t     */\n\t    Konva.Image = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Image.prototype = {\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = IMAGE;\n\t            this.sceneFunc(this._sceneFunc);\n\t            this.hitFunc(this._hitFunc);\n\t        },\n\t        _useBufferCanvas: function() {\n\t            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasStroke() && this.getStage();\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var width = this.getWidth(),\n\t                height = this.getHeight(),\n\t                image = this.getImage(),\n\t                cropWidth, cropHeight, params;\n\t\n\t            if (image) {\n\t                cropWidth = this.getCropWidth();\n\t                cropHeight = this.getCropHeight();\n\t                if (cropWidth && cropHeight) {\n\t                    params = [image, this.getCropX(), this.getCropY(), cropWidth, cropHeight, 0, 0, width, height];\n\t                } else {\n\t                    params = [image, 0, 0, width, height];\n\t                }\n\t            }\n\t\n\t            if (this.hasFill() || this.hasStroke()) {\n\t                context.beginPath();\n\t                context.rect(0, 0, width, height);\n\t                context.closePath();\n\t                context.fillStrokeShape(this);\n\t            }\n\t\n\t            if (image) {\n\t                context.drawImage.apply(context, params);\n\t            }\n\t        },\n\t        _hitFunc: function(context) {\n\t            var width = this.getWidth(),\n\t                height = this.getHeight();\n\t\n\t            context.beginPath();\n\t            context.rect(0, 0, width, height);\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        getWidth: function() {\n\t            var image = this.getImage();\n\t            return this.attrs.width || (image ? image.width : 0);\n\t        },\n\t        getHeight: function() {\n\t            var image = this.getImage();\n\t            return this.attrs.height || (image ? image.height : 0);\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Image, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\t\n\t    /**\n\t     * set image\n\t     * @name setImage\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Image} image\n\t     */\n\t\n\t    /**\n\t     * get image\n\t     * @name getImage\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @returns {Image}\n\t     */\n\t\n\t    Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', ['x', 'y', 'width', 'height']);\n\t    /**\n\t     * get/set crop\n\t     * @method\n\t     * @name crop\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Object} crop\n\t     * @param {Number} crop.x\n\t     * @param {Number} crop.y\n\t     * @param {Number} crop.width\n\t     * @param {Number} crop.height\n\t     * @returns {Object}\n\t     * @example\n\t     * // get crop\n\t     * var crop = image.crop();\n\t     *\n\t     * // set crop\n\t     * image.crop({\n\t     *   x: 20,\n\t     *   y: 20,\n\t     *   width: 20,\n\t     *   height: 20\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Image, 'cropX', 0);\n\t    /**\n\t     * get/set crop x\n\t     * @method\n\t     * @name cropX\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop x\n\t     * var cropX = image.cropX();\n\t     *\n\t     * // set crop x\n\t     * image.cropX(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Image, 'cropY', 0);\n\t    /**\n\t     * get/set crop y\n\t     * @name cropY\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop y\n\t     * var cropY = image.cropY();\n\t     *\n\t     * // set crop y\n\t     * image.cropY(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Image, 'cropWidth', 0);\n\t    /**\n\t     * get/set crop width\n\t     * @name cropWidth\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} width\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop width\n\t     * var cropWidth = image.cropWidth();\n\t     *\n\t     * // set crop width\n\t     * image.cropWidth(20);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Image, 'cropHeight', 0);\n\t    /**\n\t     * get/set crop height\n\t     * @name cropHeight\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} height\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop height\n\t     * var cropHeight = image.cropHeight();\n\t     *\n\t     * // set crop height\n\t     * image.cropHeight(20);\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Image);\n\t\n\t    /**\n\t     * load image from given url and create `Konva.Image` instance\n\t     * @method\n\t     * @memberof Konva.Image\n\t     * @param {String} url image source\n\t     * @param {Function} callback with Konva.Image instance as first argument\n\t     * @example\n\t     *  Konva.Image.fromURL(imageURL, function(image){\n\t     *    // image is Konva.Image instance\n\t     *    layer.add(image);\n\t     *    layer.draw();\n\t     *  });\n\t     */\n\t    Konva.Image.fromURL = function(url, callback) {\n\t        var img = new Image();\n\t        img.onload = function() {\n\t          var image = new Konva.Image({\n\t            image: img\n\t          });\n\t          callback(image);\n\t        };\n\t        img.src = url;\n\t    };\n\t})();\n\t\n\t/*eslint-disable max-depth */\n\t(function() {\n\t    'use strict';\n\t    // constants\n\t    var AUTO = 'auto',\n\t        //CANVAS = 'canvas',\n\t        CENTER = 'center',\n\t        CHANGE_KONVA = 'Change.konva',\n\t        CONTEXT_2D = '2d',\n\t        DASH = '-',\n\t        EMPTY_STRING = '',\n\t        LEFT = 'left',\n\t        TEXT = 'text',\n\t        TEXT_UPPER = 'Text',\n\t        MIDDLE = 'middle',\n\t        NORMAL = 'normal',\n\t        PX_SPACE = 'px ',\n\t        SPACE = ' ',\n\t        RIGHT = 'right',\n\t        WORD = 'word',\n\t        CHAR = 'char',\n\t        NONE = 'none',\n\t        ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'fontVariant', 'padding', 'align', 'lineHeight', 'text', 'width', 'height', 'wrap'],\n\t\n\t        // cached variables\n\t        attrChangeListLen = ATTR_CHANGE_LIST.length,\n\t        dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n\t\n\t    /**\n\t     * Text constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} [config.fontFamily] default is Arial\n\t     * @param {Number} [config.fontSize] in pixels.  Default is 12\n\t     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n\t     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n\t     * @param {String} config.text\n\t     * @param {String} [config.align] can be left, center, or right\n\t     * @param {Number} [config.padding]\n\t     * @param {Number} [config.lineHeight] default is 1\n\t     * @param {String} [config.wrap] can be word, char, or none. Default is word\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var text = new Konva.Text({\n\t     *   x: 10,\n\t     *   y: 15,\n\t     *   text: 'Simple Text',\n\t     *   fontSize: 30,\n\t     *   fontFamily: 'Calibri',\n\t     *   fill: 'green'\n\t     * });\n\t     */\n\t    Konva.Text = function(config) {\n\t        this.___init(config);\n\t    };\n\t    function _fillFunc(context) {\n\t        context.fillText(this.partialText, 0, 0);\n\t    }\n\t    function _strokeFunc(context) {\n\t        context.strokeText(this.partialText, 0, 0);\n\t    }\n\t\n\t    Konva.Text.prototype = {\n\t        ___init: function(config) {\n\t            config = config || {};\n\t\n\t            // set default color to black\n\t            if (!config.fillLinearGradientColorStops && !config.fillRadialGradientColorStops) {\n\t                config.fill = config.fill || 'black';\n\t            }\n\t            //\n\t            // if (config.width === undefined) {\n\t            //     config.width = AUTO;\n\t            // }\n\t            // if (config.height === undefined) {\n\t            //     config.height = AUTO;\n\t            // }\n\t\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t\n\t            this._fillFunc = _fillFunc;\n\t            this._strokeFunc = _strokeFunc;\n\t            this.className = TEXT_UPPER;\n\t\n\t            // update text data for certain attr changes\n\t            for(var n = 0; n < attrChangeListLen; n++) {\n\t                this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n\t            }\n\t\n\t            this._setTextData();\n\t            this.sceneFunc(this._sceneFunc);\n\t            this.hitFunc(this._hitFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var p = this.getPadding(),\n\t                textHeight = this.getTextHeight(),\n\t                lineHeightPx = this.getLineHeight() * textHeight,\n\t                textArr = this.textArr,\n\t                textArrLen = textArr.length,\n\t                totalWidth = this.getWidth(),\n\t                n;\n\t\n\t            context.setAttr('font', this._getContextFont());\n\t\n\t            context.setAttr('textBaseline', MIDDLE);\n\t            context.setAttr('textAlign', LEFT);\n\t            context.save();\n\t            if (p) {\n\t                context.translate(p, 0);\n\t                context.translate(0, p + textHeight / 2);\n\t            } else {\n\t                context.translate(0, textHeight / 2);\n\t            }\n\t\n\t\n\t            // draw text lines\n\t            for(n = 0; n < textArrLen; n++) {\n\t                var obj = textArr[n],\n\t                    text = obj.text,\n\t                    width = obj.width;\n\t\n\t                // horizontal alignment\n\t                context.save();\n\t                if(this.getAlign() === RIGHT) {\n\t                    context.translate(totalWidth - width - p * 2, 0);\n\t                }\n\t                else if(this.getAlign() === CENTER) {\n\t                    context.translate((totalWidth - width - p * 2) / 2, 0);\n\t                }\n\t\n\t                this.partialText = text;\n\t\n\t                context.fillStrokeShape(this);\n\t                context.restore();\n\t                context.translate(0, lineHeightPx);\n\t            }\n\t            context.restore();\n\t        },\n\t        _hitFunc: function(context) {\n\t            var width = this.getWidth(),\n\t                height = this.getHeight();\n\t\n\t            context.beginPath();\n\t            context.rect(0, 0, width, height);\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        setText: function(text) {\n\t            var str = Konva.Util._isString(text) ? text : (text || '').toString();\n\t            this._setAttr(TEXT, str);\n\t            return this;\n\t        },\n\t        /**\n\t         * get width of text area, which includes padding\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t        getWidth: function() {\n\t            var isAuto = (this.attrs.width === AUTO) || (this.attrs.width === undefined);\n\t            return isAuto ? this.getTextWidth() + this.getPadding() * 2 : this.attrs.width;\n\t        },\n\t        /**\n\t         * get the height of the text area, which takes into account multi-line text, line heights, and padding\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t        getHeight: function() {\n\t          var isAuto = (this.attrs.height === AUTO) || (this.attrs.height === undefined);\n\t          return isAuto ? (this.getTextHeight() * this.textArr.length * this.getLineHeight()) + this.getPadding() * 2 : this.attrs.height;\n\t        },\n\t        /**\n\t         * get text width\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t        getTextWidth: function() {\n\t            return this.textWidth;\n\t        },\n\t        /**\n\t         * get text height\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t        getTextHeight: function() {\n\t            return this.textHeight;\n\t        },\n\t        _getTextSize: function(text) {\n\t            var _context = dummyContext,\n\t                fontSize = this.getFontSize(),\n\t                metrics;\n\t\n\t            _context.save();\n\t            _context.font = this._getContextFont();\n\t\n\t            metrics = _context.measureText(text);\n\t            _context.restore();\n\t            return {\n\t                width: metrics.width,\n\t                height: parseInt(fontSize, 10)\n\t            };\n\t        },\n\t        _getContextFont: function() {\n\t            // IE don't want to work with usual font style\n\t            // bold was not working\n\t            // removing font variant will solve\n\t            // fix for: https://github.com/konvajs/konva/issues/94\n\t            if (Konva.UA.isIE) {\n\t                return this.getFontStyle() + SPACE + this.getFontSize() + PX_SPACE + this.getFontFamily();\n\t            }\n\t            return this.getFontStyle() + SPACE +\n\t                    this.getFontVariant() + SPACE +\n\t                    this.getFontSize() + PX_SPACE +\n\t                    this.getFontFamily();\n\t        },\n\t        _addTextLine: function (line, width) {\n\t            return this.textArr.push({text: line, width: width});\n\t        },\n\t        _getTextWidth: function (text) {\n\t            return dummyContext.measureText(text).width;\n\t        },\n\t        _setTextData: function () {\n\t            var lines = this.getText().split('\\n'),\n\t                fontSize = +this.getFontSize(),\n\t                textWidth = 0,\n\t                lineHeightPx = this.getLineHeight() * fontSize,\n\t                width = this.attrs.width,\n\t                height = this.attrs.height,\n\t                fixedWidth = width !== AUTO,\n\t                fixedHeight = height !== AUTO,\n\t                padding = this.getPadding(),\n\t                maxWidth = width - padding * 2,\n\t                maxHeightPx = height - padding * 2,\n\t                currentHeightPx = 0,\n\t                wrap = this.getWrap(),\n\t                shouldWrap = wrap !== NONE,\n\t                wrapAtWord = wrap !== CHAR && shouldWrap;\n\t\n\t            this.textArr = [];\n\t            dummyContext.save();\n\t            dummyContext.font = this._getContextFont();\n\t            for (var i = 0, max = lines.length; i < max; ++i) {\n\t                var line = lines[i],\n\t                    lineWidth = this._getTextWidth(line);\n\t                if (fixedWidth && lineWidth > maxWidth) {\n\t                    /*\n\t                     * if width is fixed and line does not fit entirely\n\t                     * break the line into multiple fitting lines\n\t                     */\n\t                    while (line.length > 0) {\n\t                        /*\n\t                         * use binary search to find the longest substring that\n\t                         * that would fit in the specified width\n\t                         */\n\t                        var low = 0, high = line.length,\n\t                            match = '', matchWidth = 0;\n\t                        while (low < high) {\n\t                            var mid = (low + high) >>> 1,\n\t                                substr = line.slice(0, mid + 1),\n\t                                substrWidth = this._getTextWidth(substr);\n\t                            if (substrWidth <= maxWidth) {\n\t                                low = mid + 1;\n\t                                match = substr;\n\t                                matchWidth = substrWidth;\n\t                            } else {\n\t                                high = mid;\n\t                            }\n\t                        }\n\t                        /*\n\t                         * 'low' is now the index of the substring end\n\t                         * 'match' is the substring\n\t                         * 'matchWidth' is the substring width in px\n\t                         */\n\t                        if (match) {\n\t                            // a fitting substring was found\n\t                            if (wrapAtWord) {\n\t                                // try to find a space or dash where wrapping could be done\n\t                                var wrapIndex = Math.max(match.lastIndexOf(SPACE),\n\t                                                          match.lastIndexOf(DASH)) + 1;\n\t                                if (wrapIndex > 0) {\n\t                                    // re-cut the substring found at the space/dash position\n\t                                    low = wrapIndex;\n\t                                    match = match.slice(0, low);\n\t                                    matchWidth = this._getTextWidth(match);\n\t                                }\n\t                            }\n\t                            this._addTextLine(match, matchWidth);\n\t                            textWidth = Math.max(textWidth, matchWidth);\n\t                            currentHeightPx += lineHeightPx;\n\t                            if (!shouldWrap ||\n\t                                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\n\t                                /*\n\t                                 * stop wrapping if wrapping is disabled or if adding\n\t                                 * one more line would overflow the fixed height\n\t                                 */\n\t                                break;\n\t                            }\n\t                            line = line.slice(low);\n\t                            if (line.length > 0) {\n\t                                // Check if the remaining text would fit on one line\n\t                                lineWidth = this._getTextWidth(line);\n\t                                if (lineWidth <= maxWidth) {\n\t                                    // if it does, add the line and break out of the loop\n\t                                    this._addTextLine(line, lineWidth);\n\t                                    currentHeightPx += lineHeightPx;\n\t                                    textWidth = Math.max(textWidth, lineWidth);\n\t                                    break;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            // not even one character could fit in the element, abort\n\t                            break;\n\t                        }\n\t                    }\n\t                } else {\n\t                    // element width is automatically adjusted to max line width\n\t                    this._addTextLine(line, lineWidth);\n\t                    currentHeightPx += lineHeightPx;\n\t                    textWidth = Math.max(textWidth, lineWidth);\n\t                }\n\t                // if element height is fixed, abort if adding one more line would overflow\n\t                if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n\t                    break;\n\t                }\n\t            }\n\t            dummyContext.restore();\n\t            this.textHeight = fontSize;\n\t            this.textWidth = textWidth;\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Text, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\t\n\t    /**\n\t     * get/set font family\n\t     * @name fontFamily\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} fontFamily\n\t     * @returns {String}\n\t     * @example\n\t     * // get font family\n\t     * var fontFamily = text.fontFamily();\n\t     *\n\t     * // set font family\n\t     * text.fontFamily('Arial');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'fontSize', 12);\n\t\n\t    /**\n\t     * get/set font size in pixels\n\t     * @name fontSize\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {Number} fontSize\n\t     * @returns {Number}\n\t     * @example\n\t     * // get font size\n\t     * var fontSize = text.fontSize();\n\t     *\n\t     * // set font size to 22px\n\t     * text.fontSize(22);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\t\n\t    /**\n\t     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n\t     * @name fontStyle\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} fontStyle\n\t     * @returns {String}\n\t     * @example\n\t     * // get font style\n\t     * var fontStyle = text.fontStyle();\n\t     *\n\t     * // set font style\n\t     * text.fontStyle('bold');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\t\n\t    /**\n\t     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n\t     * @name fontVariant\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} fontVariant\n\t     * @returns {String}\n\t     * @example\n\t     * // get font variant\n\t     * var fontVariant = text.fontVariant();\n\t     *\n\t     * // set font variant\n\t     * text.fontVariant('small-caps');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'padding', 0);\n\t\n\t    /**\n\t     * set padding\n\t     * @name padding\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {Number} padding\n\t     * @returns {Number}\n\t     * @example\n\t     * // get padding\n\t     * var padding = text.padding();\n\t     *\n\t     * // set padding to 10 pixels\n\t     * text.padding(10);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\t\n\t    /**\n\t     * get/set horizontal align of text.  Can be 'left', 'center', or 'right'\n\t     * @name align\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} align\n\t     * @returns {String}\n\t     * @example\n\t     * // get text align\n\t     * var align = text.align();\n\t     *\n\t     * // center text\n\t     * text.align('center');\n\t     *\n\t     * // align text to right\n\t     * text.align('right');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'lineHeight', 1);\n\t\n\t    /**\n\t     * get/set line height.  The default is 1.\n\t     * @name lineHeight\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {Number} lineHeight\n\t     * @returns {Number}\n\t     * @example\n\t     * // get line height\n\t     * var lineHeight = text.lineHeight();\n\t     *\n\t     * // set the line height\n\t     * text.lineHeight(2);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\t\n\t    /**\n\t     * get/set wrap.  Can be word, char, or none. Default is word.\n\t     * @name wrap\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} wrap\n\t     * @returns {String}\n\t     * @example\n\t     * // get wrap\n\t     * var wrap = text.wrap();\n\t     *\n\t     * // set wrap\n\t     * text.wrap('word');\n\t     */\n\t\n\t    Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n\t    Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\t\n\t    /**\n\t     * get/set text\n\t     * @name getText\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} text\n\t     * @returns {String}\n\t     * @example\n\t     * // get text\n\t     * var text = text.text();\n\t     *\n\t     * // set text\n\t     * text.text('Hello world!');\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Text);\n\t})();\n\t\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * Line constructor.&nbsp; Lines are defined by an array of points and\n\t     *  a tension\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Array} config.points\n\t     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n\t     *   The default is 0\n\t     * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var line = new Konva.Line({\n\t     *   x: 100,\n\t     *   y: 50,\n\t     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n\t     *   stroke: 'red',\n\t     *   tension: 1\n\t     * });\n\t     */\n\t    Konva.Line = function (config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Line.prototype = {\n\t        ___init: function (config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Line';\n\t\n\t            this.on('pointsChange.konva tensionChange.konva closedChange.konva', function () {\n\t                this._clearCache('tensionPoints');\n\t            });\n\t\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function (context) {\n\t            var points = this.getPoints(),\n\t                length = points.length,\n\t                tension = this.getTension(),\n\t                closed = this.getClosed(),\n\t                tp, len, n;\n\t\n\t            if (!length) {\n\t                return;\n\t            }\n\t\n\t            context.beginPath();\n\t            context.moveTo(points[0], points[1]);\n\t\n\t            // tension\n\t            if (tension !== 0 && length > 4) {\n\t                tp = this.getTensionPoints();\n\t                len = tp.length;\n\t                n = closed ? 0 : 4;\n\t\n\t                if (!closed) {\n\t                    context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n\t                }\n\t\n\t                while (n < len - 2) {\n\t                    context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n\t                }\n\t\n\t                if (!closed) {\n\t                    context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n\t                }\n\t            }\n\t            // no tension\n\t            else {\n\t                for (n = 2; n < length; n += 2) {\n\t                    context.lineTo(points[n], points[n + 1]);\n\t                }\n\t            }\n\t\n\t            // closed e.g. polygons and blobs\n\t            if (closed) {\n\t                context.closePath();\n\t                context.fillStrokeShape(this);\n\t            }\n\t            // open e.g. lines and splines\n\t            else {\n\t                context.strokeShape(this);\n\t            }\n\t        },\n\t        getTensionPoints: function () {\n\t            return this._getCache('tensionPoints', this._getTensionPoints);\n\t        },\n\t        _getTensionPoints: function () {\n\t            if (this.getClosed()) {\n\t                return this._getTensionPointsClosed();\n\t            } else {\n\t                return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n\t            }\n\t        },\n\t        _getTensionPointsClosed: function () {\n\t            var p = this.getPoints(),\n\t                len = p.length,\n\t                tension = this.getTension(),\n\t                util = Konva.Util,\n\t                firstControlPoints = util._getControlPoints(\n\t                    p[len - 2],\n\t                    p[len - 1],\n\t                    p[0],\n\t                    p[1],\n\t                    p[2],\n\t                    p[3],\n\t                    tension\n\t                ),\n\t                lastControlPoints = util._getControlPoints(\n\t                    p[len - 4],\n\t                    p[len - 3],\n\t                    p[len - 2],\n\t                    p[len - 1],\n\t                    p[0],\n\t                    p[1],\n\t                    tension\n\t                ),\n\t                middle = Konva.Util._expandPoints(p, tension),\n\t                tp = [\n\t                    firstControlPoints[2],\n\t                    firstControlPoints[3]\n\t                ]\n\t                .concat(middle)\n\t                .concat([\n\t                    lastControlPoints[0],\n\t                    lastControlPoints[1],\n\t                    p[len - 2],\n\t                    p[len - 1],\n\t                    lastControlPoints[2],\n\t                    lastControlPoints[3],\n\t                    firstControlPoints[0],\n\t                    firstControlPoints[1],\n\t                    p[0],\n\t                    p[1]\n\t                ]);\n\t\n\t            return tp;\n\t        },\n\t        getWidth: function () {\n\t            return this.getSelfRect().width;\n\t        },\n\t        getHeight: function () {\n\t            return this.getSelfRect().height;\n\t        },\n\t        // overload size detection\n\t        getSelfRect: function () {\n\t            var points;\n\t            if (this.getTension() !== 0) {\n\t                points = this._getTensionPoints();\n\t            } else {\n\t                points = this.getPoints();\n\t            }\n\t            var minX = points[0];\n\t            var maxX = points[0];\n\t            var minY = points[1];\n\t            var maxY = points[1];\n\t            var x, y;\n\t            for (var i = 0; i < points.length / 2; i++) {\n\t                x = points[i * 2];\n\t                y = points[i * 2 + 1];\n\t                minX = Math.min(minX, x);\n\t                maxX = Math.max(maxX, x);\n\t                minY = Math.min(minY, y);\n\t                maxY = Math.max(maxY, y);\n\t            }\n\t            return {\n\t                x: Math.round(minX),\n\t                y: Math.round(minY),\n\t                width: Math.round(maxX - minX),\n\t                height: Math.round(maxY - minY)\n\t            };\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Line, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\t\n\t    /**\n\t     * get/set closed flag.  The default is false\n\t     * @name closed\n\t     * @method\n\t     * @memberof Konva.Line.prototype\n\t     * @param {Boolean} closed\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get closed flag\n\t     * var closed = line.closed();\n\t     *\n\t     * // close the shape\n\t     * line.closed(true);\n\t     *\n\t     * // open the shape\n\t     * line.closed(false);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Line, 'tension', 0);\n\t\n\t    /**\n\t     * get/set tension\n\t     * @name tension\n\t     * @method\n\t     * @memberof Konva.Line.prototype\n\t     * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n\t     *   The default is 0\n\t     * @returns {Number}\n\t     * @example\n\t     * // get tension\n\t     * var tension = line.tension();\n\t     *\n\t     * // set tension\n\t     * line.tension(3);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Line, 'points', []);\n\t    /**\n\t     * get/set points array\n\t     * @name points\n\t     * @method\n\t     * @memberof Konva.Line.prototype\n\t     * @param {Array} points\n\t     * @returns {Array}\n\t     * @example\n\t     * // get points\n\t     * var points = line.points();\n\t     *\n\t     * // set points\n\t     * line.points([10, 20, 30, 40, 50, 60]);\n\t     *\n\t     * // push a new point\n\t     * line.points(line.points().concat([70, 80]));\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Line);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Sprite constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} config.animation animation key\n\t     * @param {Object} config.animations animation map\n\t     * @param {Integer} [config.frameIndex] animation frame index\n\t     * @param {Image} config.image image object\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var imageObj = new Image();\n\t     * imageObj.onload = function() {\n\t     *   var sprite = new Konva.Sprite({\n\t     *     x: 200,\n\t     *     y: 100,\n\t     *     image: imageObj,\n\t     *     animation: 'standing',\n\t     *     animations: {\n\t     *       standing: [\n\t     *         // x, y, width, height (6 frames)\n\t     *         0, 0, 49, 109,\n\t     *         52, 0, 49, 109,\n\t     *         105, 0, 49, 109,\n\t     *         158, 0, 49, 109,\n\t     *         210, 0, 49, 109,\n\t     *         262, 0, 49, 109\n\t     *       ],\n\t     *       kicking: [\n\t     *         // x, y, width, height (6 frames)\n\t     *         0, 109, 45, 98,\n\t     *         45, 109, 45, 98,\n\t     *         95, 109, 63, 98,\n\t     *         156, 109, 70, 98,\n\t     *         229, 109, 60, 98,\n\t     *         287, 109, 41, 98\n\t     *       ]\n\t     *     },\n\t     *     frameRate: 7,\n\t     *     frameIndex: 0\n\t     *   });\n\t     * };\n\t     * imageObj.src = '/path/to/image.jpg'\n\t     */\n\t    Konva.Sprite = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Sprite.prototype = {\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Sprite';\n\t\n\t            this._updated = true;\n\t            var that = this;\n\t            this.anim = new Konva.Animation(function() {\n\t                // if we don't need to redraw layer we should return false\n\t                var updated = that._updated;\n\t                that._updated = false;\n\t                return updated;\n\t            });\n\t            this.on('animationChange.konva', function() {\n\t                // reset index when animation changes\n\t                this.frameIndex(0);\n\t            });\n\t            this.on('frameIndexChange.konva', function() {\n\t                this._updated = true;\n\t            });\n\t            // smooth change for frameRate\n\t            this.on('frameRateChange.konva', function() {\n\t                if (!this.anim.isRunning()) {\n\t                    return;\n\t                }\n\t                clearInterval(this.interval);\n\t                this._setInterval();\n\t            });\n\t\n\t            this.sceneFunc(this._sceneFunc);\n\t            this.hitFunc(this._hitFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var anim = this.getAnimation(),\n\t                index = this.frameIndex(),\n\t                ix4 = index * 4,\n\t                set = this.getAnimations()[anim],\n\t                offsets = this.frameOffsets(),\n\t                x = set[ix4 + 0],\n\t                y = set[ix4 + 1],\n\t                width = set[ix4 + 2],\n\t                height = set[ix4 + 3],\n\t                image = this.getImage();\n\t\n\t            if (this.hasFill() || this.hasStroke()) {\n\t                context.beginPath();\n\t                context.rect(0, 0, width, height);\n\t                context.closePath();\n\t                context.fillStrokeShape(this);\n\t            }\n\t\n\t            if(image) {\n\t                if (offsets) {\n\t                    var offset = offsets[anim],\n\t                    ix2 = index * 2;\n\t                    context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n\t                } else {\n\t                    context.drawImage(image, x, y, width, height, 0, 0, width, height);\n\t                }\n\t            }\n\t        },\n\t        _hitFunc: function(context) {\n\t            var anim = this.getAnimation(),\n\t                index = this.frameIndex(),\n\t                ix4 = index * 4,\n\t                set = this.getAnimations()[anim],\n\t                offsets = this.frameOffsets(),\n\t                width = set[ix4 + 2],\n\t                height = set[ix4 + 3];\n\t\n\t            context.beginPath();\n\t            if (offsets) {\n\t                var offset = offsets[anim];\n\t                var ix2 = index * 2;\n\t                context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n\t            } else {\n\t                context.rect(0, 0, width, height);\n\t            }\n\t            context.closePath();\n\t            context.fillShape(this);\n\t        },\n\t        _useBufferCanvas: function() {\n\t            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasStroke();\n\t        },\n\t        _setInterval: function() {\n\t            var that = this;\n\t            this.interval = setInterval(function() {\n\t                that._updateIndex();\n\t            }, 1000 / this.getFrameRate());\n\t        },\n\t        /**\n\t         * start sprite animation\n\t         * @method\n\t         * @memberof Konva.Sprite.prototype\n\t         */\n\t        start: function() {\n\t            var layer = this.getLayer();\n\t\n\t            /*\n\t             * animation object has no executable function because\n\t             *  the updates are done with a fixed FPS with the setInterval\n\t             *  below.  The anim object only needs the layer reference for\n\t             *  redraw\n\t             */\n\t            this.anim.setLayers(layer);\n\t            this._setInterval();\n\t            this.anim.start();\n\t        },\n\t        /**\n\t         * stop sprite animation\n\t         * @method\n\t         * @memberof Konva.Sprite.prototype\n\t         */\n\t        stop: function() {\n\t            this.anim.stop();\n\t            clearInterval(this.interval);\n\t        },\n\t        /**\n\t         * determine if animation of sprite is running or not.  returns true or false\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @returns {Boolean}\n\t         */\n\t        isRunning: function() {\n\t            return this.anim.isRunning();\n\t        },\n\t        _updateIndex: function() {\n\t            var index = this.frameIndex(),\n\t                animation = this.getAnimation(),\n\t                animations = this.getAnimations(),\n\t                anim = animations[animation],\n\t                len = anim.length / 4;\n\t\n\t            if(index < len - 1) {\n\t                this.frameIndex(index + 1);\n\t            }\n\t            else {\n\t                this.frameIndex(0);\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\t\n\t    /**\n\t     * get/set animation key\n\t     * @name animation\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {String} anim animation key\n\t     * @returns {String}\n\t     * @example\n\t     * // get animation key\n\t     * var animation = sprite.animation();\n\t     *\n\t     * // set animation key\n\t     * sprite.animation('kicking');\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\t\n\t    /**\n\t     * get/set animations map\n\t     * @name animations\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Object} animations\n\t     * @returns {Object}\n\t     * @example\n\t     * // get animations map\n\t     * var animations = sprite.animations();\n\t     *\n\t     * // set animations map\n\t     * sprite.animations({\n\t     *   standing: [\n\t     *     // x, y, width, height (6 frames)\n\t     *     0, 0, 49, 109,\n\t     *     52, 0, 49, 109,\n\t     *     105, 0, 49, 109,\n\t     *     158, 0, 49, 109,\n\t     *     210, 0, 49, 109,\n\t     *     262, 0, 49, 109\n\t     *   ],\n\t     *   kicking: [\n\t     *     // x, y, width, height (6 frames)\n\t     *     0, 109, 45, 98,\n\t     *     45, 109, 45, 98,\n\t     *     95, 109, 63, 98,\n\t     *     156, 109, 70, 98,\n\t     *     229, 109, 60, 98,\n\t     *     287, 109, 41, 98\n\t     *   ]\n\t     * });\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\t\n\t    /**\n\t    * get/set offsets map\n\t    * @name offsets\n\t    * @method\n\t    * @memberof Konva.Sprite.prototype\n\t    * @param {Object} offsets\n\t    * @returns {Object}\n\t    * @example\n\t    * // get offsets map\n\t    * var offsets = sprite.offsets();\n\t    *\n\t    * // set offsets map\n\t    * sprite.offsets({\n\t    *   standing: [\n\t    *     // x, y (6 frames)\n\t    *     0, 0,\n\t    *     0, 0,\n\t    *     5, 0,\n\t    *     0, 0,\n\t    *     0, 3,\n\t    *     2, 0\n\t    *   ],\n\t    *   kicking: [\n\t    *     // x, y (6 frames)\n\t    *     0, 5,\n\t    *     5, 0,\n\t    *     10, 0,\n\t    *     0, 0,\n\t    *     2, 1,\n\t    *     0, 0\n\t    *   ]\n\t    * });\n\t    */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\t\n\t    /**\n\t     * get/set image\n\t     * @name image\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Image} image\n\t     * @returns {Image}\n\t     * @example\n\t     * // get image\n\t     * var image = sprite.image();\n\t     *\n\t     * // set image\n\t     * sprite.image(imageObj);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Sprite, 'frameIndex', 0);\n\t\n\t    /**\n\t     * set/set animation frame index\n\t     * @name frameIndex\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Integer} frameIndex\n\t     * @returns {Integer}\n\t     * @example\n\t     * // get animation frame index\n\t     * var frameIndex = sprite.frameIndex();\n\t     *\n\t     * // set animation frame index\n\t     * sprite.frameIndex(3);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Sprite, 'frameRate', 17);\n\t\n\t    /**\n\t     * get/set frame rate in frames per second.  Increase this number to make the sprite\n\t     *  animation run faster, and decrease the number to make the sprite animation run slower\n\t     *  The default is 17 frames per second\n\t     * @name frameRate\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Integer} frameRate\n\t     * @returns {Integer}\n\t     * @example\n\t     * // get frame rate\n\t     * var frameRate = sprite.frameRate();\n\t     *\n\t     * // set frame rate to 2 frames per second\n\t     * sprite.frameRate(2);\n\t     */\n\t\n\t    Konva.Factory.backCompat(Konva.Sprite, {\n\t        index: 'frameIndex',\n\t        getIndex: 'getFrameIndex',\n\t        setIndex: 'setFrameIndex'\n\t    });\n\t\n\t    Konva.Collection.mapMethods(Konva.Sprite);\n\t})();\n\t\n\t/*eslint-disable  no-shadow, max-len, max-depth */\n\t(function () {\n\t    'use strict';\n\t    /**\n\t     * Path constructor.\n\t     * @author Jason Follas\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} config.data SVG data string\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var path = new Konva.Path({\n\t     *   x: 240,\n\t     *   y: 40,\n\t     *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n\t     *   fill: 'green',\n\t     *   scale: 2\n\t     * });\n\t     */\n\t    Konva.Path = function (config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Path.prototype = {\n\t        ___init: function (config) {\n\t            this.dataArray = [];\n\t            var that = this;\n\t\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Path';\n\t\n\t            this.dataArray = Konva.Path.parsePathData(this.getData());\n\t            this.on('dataChange.konva', function () {\n\t                that.dataArray = Konva.Path.parsePathData(this.getData());\n\t            });\n\t\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var ca = this.dataArray;\n\t\n\t            // context position\n\t            context.beginPath();\n\t            for (var n = 0; n < ca.length; n++) {\n\t                var c = ca[n].command;\n\t                var p = ca[n].points;\n\t                switch (c) {\n\t                    case 'L':\n\t                        context.lineTo(p[0], p[1]);\n\t                        break;\n\t                    case 'M':\n\t                        context.moveTo(p[0], p[1]);\n\t                        break;\n\t                    case 'C':\n\t                        context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n\t                        break;\n\t                    case 'Q':\n\t                        context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n\t                        break;\n\t                    case 'A':\n\t                        var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n\t\n\t                        var r = (rx > ry) ? rx : ry;\n\t                        var scaleX = (rx > ry) ? 1 : rx / ry;\n\t                        var scaleY = (rx > ry) ? ry / rx : 1;\n\t\n\t                        context.translate(cx, cy);\n\t                        context.rotate(psi);\n\t                        context.scale(scaleX, scaleY);\n\t                        context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n\t                        context.scale(1 / scaleX, 1 / scaleY);\n\t                        context.rotate(-psi);\n\t                        context.translate(-cx, -cy);\n\t\n\t                        break;\n\t                    case 'z':\n\t                        context.closePath();\n\t                        break;\n\t                }\n\t            }\n\t\n\t            context.fillStrokeShape(this);\n\t        },\n\t        getSelfRect: function() {\n\t            var points = [];\n\t            this.dataArray.forEach(function(data) {\n\t                points = points.concat(data.points);\n\t            });\n\t            var minX = points[0];\n\t            var maxX = points[0];\n\t            var minY = points[1];\n\t            var maxY = points[1];\n\t            var x, y;\n\t            for (var i = 0; i < points.length / 2; i++) {\n\t                x = points[i * 2]; y = points[i * 2 + 1];\n\t                minX = Math.min(minX, x);\n\t                maxX = Math.max(maxX, x);\n\t                minY = Math.min(minY, y);\n\t                maxY = Math.max(maxY, y);\n\t            }\n\t            return {\n\t                x: Math.round(minX),\n\t                y: Math.round(minY),\n\t                width: Math.round(maxX - minX),\n\t                height: Math.round(maxY - minY)\n\t            };\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Path, Konva.Shape);\n\t\n\t    Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n\t        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\t    };\n\t    Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n\t        if(fromX === undefined) {\n\t            fromX = P1x;\n\t        }\n\t        if(fromY === undefined) {\n\t            fromY = P1y;\n\t        }\n\t\n\t        var m = (P2y - P1y) / ((P2x - P1x) + 0.00000001);\n\t        var run = Math.sqrt(dist * dist / (1 + m * m));\n\t        if(P2x < P1x) {\n\t            run *= -1;\n\t        }\n\t        var rise = m * run;\n\t        var pt;\n\t\n\t        if (P2x === P1x) { // vertical line\n\t            pt = {\n\t                x: fromX,\n\t                y: fromY + rise\n\t            };\n\t        } else if((fromY - P1y) / ((fromX - P1x) + 0.00000001) === m) {\n\t            pt = {\n\t                x: fromX + run,\n\t                y: fromY + rise\n\t            };\n\t        }\n\t        else {\n\t            var ix, iy;\n\t\n\t            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n\t            if(len < 0.00000001) {\n\t                return undefined;\n\t            }\n\t            var u = (((fromX - P1x) * (P2x - P1x)) + ((fromY - P1y) * (P2y - P1y)));\n\t            u = u / (len * len);\n\t            ix = P1x + u * (P2x - P1x);\n\t            iy = P1y + u * (P2y - P1y);\n\t\n\t            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n\t            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n\t            run = Math.sqrt(pRun * pRun / (1 + m * m));\n\t            if(P2x < P1x) {\n\t                run *= -1;\n\t            }\n\t            rise = m * run;\n\t            pt = {\n\t                x: ix + run,\n\t                y: iy + rise\n\t            };\n\t        }\n\t\n\t        return pt;\n\t    };\n\t\n\t    Konva.Path.getPointOnCubicBezier = function(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n\t        function CB1(t) {\n\t            return t * t * t;\n\t        }\n\t        function CB2(t) {\n\t            return 3 * t * t * (1 - t);\n\t        }\n\t        function CB3(t) {\n\t            return 3 * t * (1 - t) * (1 - t);\n\t        }\n\t        function CB4(t) {\n\t            return (1 - t) * (1 - t) * (1 - t);\n\t        }\n\t        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n\t        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\t\n\t        return {\n\t            x: x,\n\t            y: y\n\t        };\n\t    };\n\t    Konva.Path.getPointOnQuadraticBezier = function(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n\t        function QB1(t) {\n\t            return t * t;\n\t        }\n\t        function QB2(t) {\n\t            return 2 * t * (1 - t);\n\t        }\n\t        function QB3(t) {\n\t            return (1 - t) * (1 - t);\n\t        }\n\t        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n\t        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\t\n\t        return {\n\t            x: x,\n\t            y: y\n\t        };\n\t    };\n\t    Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n\t        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n\t        var pt = {\n\t            x: rx * Math.cos(theta),\n\t            y: ry * Math.sin(theta)\n\t        };\n\t        return {\n\t            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n\t            y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n\t        };\n\t    };\n\t    /*\n\t     * get parsed data array from the data\n\t     *  string.  V, v, H, h, and l data are converted to\n\t     *  L data for the purpose of high performance Path\n\t     *  rendering\n\t     */\n\t    Konva.Path.parsePathData = function(data) {\n\t        // Path Data Segment must begin with a moveTo\n\t        //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n\t        //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n\t        //l (x y)+  Relative lineTo\n\t        //L (x y)+  Absolute LineTo\n\t        //h (x)+    Relative horizontal lineTo\n\t        //H (x)+    Absolute horizontal lineTo\n\t        //v (y)+    Relative vertical lineTo\n\t        //V (y)+    Absolute vertical lineTo\n\t        //z (closepath)\n\t        //Z (closepath)\n\t        //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n\t        //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n\t        //q (x1 y1 x y)+       Relative Quadratic Bezier\n\t        //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n\t        //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n\t        //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n\t        //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n\t        //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n\t        //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n\t        //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\t\n\t        // return early if data is not defined\n\t        if(!data) {\n\t            return [];\n\t        }\n\t\n\t        // command string\n\t        var cs = data;\n\t\n\t        // command chars\n\t        var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n\t        // convert white spaces to commas\n\t        cs = cs.replace(new RegExp(' ', 'g'), ',');\n\t        // create pipes so that we can split the data\n\t        for(var n = 0; n < cc.length; n++) {\n\t            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n\t        }\n\t        // create array\n\t        var arr = cs.split('|');\n\t        var ca = [];\n\t        // init context point\n\t        var cpx = 0;\n\t        var cpy = 0;\n\t        for( n = 1; n < arr.length; n++) {\n\t            var str = arr[n];\n\t            var c = str.charAt(0);\n\t            str = str.slice(1);\n\t            // remove ,- for consistency\n\t            str = str.replace(new RegExp(',-', 'g'), '-');\n\t            // add commas so that it's easy to split\n\t            str = str.replace(new RegExp('-', 'g'), ',-');\n\t            str = str.replace(new RegExp('e,-', 'g'), 'e-');\n\t            var p = str.split(',');\n\t            if(p.length > 0 && p[0] === '') {\n\t                p.shift();\n\t            }\n\t            // convert strings to floats\n\t            for(var i = 0; i < p.length; i++) {\n\t                p[i] = parseFloat(p[i]);\n\t            }\n\t            while(p.length > 0) {\n\t                if(isNaN(p[0])) {// case for a trailing comma before next command\n\t                    break;\n\t                }\n\t\n\t                var cmd = null;\n\t                var points = [];\n\t                var startX = cpx, startY = cpy;\n\t                // Move var from within the switch to up here (jshint)\n\t                var prevCmd, ctlPtx, ctlPty;     // Ss, Tt\n\t                var rx, ry, psi, fa, fs, x1, y1; // Aa\n\t\n\t\n\t                // convert l, H, h, V, and v to L\n\t                switch (c) {\n\t\n\t                    // Note: Keep the lineTo's above the moveTo's in this switch\n\t                    case 'l':\n\t                        cpx += p.shift();\n\t                        cpy += p.shift();\n\t                        cmd = 'L';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'L':\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t\n\t                    // Note: lineTo handlers need to be above this point\n\t                    case 'm':\n\t                        var dx = p.shift();\n\t                        var dy = p.shift();\n\t                        cpx += dx;\n\t                        cpy += dy;\n\t                        cmd = 'M';\n\t                        // After closing the path move the current position\n\t                        // to the the first point of the path (if any).\n\t                        if(ca.length > 2 && ca[ca.length - 1].command === 'z'){\n\t                            for(var idx = ca.length - 2; idx >= 0; idx--){\n\t                                if(ca[idx].command === 'M'){\n\t                                    cpx = ca[idx].points[0] + dx;\n\t                                    cpy = ca[idx].points[1] + dy;\n\t                                    break;\n\t                                }\n\t                            }\n\t                        }\n\t                        points.push(cpx, cpy);\n\t                        c = 'l';\n\t                        // subsequent points are treated as relative lineTo\n\t                        break;\n\t                    case 'M':\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        cmd = 'M';\n\t                        points.push(cpx, cpy);\n\t                        c = 'L';\n\t                        // subsequent points are treated as absolute lineTo\n\t                        break;\n\t\n\t                    case 'h':\n\t                        cpx += p.shift();\n\t                        cmd = 'L';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'H':\n\t                        cpx = p.shift();\n\t                        cmd = 'L';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'v':\n\t                        cpy += p.shift();\n\t                        cmd = 'L';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'V':\n\t                        cpy = p.shift();\n\t                        cmd = 'L';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'C':\n\t                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'c':\n\t                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n\t                        cpx += p.shift();\n\t                        cpy += p.shift();\n\t                        cmd = 'C';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'S':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        prevCmd = ca[ca.length - 1];\n\t                        if(prevCmd.command === 'C') {\n\t                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n\t                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n\t                        }\n\t                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        cmd = 'C';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 's':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        prevCmd = ca[ca.length - 1];\n\t                        if(prevCmd.command === 'C') {\n\t                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n\t                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n\t                        }\n\t                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n\t                        cpx += p.shift();\n\t                        cpy += p.shift();\n\t                        cmd = 'C';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'Q':\n\t                        points.push(p.shift(), p.shift());\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'q':\n\t                        points.push(cpx + p.shift(), cpy + p.shift());\n\t                        cpx += p.shift();\n\t                        cpy += p.shift();\n\t                        cmd = 'Q';\n\t                        points.push(cpx, cpy);\n\t                        break;\n\t                    case 'T':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        prevCmd = ca[ca.length - 1];\n\t                        if(prevCmd.command === 'Q') {\n\t                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n\t                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n\t                        }\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        cmd = 'Q';\n\t                        points.push(ctlPtx, ctlPty, cpx, cpy);\n\t                        break;\n\t                    case 't':\n\t                        ctlPtx = cpx;\n\t                        ctlPty = cpy;\n\t                        prevCmd = ca[ca.length - 1];\n\t                        if(prevCmd.command === 'Q') {\n\t                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n\t                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n\t                        }\n\t                        cpx += p.shift();\n\t                        cpy += p.shift();\n\t                        cmd = 'Q';\n\t                        points.push(ctlPtx, ctlPty, cpx, cpy);\n\t                        break;\n\t                    case 'A':\n\t                        rx = p.shift();\n\t                        ry = p.shift();\n\t                        psi = p.shift();\n\t                        fa = p.shift();\n\t                        fs = p.shift();\n\t                        x1 = cpx;\n\t                        y1 = cpy;\n\t                        cpx = p.shift();\n\t                        cpy = p.shift();\n\t                        cmd = 'A';\n\t                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n\t                        break;\n\t                    case 'a':\n\t                        rx = p.shift();\n\t                        ry = p.shift();\n\t                        psi = p.shift();\n\t                        fa = p.shift();\n\t                        fs = p.shift();\n\t                        x1 = cpx;\n\t                        y1 = cpy; cpx += p.shift();\n\t                        cpy += p.shift();\n\t                        cmd = 'A';\n\t                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n\t                        break;\n\t                }\n\t\n\t                ca.push({\n\t                    command: cmd || c,\n\t                    points: points,\n\t                    start: {\n\t                        x: startX,\n\t                        y: startY\n\t                    },\n\t                    pathLength: this.calcLength(startX, startY, cmd || c, points)\n\t                });\n\t            }\n\t\n\t            if(c === 'z' || c === 'Z') {\n\t                ca.push({\n\t                    command: 'z',\n\t                    points: [],\n\t                    start: undefined,\n\t                    pathLength: 0\n\t                });\n\t            }\n\t        }\n\t\n\t        return ca;\n\t    };\n\t    Konva.Path.calcLength = function(x, y, cmd, points) {\n\t        var len, p1, p2, t;\n\t        var path = Konva.Path;\n\t\n\t        switch (cmd) {\n\t            case 'L':\n\t                return path.getLineLength(x, y, points[0], points[1]);\n\t            case 'C':\n\t                // Approximates by breaking curve into 100 line segments\n\t                len = 0.0;\n\t                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n\t                for( t = 0.01; t <= 1; t += 0.01) {\n\t                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n\t                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t                    p1 = p2;\n\t                }\n\t                return len;\n\t            case 'Q':\n\t                // Approximates by breaking curve into 100 line segments\n\t                len = 0.0;\n\t                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n\t                for( t = 0.01; t <= 1; t += 0.01) {\n\t                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n\t                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t                    p1 = p2;\n\t                }\n\t                return len;\n\t            case 'A':\n\t                // Approximates by breaking curve into line segments\n\t                len = 0.0;\n\t                var start = points[4];\n\t                // 4 = theta\n\t                var dTheta = points[5];\n\t                // 5 = dTheta\n\t                var end = points[4] + dTheta;\n\t                var inc = Math.PI / 180.0;\n\t                // 1 degree resolution\n\t                if(Math.abs(start - end) < inc) {\n\t                    inc = Math.abs(start - end);\n\t                }\n\t                // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n\t                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n\t                if(dTheta < 0) {// clockwise\n\t                    for( t = start - inc; t > end; t -= inc) {\n\t                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n\t                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t                        p1 = p2;\n\t                    }\n\t                }\n\t                else {// counter-clockwise\n\t                    for( t = start + inc; t < end; t += inc) {\n\t                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n\t                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t                        p1 = p2;\n\t                    }\n\t                }\n\t                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n\t                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t\n\t                return len;\n\t        }\n\t\n\t        return 0;\n\t    };\n\t    Konva.Path.convertEndpointToCenterParameterization = function(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n\t        // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\t        var psi = psiDeg * (Math.PI / 180.0);\n\t        var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n\t        var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\t\n\t        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\t\n\t        if(lambda > 1) {\n\t            rx *= Math.sqrt(lambda);\n\t            ry *= Math.sqrt(lambda);\n\t        }\n\t\n\t        var f = Math.sqrt((((rx * rx) * (ry * ry)) - ((rx * rx) * (yp * yp)) - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp) + (ry * ry) * (xp * xp)));\n\t\n\t        if(fa === fs) {\n\t            f *= -1;\n\t        }\n\t        if(isNaN(f)) {\n\t            f = 0;\n\t        }\n\t\n\t        var cxp = f * rx * yp / ry;\n\t        var cyp = f * -ry * xp / rx;\n\t\n\t        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n\t        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\t\n\t        var vMag = function(v) {\n\t            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n\t        };\n\t        var vRatio = function(u, v) {\n\t            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n\t        };\n\t        var vAngle = function(u, v) {\n\t            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n\t        };\n\t        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n\t        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n\t        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n\t        var dTheta = vAngle(u, v);\n\t\n\t        if(vRatio(u, v) <= -1) {\n\t            dTheta = Math.PI;\n\t        }\n\t        if(vRatio(u, v) >= 1) {\n\t            dTheta = 0;\n\t        }\n\t        if(fs === 0 && dTheta > 0) {\n\t            dTheta = dTheta - 2 * Math.PI;\n\t        }\n\t        if(fs === 1 && dTheta < 0) {\n\t            dTheta = dTheta + 2 * Math.PI;\n\t        }\n\t        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n\t    };\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\t\n\t    /**\n\t     * set SVG path data string.  This method\n\t     *  also automatically parses the data string\n\t     *  into a data array.  Currently supported SVG data:\n\t     *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n\t     * @name setData\n\t     * @method\n\t     * @memberof Konva.Path.prototype\n\t     * @param {String} SVG path command string\n\t     */\n\t\n\t    /**\n\t     * get SVG path data string\n\t     * @name getData\n\t     * @method\n\t     * @memberof Konva.Path.prototype\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Path);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    var EMPTY_STRING = '',\n\t        //CALIBRI = 'Calibri',\n\t        NORMAL = 'normal';\n\t\n\t    /**\n\t     * Path constructor.\n\t     * @author Jason Follas\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} [config.fontFamily] default is Calibri\n\t     * @param {Number} [config.fontSize] default is 12\n\t     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n\t     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n\t     * @param {String} config.text\n\t     * @param {String} config.data SVG data string\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var textpath = new Konva.TextPath({\n\t     *   x: 100,\n\t     *   y: 50,\n\t     *   fill: '#333',\n\t     *   fontSize: '24',\n\t     *   fontFamily: 'Arial',\n\t     *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n\t     *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50'\n\t     * });\n\t     */\n\t    Konva.TextPath = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    function _fillFunc(context) {\n\t        context.fillText(this.partialText, 0, 0);\n\t    }\n\t    function _strokeFunc(context) {\n\t        context.strokeText(this.partialText, 0, 0);\n\t    }\n\t\n\t    Konva.TextPath.prototype = {\n\t        ___init: function(config) {\n\t            var that = this;\n\t            this.dummyCanvas = Konva.Util.createCanvasElement();\n\t            this.dataArray = [];\n\t\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t\n\t            // overrides\n\t            // TODO: shouldn't this be on the prototype?\n\t            this._fillFunc = _fillFunc;\n\t            this._strokeFunc = _strokeFunc;\n\t            this._fillFuncHit = _fillFunc;\n\t            this._strokeFuncHit = _strokeFunc;\n\t\n\t            this.className = 'TextPath';\n\t\n\t            this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n\t            this.on('dataChange.konva', function() {\n\t                that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n\t                that._setTextData();\n\t            });\n\t\n\t            // update text data for certain attr changes\n\t            this.on('textChange.konva letterSpacingChange.konva', that._setTextData);\n\t            that._setTextData();\n\t            this.sceneFunc(this._sceneFunc);\n\t            this.hitFunc(this._hitFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            context.setAttr('font', this._getContextFont());\n\t            context.setAttr(this.getTextBaseline(), 'middle');\n\t            context.setAttr('textAlign', 'left');\n\t            context.save();\n\t\n\t            var glyphInfo = this.glyphInfo;\n\t            for(var i = 0; i < glyphInfo.length; i++) {\n\t                context.save();\n\t\n\t                var p0 = glyphInfo[i].p0;\n\t\n\t                context.translate(p0.x, p0.y);\n\t                context.rotate(glyphInfo[i].rotation);\n\t                this.partialText = glyphInfo[i].text;\n\t\n\t                context.fillStrokeShape(this);\n\t                context.restore();\n\t\n\t                //// To assist with debugging visually, uncomment following\n\t                // context.beginPath();\n\t                // if (i % 2)\n\t                // context.strokeStyle = 'cyan';\n\t                // else\n\t                // context.strokeStyle = 'green';\n\t                // var p1 = glyphInfo[i].p1;\n\t                // context.moveTo(p0.x, p0.y);\n\t                // context.lineTo(p1.x, p1.y);\n\t                // context.stroke();\n\t            }\n\t            context.restore();\n\t        },\n\t        _hitFunc: function(context) {\n\t          context.beginPath();\n\t\n\t          var glyphInfo = this.glyphInfo;\n\t          if (glyphInfo.length >= 1) {\n\t            var p0 = glyphInfo[0].p0;\n\t            context.moveTo(p0.x, p0.y);\n\t          }\n\t          for(var i = 0; i < glyphInfo.length; i++) {\n\t              var p1 = glyphInfo[i].p1;\n\t              context.lineTo(p1.x, p1.y);\n\t          }\n\t          context.setAttr('lineWidth', this.getFontSize());\n\t          context.setAttr('strokeStyle', this.colorKey);\n\t          context.stroke();\n\t        },\n\t        /**\n\t         * get text width in pixels\n\t         * @method\n\t         * @memberof Konva.TextPath.prototype\n\t         */\n\t        getTextWidth: function() {\n\t            return this.textWidth;\n\t        },\n\t        /**\n\t         * get text height in pixels\n\t         * @method\n\t         * @memberof Konva.TextPath.prototype\n\t         */\n\t        getTextHeight: function() {\n\t            return this.textHeight;\n\t        },\n\t        /**\n\t         * set text\n\t         * @method\n\t         * @memberof Konva.TextPath.prototype\n\t         * @param {String} text\n\t         */\n\t        setText: function(text) {\n\t            Konva.Text.prototype.setText.call(this, text);\n\t        },\n\t        _getTextSize: function(text) {\n\t            var dummyCanvas = this.dummyCanvas;\n\t            var _context = dummyCanvas.getContext('2d');\n\t\n\t            _context.save();\n\t\n\t            _context.font = this._getContextFont();\n\t            var metrics = _context.measureText(text);\n\t\n\t            _context.restore();\n\t\n\t            return {\n\t                width: metrics.width,\n\t                height: parseInt(this.attrs.fontSize, 10)\n\t            };\n\t        },\n\t        _setTextData: function() {\n\t\n\t            var that = this;\n\t            var size = this._getTextSize(this.attrs.text);\n\t            var letterSpacing = this.getLetterSpacing();\n\t\n\t            this.textWidth = size.width;\n\t            this.textHeight = size.height;\n\t\n\t            this.glyphInfo = [];\n\t\n\t            var charArr = this.getText().split('');\n\t\n\t            var p0, p1, pathCmd;\n\t\n\t            var pIndex = -1;\n\t            var currentT = 0;\n\t\n\t            var getNextPathSegment = function() {\n\t                currentT = 0;\n\t                var pathData = that.dataArray;\n\t\n\t                for(var j = pIndex + 1; j < pathData.length; j++) {\n\t                    if(pathData[j].pathLength > 0) {\n\t                        pIndex = j;\n\t\n\t                        return pathData[j];\n\t                    }\n\t                    else if(pathData[j].command === 'M') {\n\t                        p0 = {\n\t                            x: pathData[j].points[0],\n\t                            y: pathData[j].points[1]\n\t                        };\n\t                    }\n\t                }\n\t\n\t                return {};\n\t            };\n\t            var findSegmentToFitCharacter = function(c) {\n\t\n\t                var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\t\n\t                var currLen = 0;\n\t                var attempts = 0;\n\t\n\t                p1 = undefined;\n\t                while(Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 && attempts < 25) {\n\t                    attempts++;\n\t                    var cumulativePathLength = currLen;\n\t                    while(pathCmd === undefined) {\n\t                        pathCmd = getNextPathSegment();\n\t\n\t                        if(pathCmd && cumulativePathLength + pathCmd.pathLength < glyphWidth) {\n\t                            cumulativePathLength += pathCmd.pathLength;\n\t                            pathCmd = undefined;\n\t                        }\n\t                    }\n\t\n\t                    if(pathCmd === {} || p0 === undefined) {\n\t                        return undefined;\n\t                    }\n\t\n\t                    var needNewSegment = false;\n\t\n\t                    switch (pathCmd.command) {\n\t                        case 'L':\n\t                            if(Konva.Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {\n\t                                p1 = Konva.Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);\n\t                            }\n\t                            else {\n\t                                pathCmd = undefined;\n\t                            }\n\t                            break;\n\t                        case 'A':\n\t\n\t                            var start = pathCmd.points[4];\n\t                            // 4 = theta\n\t                            var dTheta = pathCmd.points[5];\n\t                            // 5 = dTheta\n\t                            var end = pathCmd.points[4] + dTheta;\n\t\n\t                            if(currentT === 0){\n\t                                currentT = start + 0.00000001;\n\t                            }\n\t                            // Just in case start is 0\n\t                            else if(glyphWidth > currLen) {\n\t                                currentT += (Math.PI / 180.0) * dTheta / Math.abs(dTheta);\n\t                            }\n\t                            else {\n\t                                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);\n\t                            }\n\t\n\t                            // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n\t                            // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n\t                            if(dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {\n\t                                currentT = end;\n\t                                needNewSegment = true;\n\t                            }\n\t                            p1 = Konva.Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);\n\t                            break;\n\t                        case 'C':\n\t                            if(currentT === 0) {\n\t                                if(glyphWidth > pathCmd.pathLength) {\n\t                                    currentT = 0.00000001;\n\t                                }\n\t                                else {\n\t                                    currentT = glyphWidth / pathCmd.pathLength;\n\t                                }\n\t                            }\n\t                            else if(glyphWidth > currLen) {\n\t                                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n\t                            }\n\t                            else {\n\t                                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n\t                            }\n\t\n\t                            if(currentT > 1.0) {\n\t                                currentT = 1.0;\n\t                                needNewSegment = true;\n\t                            }\n\t                            p1 = Konva.Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);\n\t                            break;\n\t                        case 'Q':\n\t                            if(currentT === 0) {\n\t                                currentT = glyphWidth / pathCmd.pathLength;\n\t                            }\n\t                            else if(glyphWidth > currLen) {\n\t                                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n\t                            }\n\t                            else {\n\t                                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n\t                            }\n\t\n\t                            if(currentT > 1.0) {\n\t                                currentT = 1.0;\n\t                                needNewSegment = true;\n\t                            }\n\t                            p1 = Konva.Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);\n\t                            break;\n\t\n\t                    }\n\t\n\t                    if(p1 !== undefined) {\n\t                        currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\t                    }\n\t\n\t                    if(needNewSegment) {\n\t                        needNewSegment = false;\n\t                        pathCmd = undefined;\n\t                    }\n\t                }\n\t            };\n\t            for(var i = 0; i < charArr.length; i++) {\n\t\n\t                // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n\t                findSegmentToFitCharacter(charArr[i]);\n\t\n\t                if(p0 === undefined || p1 === undefined) {\n\t                    break;\n\t                }\n\t\n\t                var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\t\n\t                // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n\t                // Can foresee having a rough pair table built in that the developer can override as needed.\n\t\n\t                var kern = 0;\n\t                // placeholder for future implementation\n\t\n\t                var midpoint = Konva.Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);\n\t\n\t                var rotation = Math.atan2((p1.y - p0.y), (p1.x - p0.x));\n\t                this.glyphInfo.push({\n\t                    transposeX: midpoint.x,\n\t                    transposeY: midpoint.y,\n\t                    text: charArr[i],\n\t                    rotation: rotation,\n\t                    p0: p0,\n\t                    p1: p1\n\t                });\n\t                p0 = p1;\n\t            }\n\t        },\n\t        getSelfRect: function() {\n\t            var points = [];\n\t            var fontSize = this.fontSize();\n\t\n\t            this.glyphInfo.forEach(function(info) {\n\t                points.push(info.p0.x);\n\t                points.push(info.p0.y);\n\t                points.push(info.p1.x);\n\t                points.push(info.p1.y);\n\t            });\n\t            var minX = points[0];\n\t            var maxX = points[0];\n\t            var minY = points[0];\n\t            var maxY = points[0];\n\t            var x, y;\n\t            for (var i = 0; i < points.length / 2; i++) {\n\t                x = points[i * 2]; y = points[i * 2 + 1];\n\t                minX = Math.min(minX, x);\n\t                maxX = Math.max(maxX, x);\n\t                minY = Math.min(minY, y);\n\t                maxY = Math.max(maxY, y);\n\t            }\n\t            return {\n\t                x: Math.round(minX) - fontSize,\n\t                y: Math.round(minY) - fontSize,\n\t                width: Math.round(maxX - minX) + fontSize * 2,\n\t                height: Math.round(maxY - minY) + fontSize * 2\n\t            };\n\t        }\n\t    };\n\t\n\t    // map TextPath methods to Text\n\t    Konva.TextPath.prototype._getContextFont = Konva.Text.prototype._getContextFont;\n\t\n\t    Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\t\n\t    // add setters and getters\n\t    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\t\n\t    /**\n\t     * set font family\n\t     * @name setFontFamily\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {String} fontFamily\n\t     */\n\t\n\t     /**\n\t     * get font family\n\t     * @name getFontFamily\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontSize', 12);\n\t\n\t    /**\n\t     * set font size\n\t     * @name setFontSize\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {int} fontSize\n\t     */\n\t\n\t     /**\n\t     * get font size\n\t     * @name getFontSize\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\t\n\t    /**\n\t     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n\t     * @name setFontStyle\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {String} fontStyle\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.TextPath, 'letterSpacing', 0);\n\t\n\t     /**\n\t      * set letter spacing property. Default value is 0.\n\t      * @name letterSpacing\n\t      * @method\n\t      * @memberof Konva.TextPath.prototype\n\t      * @param {Number} letterSpacing\n\t      */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\t\n\t     /**\n\t      * set textBaseline property. Default value is 'middle'.\n\t      * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n\t      * @name textBaseline\n\t      * @method\n\t      * @memberof Konva.TextPath.prototype\n\t      * @param {Number} textBaseline\n\t      */\n\t\n\t     /**\n\t     * get font style\n\t     * @name getFontStyle\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\t\n\t\n\t\n\t    /**\n\t     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n\t     * @name setFontVariant\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {String} fontVariant\n\t     */\n\t\n\t    /**\n\t     * @get font variant\n\t     * @name getFontVariant\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\t\n\t    /**\n\t     * get text\n\t     * @name getText\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.TextPath);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.sides\n\t     * @param {Number} config.radius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var hexagon = new Konva.RegularPolygon({\n\t     *   x: 100,\n\t     *   y: 200,\n\t     *   sides: 6,\n\t     *   radius: 70,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 4\n\t     * });\n\t     */\n\t    Konva.RegularPolygon = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.RegularPolygon.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'RegularPolygon';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var sides = this.attrs.sides,\n\t                radius = this.attrs.radius,\n\t                n, x, y;\n\t\n\t            context.beginPath();\n\t            context.moveTo(0, 0 - radius);\n\t\n\t            for(n = 1; n < sides; n++) {\n\t                x = radius * Math.sin(n * 2 * Math.PI / sides);\n\t                y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n\t                context.lineTo(x, y);\n\t            }\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        getWidth: function() {\n\t            return this.getRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            if (this.radius() !== width / 2) {\n\t                this.setRadius(width / 2);\n\t            }\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            if (this.radius() !== height / 2) {\n\t                this.setRadius(height / 2);\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'radius', 0);\n\t\n\t    /**\n\t     * set radius\n\t     * @name setRadius\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     * @param {Number} radius\n\t     */\n\t\n\t     /**\n\t     * get radius\n\t     * @name getRadius\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'sides', 0);\n\t\n\t    /**\n\t     * set number of sides\n\t     * @name setSides\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     * @param {int} sides\n\t     */\n\t\n\t    /**\n\t     * get number of sides\n\t     * @name getSides\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.RegularPolygon);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Star constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Integer} config.numPoints\n\t     * @param {Number} config.innerRadius\n\t     * @param {Number} config.outerRadius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var star = new Konva.Star({\n\t     *   x: 100,\n\t     *   y: 200,\n\t     *   numPoints: 5,\n\t     *   innerRadius: 70,\n\t     *   outerRadius: 70,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 4\n\t     * });\n\t     */\n\t    Konva.Star = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Star.prototype = {\n\t        _centroid: true,\n\t        ___init: function(config) {\n\t            // call super constructor\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Star';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var innerRadius = this.innerRadius(),\n\t                outerRadius = this.outerRadius(),\n\t                numPoints = this.numPoints();\n\t\n\t            context.beginPath();\n\t            context.moveTo(0, 0 - outerRadius);\n\t\n\t            for(var n = 1; n < numPoints * 2; n++) {\n\t                var radius = n % 2 === 0 ? outerRadius : innerRadius;\n\t                var x = radius * Math.sin(n * Math.PI / numPoints);\n\t                var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n\t                context.lineTo(x, y);\n\t            }\n\t            context.closePath();\n\t\n\t            context.fillStrokeShape(this);\n\t        },\n\t        // implements Shape.prototype.getWidth()\n\t        getWidth: function() {\n\t            return this.getOuterRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.getHeight()\n\t        getHeight: function() {\n\t            return this.getOuterRadius() * 2;\n\t        },\n\t        // implements Shape.prototype.setWidth()\n\t        setWidth: function(width) {\n\t            Konva.Node.prototype.setWidth.call(this, width);\n\t            if (this.outerRadius() !== width / 2) {\n\t                this.setOuterRadius(width / 2);\n\t            }\n\t        },\n\t        // implements Shape.prototype.setHeight()\n\t        setHeight: function(height) {\n\t            Konva.Node.prototype.setHeight.call(this, height);\n\t            if (this.outerRadius() !== height / 2) {\n\t                this.setOuterRadius(height / 2);\n\t            }\n\t        }\n\t    };\n\t    Konva.Util.extend(Konva.Star, Konva.Shape);\n\t\n\t    // add getters setters\n\t    Konva.Factory.addGetterSetter(Konva.Star, 'numPoints', 5);\n\t\n\t    /**\n\t     * set number of points\n\t     * @name setNumPoints\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     * @param {Integer} points\n\t     */\n\t\n\t     /**\n\t     * get number of points\n\t     * @name getNumPoints\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Star, 'innerRadius', 0);\n\t\n\t    /**\n\t     * set inner radius\n\t     * @name setInnerRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     * @param {Number} radius\n\t     */\n\t\n\t     /**\n\t     * get inner radius\n\t     * @name getInnerRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Star, 'outerRadius', 0);\n\t\n\t    /**\n\t     * set outer radius\n\t     * @name setOuterRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     * @param {Number} radius\n\t     */\n\t\n\t     /**\n\t     * get outer radius\n\t     * @name getOuterRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Star);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    // constants\n\t    var ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text'],\n\t        CHANGE_KONVA = 'Change.konva',\n\t        NONE = 'none',\n\t        UP = 'up',\n\t        RIGHT = 'right',\n\t        DOWN = 'down',\n\t        LEFT = 'left',\n\t        LABEL = 'Label',\n\t\n\t     // cached variables\n\t     attrChangeListLen = ATTR_CHANGE_LIST.length;\n\t\n\t    /**\n\t     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // create label\n\t     * var label = new Konva.Label({\n\t     *   x: 100,\n\t     *   y: 100,\n\t     *   draggable: true\n\t     * });\n\t     *\n\t     * // add a tag to the label\n\t     * label.add(new Konva.Tag({\n\t     *   fill: '#bbb',\n\t     *   stroke: '#333',\n\t     *   shadowColor: 'black',\n\t     *   shadowBlur: 10,\n\t     *   shadowOffset: [10, 10],\n\t     *   shadowOpacity: 0.2,\n\t     *   lineJoin: 'round',\n\t     *   pointerDirection: 'up',\n\t     *   pointerWidth: 20,\n\t     *   pointerHeight: 20,\n\t     *   cornerRadius: 5\n\t     * }));\n\t     *\n\t     * // add text to the label\n\t     * label.add(new Konva.Text({\n\t     *   text: 'Hello World!',\n\t     *   fontSize: 50,\n\t     *   lineHeight: 1.2,\n\t     *   padding: 10,\n\t     *   fill: 'green'\n\t     *  }));\n\t     */\n\t    Konva.Label = function(config) {\n\t        this.____init(config);\n\t    };\n\t\n\t    Konva.Label.prototype = {\n\t        ____init: function(config) {\n\t            var that = this;\n\t\n\t            Konva.Group.call(this, config);\n\t            this.className = LABEL;\n\t\n\t            this.on('add.konva', function(evt) {\n\t                that._addListeners(evt.child);\n\t                that._sync();\n\t            });\n\t        },\n\t        /**\n\t         * get Text shape for the label.  You need to access the Text shape in order to update\n\t         * the text properties\n\t         * @name getText\n\t         * @method\n\t         * @memberof Konva.Label.prototype\n\t         */\n\t        getText: function() {\n\t            return this.find('Text')[0];\n\t        },\n\t        /**\n\t         * get Tag shape for the label.  You need to access the Tag shape in order to update\n\t         * the pointer properties and the corner radius\n\t         * @name getTag\n\t         * @method\n\t         * @memberof Konva.Label.prototype\n\t         */\n\t        getTag: function() {\n\t            return this.find('Tag')[0];\n\t        },\n\t        _addListeners: function(text) {\n\t            var that = this,\n\t                n;\n\t            var func = function(){\n\t                    that._sync();\n\t                };\n\t\n\t            // update text data for certain attr changes\n\t            for(n = 0; n < attrChangeListLen; n++) {\n\t                text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n\t            }\n\t        },\n\t        getWidth: function() {\n\t            return this.getText().getWidth();\n\t        },\n\t        getHeight: function() {\n\t            return this.getText().getHeight();\n\t        },\n\t        _sync: function() {\n\t            var text = this.getText(),\n\t                tag = this.getTag(),\n\t                width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n\t\n\t            if (text && tag) {\n\t                width = text.getWidth();\n\t                height = text.getHeight();\n\t                pointerDirection = tag.getPointerDirection();\n\t                pointerWidth = tag.getPointerWidth();\n\t                pointerHeight = tag.getPointerHeight();\n\t                x = 0;\n\t                y = 0;\n\t\n\t                switch(pointerDirection) {\n\t                    case UP:\n\t                        x = width / 2;\n\t                        y = -1 * pointerHeight;\n\t                        break;\n\t                    case RIGHT:\n\t                        x = width + pointerWidth;\n\t                        y = height / 2;\n\t                        break;\n\t                    case DOWN:\n\t                        x = width / 2;\n\t                        y = height + pointerHeight;\n\t                        break;\n\t                    case LEFT:\n\t                        x = -1 * pointerWidth;\n\t                        y = height / 2;\n\t                        break;\n\t                }\n\t\n\t                tag.setAttrs({\n\t                    x: -1 * x,\n\t                    y: -1 * y,\n\t                    width: width,\n\t                    height: height\n\t                });\n\t\n\t                text.setAttrs({\n\t                    x: -1 * x,\n\t                    y: -1 * y\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Konva.Util.extend(Konva.Label, Konva.Group);\n\t\n\t    Konva.Collection.mapMethods(Konva.Label);\n\t\n\t    /**\n\t     * Tag constructor.&nbsp; A Tag can be configured\n\t     *  to have a pointer element that points up, right, down, or left\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @param {Object} config\n\t     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n\t     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n\t     * @param {Number} [config.pointerWidth]\n\t     * @param {Number} [config.pointerHeight]\n\t     * @param {Number} [config.cornerRadius]\n\t     */\n\t    Konva.Tag = function(config) {\n\t        this.___init(config);\n\t    };\n\t\n\t    Konva.Tag.prototype = {\n\t        ___init: function(config) {\n\t            Konva.Shape.call(this, config);\n\t            this.className = 'Tag';\n\t            this.sceneFunc(this._sceneFunc);\n\t        },\n\t        _sceneFunc: function(context) {\n\t            var width = this.getWidth(),\n\t                height = this.getHeight(),\n\t                pointerDirection = this.getPointerDirection(),\n\t                pointerWidth = this.getPointerWidth(),\n\t                pointerHeight = this.getPointerHeight(),\n\t                cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\t\n\t            context.beginPath();\n\t            if (!cornerRadius) {\n\t                context.moveTo(0, 0);\n\t            } else {\n\t                context.moveTo(cornerRadius, 0);\n\t            }\n\t\n\t            if (pointerDirection === UP) {\n\t                context.lineTo((width - pointerWidth) / 2, 0);\n\t                context.lineTo(width / 2, -1 * pointerHeight);\n\t                context.lineTo((width + pointerWidth) / 2, 0);\n\t            }\n\t\n\t            if(!cornerRadius) {\n\t                context.lineTo(width, 0);\n\t            } else {\n\t                context.lineTo(width - cornerRadius, 0);\n\t                context.arc(width - cornerRadius, cornerRadius, cornerRadius, Math.PI * 3 / 2, 0, false);\n\t            }\n\t\n\t            if (pointerDirection === RIGHT) {\n\t                context.lineTo(width, (height - pointerHeight) / 2);\n\t                context.lineTo(width + pointerWidth, height / 2);\n\t                context.lineTo(width, (height + pointerHeight) / 2);\n\t            }\n\t\n\t            if(!cornerRadius) {\n\t                context.lineTo(width, height);\n\t            } else {\n\t                context.lineTo(width, height - cornerRadius);\n\t                context.arc(width - cornerRadius, height - cornerRadius, cornerRadius, 0, Math.PI / 2, false);\n\t            }\n\t\n\t            if (pointerDirection === DOWN) {\n\t                context.lineTo((width + pointerWidth) / 2, height);\n\t                context.lineTo(width / 2, height + pointerHeight);\n\t                context.lineTo((width - pointerWidth) / 2, height);\n\t            }\n\t\n\t            if(!cornerRadius) {\n\t                context.lineTo(0, height);\n\t            } else {\n\t                context.lineTo(cornerRadius, height);\n\t                context.arc(cornerRadius, height - cornerRadius, cornerRadius, Math.PI / 2, Math.PI, false);\n\t            }\n\t\n\t            if (pointerDirection === LEFT) {\n\t                context.lineTo(0, (height + pointerHeight) / 2);\n\t                context.lineTo(-1 * pointerWidth, height / 2);\n\t                context.lineTo(0, (height - pointerHeight) / 2);\n\t            }\n\t\n\t            if(cornerRadius) {\n\t                context.lineTo(0, cornerRadius);\n\t                context.arc(cornerRadius, cornerRadius, cornerRadius, Math.PI, Math.PI * 3 / 2, false);\n\t            }\n\t\n\t            context.closePath();\n\t            context.fillStrokeShape(this);\n\t        },\n\t        getSelfRect: function() {\n\t            var x = 0,\n\t                y = 0,\n\t                pointerWidth = this.getPointerWidth(),\n\t                pointerHeight = this.getPointerHeight(),\n\t                direction = this.pointerDirection(),\n\t                width = this.getWidth(),\n\t                height = this.getHeight();\n\t\n\t            if (direction === UP) {\n\t                y -= pointerHeight;\n\t                height += pointerHeight;\n\t            } else if (direction === DOWN) {\n\t                height += pointerHeight;\n\t            } else if (direction === LEFT) {\n\t                // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n\t                x -= pointerWidth * 1.5;\n\t                width += pointerWidth;\n\t            } else if (direction === RIGHT) {\n\t                width += pointerWidth * 1.5;\n\t            }\n\t            return {\n\t                x: x,\n\t                y: y,\n\t                width: width,\n\t                height: height\n\t            };\n\t        }\n\t    };\n\t\n\t    Konva.Util.extend(Konva.Tag, Konva.Shape);\n\t    Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\t\n\t    /**\n\t     * set pointer Direction\n\t     * @name setPointerDirection\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {String} pointerDirection can be up, right, down, left, or none.  The\n\t     *  default is none\n\t     */\n\t\n\t     /**\n\t     * get pointer Direction\n\t     * @name getPointerDirection\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Tag, 'pointerWidth', 0);\n\t\n\t    /**\n\t     * set pointer width\n\t     * @name setPointerWidth\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {Number} pointerWidth\n\t     */\n\t\n\t     /**\n\t     * get pointer width\n\t     * @name getPointerWidth\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Tag, 'pointerHeight', 0);\n\t\n\t    /**\n\t     * set pointer height\n\t     * @name setPointerHeight\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {Number} pointerHeight\n\t     */\n\t\n\t     /**\n\t     * get pointer height\n\t     * @name getPointerHeight\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Tag, 'cornerRadius', 0);\n\t\n\t    /**\n\t     * set corner radius\n\t     * @name setCornerRadius\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {Number} corner radius\n\t     */\n\t\n\t    /**\n\t     * get corner radius\n\t     * @name getCornerRadius\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t    Konva.Collection.mapMethods(Konva.Tag);\n\t})();\n\t\n\t(function() {\n\t    'use strict';\n\t    /**\n\t     * Arrow constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Array} config.points\n\t     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n\t     *   The default is 0\n\t     * @param {Number} config.pointerLength\n\t     * @param {Number} config.pointerWidth\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var line = new Konva.Line({\n\t     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n\t     *   stroke: 'red',\n\t     *   tension: 1,\n\t     *   pointerLength : 10,\n\t     *   pointerWidth : 12\n\t     * });\n\t     */\n\t    Konva.Arrow = function(config) {\n\t        this.____init(config);\n\t    };\n\t\n\t    Konva.Arrow.prototype = {\n\t        ____init: function(config) {\n\t            // call super constructor\n\t            Konva.Line.call(this, config);\n\t            this.className = 'Arrow';\n\t        },\n\t        _sceneFunc: function(ctx) {\n\t            Konva.Line.prototype._sceneFunc.apply(this, arguments);\n\t            var PI2 = Math.PI * 2;\n\t            var points = this.points();\n\t            var n = points.length;\n\t            var dx = points[n - 2] - points[n - 4];\n\t            var dy = points[n - 1] - points[n - 3];\n\t            var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n\t            var length = this.pointerLength();\n\t            var width = this.pointerWidth();\n\t\n\t            ctx.save();\n\t            ctx.beginPath();\n\t            ctx.translate(points[n - 2], points[n - 1]);\n\t            ctx.rotate(radians);\n\t            ctx.moveTo(0, 0);\n\t            ctx.lineTo(-length, width / 2);\n\t            ctx.lineTo(-length, -width / 2);\n\t            ctx.closePath();\n\t            ctx.restore();\n\t\n\t            if (this.pointerAtBeginning()) {\n\t                ctx.save();\n\t                ctx.translate(points[0], points[1]);\n\t                dx = points[2] - points[0];\n\t                dy = points[3] - points[1];\n\t                ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n\t                ctx.moveTo(0, 0);\n\t                ctx.lineTo(-length, width / 2);\n\t                ctx.lineTo(-length, -width / 2);\n\t                ctx.closePath();\n\t                ctx.restore();\n\t            }\n\t            ctx.fillStrokeShape(this);\n\t        }\n\t    };\n\t\n\t    Konva.Util.extend(Konva.Arrow, Konva.Line);\n\t    /**\n\t     * get/set pointerLength\n\t     * @name pointerLength\n\t     * @method\n\t     * @memberof Konva.Arrow.prototype\n\t     * @param {Number} Length of pointer of arrow.\n\t     *   The default is 10.\n\t     * @returns {Number}\n\t     * @example\n\t     * // get tension\n\t     * var pointerLength = line.pointerLength();\n\t     *\n\t     * // set tension\n\t     * line.pointerLength(15);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerLength', 10);\n\t    /**\n\t     * get/set pointerWidth\n\t     * @name pointerWidth\n\t     * @method\n\t     * @memberof Konva.Arrow.prototype\n\t     * @param {Number} Width of pointer of arrow.\n\t     *   The default is 10.\n\t     * @returns {Number}\n\t     * @example\n\t     * // get tension\n\t     * var pointerWidth = line.pointerWidth();\n\t     *\n\t     * // set tension\n\t     * line.pointerWidth(15);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerWidth', 10);\n\t    /**\n\t     * get/set pointerAtBeginning\n\t     * @name pointerAtBeginning\n\t     * @method\n\t     * @memberof Konva.Arrow.prototype\n\t     * @param {Number} Should pointer displayed at beginning of arrow.\n\t     *   The default is false.\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get tension\n\t     * var pointerAtBeginning = line.pointerAtBeginning();\n\t     *\n\t     * // set tension\n\t     * line.pointerAtBeginning(true);\n\t     */\n\t\n\t    Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n\t    Konva.Collection.mapMethods(Konva.Arrow);\n\t\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it, Constructor, name, forbiddenField){\n\t  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n\t    throw TypeError(name + ': incorrect invocation!');\n\t  } return it;\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = false;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\tvar anObject    = __webpack_require__(2)\n\t  , dPs         = __webpack_require__(103)\n\t  , enumBugKeys = __webpack_require__(65)\n\t  , IE_PROTO    = __webpack_require__(77)('IE_PROTO')\n\t  , Empty       = function(){ /* empty */ }\n\t  , PROTOTYPE   = 'prototype';\n\t\n\t// Create object with fake `null` prototype: use iframe Object with cleared prototype\n\tvar createDict = function(){\n\t  // Thrash, waste and sodomy: IE GC bug\n\t  var iframe = __webpack_require__(64)('iframe')\n\t    , i      = enumBugKeys.length\n\t    , lt     = '<'\n\t    , gt     = '>'\n\t    , iframeDocument;\n\t  iframe.style.display = 'none';\n\t  __webpack_require__(67).appendChild(iframe);\n\t  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n\t  // createDict = iframe.contentWindow.Object;\n\t  // html.removeChild(iframe);\n\t  iframeDocument = iframe.contentWindow.document;\n\t  iframeDocument.open();\n\t  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n\t  iframeDocument.close();\n\t  createDict = iframeDocument.F;\n\t  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n\t  return createDict();\n\t};\n\t\n\tmodule.exports = Object.create || function create(O, Properties){\n\t  var result;\n\t  if(O !== null){\n\t    Empty[PROTOTYPE] = anObject(O);\n\t    result = new Empty;\n\t    Empty[PROTOTYPE] = null;\n\t    // add \"__proto__\" for Object.getPrototypeOf polyfill\n\t    result[IE_PROTO] = O;\n\t  } else result = createDict();\n\t  return Properties === undefined ? result : dPs(result, Properties);\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\tvar $keys      = __webpack_require__(105)\n\t  , hiddenKeys = __webpack_require__(65).concat('length', 'prototype');\n\t\n\texports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n\t  return $keys(O, hiddenKeys);\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys       = __webpack_require__(105)\n\t  , enumBugKeys = __webpack_require__(65);\n\t\n\tmodule.exports = Object.keys || function keys(O){\n\t  return $keys(O, enumBugKeys);\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar redefine = __webpack_require__(14);\n\tmodule.exports = function(target, src, safe){\n\t  for(var key in src)redefine(target, key, src[key], safe);\n\t  return target;\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global      = __webpack_require__(3)\n\t  , dP          = __webpack_require__(8)\n\t  , DESCRIPTORS = __webpack_require__(7)\n\t  , SPECIES     = __webpack_require__(6)('species');\n\t\n\tmodule.exports = function(KEY){\n\t  var C = global[KEY];\n\t  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n\t    configurable: true,\n\t    get: function(){ return this; }\n\t  });\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(31)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.31 Array.prototype[@@unscopables]\n\tvar UNSCOPABLES = __webpack_require__(6)('unscopables')\n\t  , ArrayProto  = Array.prototype;\n\tif(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(13)(ArrayProto, UNSCOPABLES, {});\n\tmodule.exports = function(key){\n\t  ArrayProto[UNSCOPABLES][key] = true;\n\t};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ctx         = __webpack_require__(26)\n\t  , call        = __webpack_require__(99)\n\t  , isArrayIter = __webpack_require__(69)\n\t  , anObject    = __webpack_require__(2)\n\t  , toLength    = __webpack_require__(9)\n\t  , getIterFn   = __webpack_require__(86)\n\t  , BREAK       = {}\n\t  , RETURN      = {};\n\tvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n\t  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n\t    , f      = ctx(fn, that, entries ? 2 : 1)\n\t    , index  = 0\n\t    , length, step, iterator, result;\n\t  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n\t  // fast case for arrays with default iterator\n\t  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n\t    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n\t    if(result === BREAK || result === RETURN)return result;\n\t  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n\t    result = call(iterator, f, step.value, entries);\n\t    if(result === BREAK || result === RETURN)return result;\n\t  }\n\t};\n\texports.BREAK  = BREAK;\n\texports.RETURN = RETURN;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar def = __webpack_require__(8).f\n\t  , has = __webpack_require__(11)\n\t  , TAG = __webpack_require__(6)('toStringTag');\n\t\n\tmodule.exports = function(it, tag, stat){\n\t  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1)\n\t  , defined = __webpack_require__(20)\n\t  , fails   = __webpack_require__(4)\n\t  , spaces  = __webpack_require__(82)\n\t  , space   = '[' + spaces + ']'\n\t  , non     = '\\u200b\\u0085'\n\t  , ltrim   = RegExp('^' + space + space + '*')\n\t  , rtrim   = RegExp(space + space + '*$');\n\t\n\tvar exporter = function(KEY, exec, ALIAS){\n\t  var exp   = {};\n\t  var FORCE = fails(function(){\n\t    return !!spaces[KEY]() || non[KEY]() != non;\n\t  });\n\t  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n\t  if(ALIAS)exp[ALIAS] = fn;\n\t  $export($export.P + $export.F * FORCE, 'String', exp);\n\t};\n\t\n\t// 1 -> String#trimLeft\n\t// 2 -> String#trimRight\n\t// 3 -> String#trim\n\tvar trim = exporter.trim = function(string, TYPE){\n\t  string = String(defined(string));\n\t  if(TYPE & 1)string = string.replace(ltrim, '');\n\t  if(TYPE & 2)string = string.replace(rtrim, '');\n\t  return string;\n\t};\n\t\n\tmodule.exports = exporter;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// getting tag from 19.1.3.6 Object.prototype.toString()\n\tvar cof = __webpack_require__(19)\n\t  , TAG = __webpack_require__(6)('toStringTag')\n\t  // ES3 wrong here\n\t  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\t\n\t// fallback for IE11 Script Access Denied error\n\tvar tryGet = function(it, key){\n\t  try {\n\t    return it[key];\n\t  } catch(e){ /* empty */ }\n\t};\n\t\n\tmodule.exports = function(it){\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n\t    // builtinTag case\n\t    : ARG ? cof(O)\n\t    // ES3 arguments fallback\n\t    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(19);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Screen = function (_Label) {\n\t\t_inherits(Screen, _Label);\n\t\n\t\tfunction Screen(x, y, textColor, backgroundColor, text) {\n\t\t\tvar scale = arguments.length <= 5 || arguments[5] === undefined ? 1 : arguments[5];\n\t\n\t\t\t_classCallCheck(this, Screen);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Screen.__proto__ || Object.getPrototypeOf(Screen)).call(this, {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\topacity: 1\n\t\t\t}));\n\t\n\t\t\tconsole.log('Creating ' + _this.className);\n\t\t\t_this.type = 'Screen';\n\t\t\t_this.id = _this.type + ' #' + Math.floor(Math.random() * 1000);\n\t\t\t_this.add(new _konva.Tag({\n\t\t\t\tfill: backgroundColor,\n\t\t\t\tstroke: '#333',\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tpointerDirection: 'down',\n\t\t\t\tpointerWidth: 10 * scale,\n\t\t\t\tpointerHeight: 10 * scale,\n\t\t\t\tlineJoin: 'round'\n\t\t\t}));\n\t\t\t_this.add(new _konva.Text({\n\t\t\t\ttext: text,\n\t\t\t\tfontFamily: 'Calibri',\n\t\t\t\tfontSize: 18 * scale,\n\t\t\t\tpadding: 5 * scale,\n\t\t\t\tfill: textColor\n\t\t\t}));\n\t\t\treturn _this;\n\t\t}\n\t\n\t\treturn Screen;\n\t}(_konva.Label);\n\t\n\texports.default = Screen;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(16)\n\t  , toLength  = __webpack_require__(9)\n\t  , toIndex   = __webpack_require__(40);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global            = __webpack_require__(3)\n\t  , $export           = __webpack_require__(1)\n\t  , redefine          = __webpack_require__(14)\n\t  , redefineAll       = __webpack_require__(38)\n\t  , meta              = __webpack_require__(29)\n\t  , forOf             = __webpack_require__(43)\n\t  , anInstance        = __webpack_require__(33)\n\t  , isObject          = __webpack_require__(5)\n\t  , fails             = __webpack_require__(4)\n\t  , $iterDetect       = __webpack_require__(57)\n\t  , setToStringTag    = __webpack_require__(45)\n\t  , inheritIfRequired = __webpack_require__(68);\n\t\n\tmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n\t  var Base  = global[NAME]\n\t    , C     = Base\n\t    , ADDER = IS_MAP ? 'set' : 'add'\n\t    , proto = C && C.prototype\n\t    , O     = {};\n\t  var fixMethod = function(KEY){\n\t    var fn = proto[KEY];\n\t    redefine(proto, KEY,\n\t      KEY == 'delete' ? function(a){\n\t        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t      } : KEY == 'has' ? function has(a){\n\t        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t      } : KEY == 'get' ? function get(a){\n\t        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n\t      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }\n\t        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }\n\t    );\n\t  };\n\t  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n\t    new C().entries().next();\n\t  }))){\n\t    // create collection constructor\n\t    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n\t    redefineAll(C.prototype, methods);\n\t    meta.NEED = true;\n\t  } else {\n\t    var instance             = new C\n\t      // early implementations not supports chaining\n\t      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance\n\t      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n\t      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })\n\t      // most early implementations doesn't supports iterables, most modern - not close it correctly\n\t      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new\n\t      // for early implementations -0 and +0 not the same\n\t      , BUGGY_ZERO = !IS_WEAK && fails(function(){\n\t        // V8 ~ Chromium 42- fails only with 5+ elements\n\t        var $instance = new C()\n\t          , index     = 5;\n\t        while(index--)$instance[ADDER](index, index);\n\t        return !$instance.has(-0);\n\t      });\n\t    if(!ACCEPT_ITERABLES){ \n\t      C = wrapper(function(target, iterable){\n\t        anInstance(target, C, NAME);\n\t        var that = inheritIfRequired(new Base, target, C);\n\t        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n\t        return that;\n\t      });\n\t      C.prototype = proto;\n\t      proto.constructor = C;\n\t    }\n\t    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){\n\t      fixMethod('delete');\n\t      fixMethod('has');\n\t      IS_MAP && fixMethod('get');\n\t    }\n\t    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);\n\t    // weak collections should not contains .clear method\n\t    if(IS_WEAK && proto.clear)delete proto.clear;\n\t  }\n\t\n\t  setToStringTag(C, NAME);\n\t\n\t  O[NAME] = C;\n\t  $export($export.G + $export.W + $export.F * (C != Base), O);\n\t\n\t  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\t\n\t  return C;\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar hide     = __webpack_require__(13)\n\t  , redefine = __webpack_require__(14)\n\t  , fails    = __webpack_require__(4)\n\t  , defined  = __webpack_require__(20)\n\t  , wks      = __webpack_require__(6);\n\t\n\tmodule.exports = function(KEY, length, exec){\n\t  var SYMBOL   = wks(KEY)\n\t    , fns      = exec(defined, SYMBOL, ''[KEY])\n\t    , strfn    = fns[0]\n\t    , rxfn     = fns[1];\n\t  if(fails(function(){\n\t    var O = {};\n\t    O[SYMBOL] = function(){ return 7; };\n\t    return ''[KEY](O) != 7;\n\t  })){\n\t    redefine(String.prototype, KEY, strfn);\n\t    hide(RegExp.prototype, SYMBOL, length == 2\n\t      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n\t      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n\t      ? function(string, arg){ return rxfn.call(string, this, arg); }\n\t      // 21.2.5.6 RegExp.prototype[@@match](string)\n\t      // 21.2.5.9 RegExp.prototype[@@search](string)\n\t      : function(string){ return rxfn.call(string, this); }\n\t    );\n\t  }\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 21.2.5.3 get RegExp.prototype.flags\n\tvar anObject = __webpack_require__(2);\n\tmodule.exports = function(){\n\t  var that   = anObject(this)\n\t    , result = '';\n\t  if(that.global)     result += 'g';\n\t  if(that.ignoreCase) result += 'i';\n\t  if(that.multiline)  result += 'm';\n\t  if(that.unicode)    result += 'u';\n\t  if(that.sticky)     result += 'y';\n\t  return result;\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t// fast apply, http://jsperf.lnkit.com/fast-apply/5\n\tmodule.exports = function(fn, args, that){\n\t  var un = that === undefined;\n\t  switch(args.length){\n\t    case 0: return un ? fn()\n\t                      : fn.call(that);\n\t    case 1: return un ? fn(args[0])\n\t                      : fn.call(that, args[0]);\n\t    case 2: return un ? fn(args[0], args[1])\n\t                      : fn.call(that, args[0], args[1]);\n\t    case 3: return un ? fn(args[0], args[1], args[2])\n\t                      : fn.call(that, args[0], args[1], args[2]);\n\t    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n\t                      : fn.call(that, args[0], args[1], args[2], args[3]);\n\t  } return              fn.apply(that, args);\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.2.8 IsRegExp(argument)\n\tvar isObject = __webpack_require__(5)\n\t  , cof      = __webpack_require__(19)\n\t  , MATCH    = __webpack_require__(6)('match');\n\tmodule.exports = function(it){\n\t  var isRegExp;\n\t  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n\t};\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ITERATOR     = __webpack_require__(6)('iterator')\n\t  , SAFE_CLOSING = false;\n\t\n\ttry {\n\t  var riter = [7][ITERATOR]();\n\t  riter['return'] = function(){ SAFE_CLOSING = true; };\n\t  Array.from(riter, function(){ throw 2; });\n\t} catch(e){ /* empty */ }\n\t\n\tmodule.exports = function(exec, skipClosing){\n\t  if(!skipClosing && !SAFE_CLOSING)return false;\n\t  var safe = false;\n\t  try {\n\t    var arr  = [7]\n\t      , iter = arr[ITERATOR]();\n\t    iter.next = function(){ return {done: safe = true}; };\n\t    arr[ITERATOR] = function(){ return iter; };\n\t    exec(arr);\n\t  } catch(e){ /* empty */ }\n\t  return safe;\n\t};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Forced replacement prototype accessors methods\n\tmodule.exports = __webpack_require__(34)|| !__webpack_require__(4)(function(){\n\t  var K = Math.random();\n\t  // In FF throws only define methods\n\t  __defineSetter__.call(null, K, function(){ /* empty */});\n\t  delete __webpack_require__(3)[K];\n\t});\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(3)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(3)\n\t  , hide   = __webpack_require__(13)\n\t  , uid    = __webpack_require__(41)\n\t  , TYPED  = uid('typed_array')\n\t  , VIEW   = uid('view')\n\t  , ABV    = !!(global.ArrayBuffer && global.DataView)\n\t  , CONSTR = ABV\n\t  , i = 0, l = 9, Typed;\n\t\n\tvar TypedArrayConstructors = (\n\t  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n\t).split(',');\n\t\n\twhile(i < l){\n\t  if(Typed = global[TypedArrayConstructors[i++]]){\n\t    hide(Typed.prototype, TYPED, true);\n\t    hide(Typed.prototype, VIEW, true);\n\t  } else CONSTR = false;\n\t}\n\t\n\tmodule.exports = {\n\t  ABV:    ABV,\n\t  CONSTR: CONSTR,\n\t  TYPED:  TYPED,\n\t  VIEW:   VIEW\n\t};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n\t'use strict';\n\tvar toObject = __webpack_require__(10)\n\t  , toIndex  = __webpack_require__(40)\n\t  , toLength = __webpack_require__(9);\n\tmodule.exports = function fill(value /*, start = 0, end = @length */){\n\t  var O      = toObject(this)\n\t    , length = toLength(O.length)\n\t    , aLen   = arguments.length\n\t    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)\n\t    , end    = aLen > 2 ? arguments[2] : undefined\n\t    , endPos = end === undefined ? length : toIndex(end, length);\n\t  while(endPos > index)O[index++] = value;\n\t  return O;\n\t};\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $defineProperty = __webpack_require__(8)\n\t  , createDesc      = __webpack_require__(30);\n\t\n\tmodule.exports = function(object, index, value){\n\t  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\n\t  else object[index] = value;\n\t};\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(5)\n\t  , document = __webpack_require__(3).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar MATCH = __webpack_require__(6)('match');\n\tmodule.exports = function(KEY){\n\t  var re = /./;\n\t  try {\n\t    '/./'[KEY](re);\n\t  } catch(e){\n\t    try {\n\t      re[MATCH] = false;\n\t      return !'/./'[KEY](re);\n\t    } catch(f){ /* empty */ }\n\t  } return true;\n\t};\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(3).document && document.documentElement;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject       = __webpack_require__(5)\n\t  , setPrototypeOf = __webpack_require__(76).set;\n\tmodule.exports = function(that, target, C){\n\t  var P, S = target.constructor;\n\t  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){\n\t    setPrototypeOf(that, P);\n\t  } return that;\n\t};\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// check on default Array iterator\n\tvar Iterators  = __webpack_require__(44)\n\t  , ITERATOR   = __webpack_require__(6)('iterator')\n\t  , ArrayProto = Array.prototype;\n\t\n\tmodule.exports = function(it){\n\t  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n\t};\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.2.2 IsArray(argument)\n\tvar cof = __webpack_require__(19);\n\tmodule.exports = Array.isArray || function isArray(arg){\n\t  return cof(arg) == 'Array';\n\t};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar create         = __webpack_require__(35)\n\t  , descriptor     = __webpack_require__(30)\n\t  , setToStringTag = __webpack_require__(45)\n\t  , IteratorPrototype = {};\n\t\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\t__webpack_require__(13)(IteratorPrototype, __webpack_require__(6)('iterator'), function(){ return this; });\n\t\n\tmodule.exports = function(Constructor, NAME, next){\n\t  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY        = __webpack_require__(34)\n\t  , $export        = __webpack_require__(1)\n\t  , redefine       = __webpack_require__(14)\n\t  , hide           = __webpack_require__(13)\n\t  , has            = __webpack_require__(11)\n\t  , Iterators      = __webpack_require__(44)\n\t  , $iterCreate    = __webpack_require__(71)\n\t  , setToStringTag = __webpack_require__(45)\n\t  , getPrototypeOf = __webpack_require__(18)\n\t  , ITERATOR       = __webpack_require__(6)('iterator')\n\t  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n\t  , FF_ITERATOR    = '@@iterator'\n\t  , KEYS           = 'keys'\n\t  , VALUES         = 'values';\n\t\n\tvar returnThis = function(){ return this; };\n\t\n\tmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function(kind){\n\t    if(!BUGGY && kind in proto)return proto[kind];\n\t    switch(kind){\n\t      case KEYS: return function keys(){ return new Constructor(this, kind); };\n\t      case VALUES: return function values(){ return new Constructor(this, kind); };\n\t    } return function entries(){ return new Constructor(this, kind); };\n\t  };\n\t  var TAG        = NAME + ' Iterator'\n\t    , DEF_VALUES = DEFAULT == VALUES\n\t    , VALUES_BUG = false\n\t    , proto      = Base.prototype\n\t    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n\t    , $default   = $native || getMethod(DEFAULT)\n\t    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n\t    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n\t    , methods, key, IteratorPrototype;\n\t  // Fix native\n\t  if($anyNative){\n\t    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n\t    if(IteratorPrototype !== Object.prototype){\n\t      // Set @@toStringTag to native iterators\n\t      setToStringTag(IteratorPrototype, TAG, true);\n\t      // fix for some old engines\n\t      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n\t    }\n\t  }\n\t  // fix Array#{values, @@iterator}.name in V8 / FF\n\t  if(DEF_VALUES && $native && $native.name !== VALUES){\n\t    VALUES_BUG = true;\n\t    $default = function values(){ return $native.call(this); };\n\t  }\n\t  // Define iterator\n\t  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  // Plug for library\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG]  = returnThis;\n\t  if(DEFAULT){\n\t    methods = {\n\t      values:  DEF_VALUES ? $default : getMethod(VALUES),\n\t      keys:    IS_SET     ? $default : getMethod(KEYS),\n\t      entries: $entries\n\t    };\n\t    if(FORCED)for(key in methods){\n\t      if(!(key in proto))redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t// 20.2.2.14 Math.expm1(x)\n\tvar $expm1 = Math.expm1;\n\tmodule.exports = (!$expm1\n\t  // Old FF bug\n\t  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n\t  // Tor Browser bug\n\t  || $expm1(-2e-17) != -2e-17\n\t) ? function expm1(x){\n\t  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n\t} : $expm1;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports) {\n\n\t// 20.2.2.28 Math.sign(x)\n\tmodule.exports = Math.sign || function sign(x){\n\t  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n\t};\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(3)\n\t  , macrotask = __webpack_require__(83).set\n\t  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n\t  , process   = global.process\n\t  , Promise   = global.Promise\n\t  , isNode    = __webpack_require__(19)(process) == 'process';\n\t\n\tmodule.exports = function(){\n\t  var head, last, notify;\n\t\n\t  var flush = function(){\n\t    var parent, fn;\n\t    if(isNode && (parent = process.domain))parent.exit();\n\t    while(head){\n\t      fn   = head.fn;\n\t      head = head.next;\n\t      try {\n\t        fn();\n\t      } catch(e){\n\t        if(head)notify();\n\t        else last = undefined;\n\t        throw e;\n\t      }\n\t    } last = undefined;\n\t    if(parent)parent.enter();\n\t  };\n\t\n\t  // Node.js\n\t  if(isNode){\n\t    notify = function(){\n\t      process.nextTick(flush);\n\t    };\n\t  // browsers with MutationObserver\n\t  } else if(Observer){\n\t    var toggle = true\n\t      , node   = document.createTextNode('');\n\t    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n\t    notify = function(){\n\t      node.data = toggle = !toggle;\n\t    };\n\t  // environments with maybe non-completely correct, but existent Promise\n\t  } else if(Promise && Promise.resolve){\n\t    var promise = Promise.resolve();\n\t    notify = function(){\n\t      promise.then(flush);\n\t    };\n\t  // for other environments - macrotask based on:\n\t  // - setImmediate\n\t  // - MessageChannel\n\t  // - window.postMessag\n\t  // - onreadystatechange\n\t  // - setTimeout\n\t  } else {\n\t    notify = function(){\n\t      // strange IE + webpack dev server bug - use .call(global)\n\t      macrotask.call(global, flush);\n\t    };\n\t  }\n\t\n\t  return function(fn){\n\t    var task = {fn: fn, next: undefined};\n\t    if(last)last.next = task;\n\t    if(!head){\n\t      head = task;\n\t      notify();\n\t    } last = task;\n\t  };\n\t};\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Works with __proto__ only. Old v8 can't work with null proto objects.\n\t/* eslint-disable no-proto */\n\tvar isObject = __webpack_require__(5)\n\t  , anObject = __webpack_require__(2);\n\tvar check = function(O, proto){\n\t  anObject(O);\n\t  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n\t};\n\tmodule.exports = {\n\t  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n\t    function(test, buggy, set){\n\t      try {\n\t        set = __webpack_require__(26)(Function.call, __webpack_require__(17).f(Object.prototype, '__proto__').set, 2);\n\t        set(test, []);\n\t        buggy = !(test instanceof Array);\n\t      } catch(e){ buggy = true; }\n\t      return function setPrototypeOf(O, proto){\n\t        check(O, proto);\n\t        if(buggy)O.__proto__ = proto;\n\t        else set(O, proto);\n\t        return O;\n\t      };\n\t    }({}, false) : undefined),\n\t  check: check\n\t};\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(60)('keys')\n\t  , uid    = __webpack_require__(41);\n\tmodule.exports = function(key){\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.3.20 SpeciesConstructor(O, defaultConstructor)\n\tvar anObject  = __webpack_require__(2)\n\t  , aFunction = __webpack_require__(12)\n\t  , SPECIES   = __webpack_require__(6)('species');\n\tmodule.exports = function(O, D){\n\t  var C = anObject(O).constructor, S;\n\t  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n\t};\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(31)\n\t  , defined   = __webpack_require__(20);\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tmodule.exports = function(TO_STRING){\n\t  return function(that, pos){\n\t    var s = String(defined(that))\n\t      , i = toInteger(pos)\n\t      , l = s.length\n\t      , a, b;\n\t    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// helper for String#{startsWith, endsWith, includes}\n\tvar isRegExp = __webpack_require__(56)\n\t  , defined  = __webpack_require__(20);\n\t\n\tmodule.exports = function(that, searchString, NAME){\n\t  if(isRegExp(searchString))throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n\t  return String(defined(that));\n\t};\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar toInteger = __webpack_require__(31)\n\t  , defined   = __webpack_require__(20);\n\t\n\tmodule.exports = function repeat(count){\n\t  var str = String(defined(this))\n\t    , res = ''\n\t    , n   = toInteger(count);\n\t  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\n\t  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\n\t  return res;\n\t};\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\tmodule.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n\t  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ctx                = __webpack_require__(26)\n\t  , invoke             = __webpack_require__(55)\n\t  , html               = __webpack_require__(67)\n\t  , cel                = __webpack_require__(64)\n\t  , global             = __webpack_require__(3)\n\t  , process            = global.process\n\t  , setTask            = global.setImmediate\n\t  , clearTask          = global.clearImmediate\n\t  , MessageChannel     = global.MessageChannel\n\t  , counter            = 0\n\t  , queue              = {}\n\t  , ONREADYSTATECHANGE = 'onreadystatechange'\n\t  , defer, channel, port;\n\tvar run = function(){\n\t  var id = +this;\n\t  if(queue.hasOwnProperty(id)){\n\t    var fn = queue[id];\n\t    delete queue[id];\n\t    fn();\n\t  }\n\t};\n\tvar listener = function(event){\n\t  run.call(event.data);\n\t};\n\t// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\tif(!setTask || !clearTask){\n\t  setTask = function setImmediate(fn){\n\t    var args = [], i = 1;\n\t    while(arguments.length > i)args.push(arguments[i++]);\n\t    queue[++counter] = function(){\n\t      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n\t    };\n\t    defer(counter);\n\t    return counter;\n\t  };\n\t  clearTask = function clearImmediate(id){\n\t    delete queue[id];\n\t  };\n\t  // Node.js 0.8-\n\t  if(__webpack_require__(19)(process) == 'process'){\n\t    defer = function(id){\n\t      process.nextTick(ctx(run, id, 1));\n\t    };\n\t  // Browsers with MessageChannel, includes WebWorkers\n\t  } else if(MessageChannel){\n\t    channel = new MessageChannel;\n\t    port    = channel.port2;\n\t    channel.port1.onmessage = listener;\n\t    defer = ctx(port.postMessage, port, 1);\n\t  // Browsers with postMessage, skip WebWorkers\n\t  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n\t  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n\t    defer = function(id){\n\t      global.postMessage(id + '', '*');\n\t    };\n\t    global.addEventListener('message', listener, false);\n\t  // IE8-\n\t  } else if(ONREADYSTATECHANGE in cel('script')){\n\t    defer = function(id){\n\t      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n\t        html.removeChild(this);\n\t        run.call(id);\n\t      };\n\t    };\n\t  // Rest old browsers\n\t  } else {\n\t    defer = function(id){\n\t      setTimeout(ctx(run, id, 1), 0);\n\t    };\n\t  }\n\t}\n\tmodule.exports = {\n\t  set:   setTask,\n\t  clear: clearTask\n\t};\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global         = __webpack_require__(3)\n\t  , DESCRIPTORS    = __webpack_require__(7)\n\t  , LIBRARY        = __webpack_require__(34)\n\t  , $typed         = __webpack_require__(61)\n\t  , hide           = __webpack_require__(13)\n\t  , redefineAll    = __webpack_require__(38)\n\t  , fails          = __webpack_require__(4)\n\t  , anInstance     = __webpack_require__(33)\n\t  , toInteger      = __webpack_require__(31)\n\t  , toLength       = __webpack_require__(9)\n\t  , gOPN           = __webpack_require__(36).f\n\t  , dP             = __webpack_require__(8).f\n\t  , arrayFill      = __webpack_require__(62)\n\t  , setToStringTag = __webpack_require__(45)\n\t  , ARRAY_BUFFER   = 'ArrayBuffer'\n\t  , DATA_VIEW      = 'DataView'\n\t  , PROTOTYPE      = 'prototype'\n\t  , WRONG_LENGTH   = 'Wrong length!'\n\t  , WRONG_INDEX    = 'Wrong index!'\n\t  , $ArrayBuffer   = global[ARRAY_BUFFER]\n\t  , $DataView      = global[DATA_VIEW]\n\t  , Math           = global.Math\n\t  , RangeError     = global.RangeError\n\t  , Infinity       = global.Infinity\n\t  , BaseBuffer     = $ArrayBuffer\n\t  , abs            = Math.abs\n\t  , pow            = Math.pow\n\t  , floor          = Math.floor\n\t  , log            = Math.log\n\t  , LN2            = Math.LN2\n\t  , BUFFER         = 'buffer'\n\t  , BYTE_LENGTH    = 'byteLength'\n\t  , BYTE_OFFSET    = 'byteOffset'\n\t  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER\n\t  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH\n\t  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\t\n\t// IEEE754 conversions based on https://github.com/feross/ieee754\n\tvar packIEEE754 = function(value, mLen, nBytes){\n\t  var buffer = Array(nBytes)\n\t    , eLen   = nBytes * 8 - mLen - 1\n\t    , eMax   = (1 << eLen) - 1\n\t    , eBias  = eMax >> 1\n\t    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0\n\t    , i      = 0\n\t    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0\n\t    , e, m, c;\n\t  value = abs(value)\n\t  if(value != value || value === Infinity){\n\t    m = value != value ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = floor(log(value) / LN2);\n\t    if(value * (c = pow(2, -e)) < 1){\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if(e + eBias >= 1){\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * pow(2, 1 - eBias);\n\t    }\n\t    if(value * c >= 2){\n\t      e++;\n\t      c /= 2;\n\t    }\n\t    if(e + eBias >= eMax){\n\t      m = 0;\n\t      e = eMax;\n\t    } else if(e + eBias >= 1){\n\t      m = (value * c - 1) * pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * pow(2, eBias - 1) * pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\t  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\t  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n\t  buffer[--i] |= s * 128;\n\t  return buffer;\n\t};\n\tvar unpackIEEE754 = function(buffer, mLen, nBytes){\n\t  var eLen  = nBytes * 8 - mLen - 1\n\t    , eMax  = (1 << eLen) - 1\n\t    , eBias = eMax >> 1\n\t    , nBits = eLen - 7\n\t    , i     = nBytes - 1\n\t    , s     = buffer[i--]\n\t    , e     = s & 127\n\t    , m;\n\t  s >>= 7;\n\t  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\t  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n\t  if(e === 0){\n\t    e = 1 - eBias;\n\t  } else if(e === eMax){\n\t    return m ? NaN : s ? -Infinity : Infinity;\n\t  } else {\n\t    m = m + pow(2, mLen);\n\t    e = e - eBias;\n\t  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n\t};\n\t\n\tvar unpackI32 = function(bytes){\n\t  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n\t};\n\tvar packI8 = function(it){\n\t  return [it & 0xff];\n\t};\n\tvar packI16 = function(it){\n\t  return [it & 0xff, it >> 8 & 0xff];\n\t};\n\tvar packI32 = function(it){\n\t  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n\t};\n\tvar packF64 = function(it){\n\t  return packIEEE754(it, 52, 8);\n\t};\n\tvar packF32 = function(it){\n\t  return packIEEE754(it, 23, 4);\n\t};\n\t\n\tvar addGetter = function(C, key, internal){\n\t  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});\n\t};\n\t\n\tvar get = function(view, bytes, index, isLittleEndian){\n\t  var numIndex = +index\n\t    , intIndex = toInteger(numIndex);\n\t  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b\n\t    , start = intIndex + view[$OFFSET]\n\t    , pack  = store.slice(start, start + bytes);\n\t  return isLittleEndian ? pack : pack.reverse();\n\t};\n\tvar set = function(view, bytes, index, conversion, value, isLittleEndian){\n\t  var numIndex = +index\n\t    , intIndex = toInteger(numIndex);\n\t  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b\n\t    , start = intIndex + view[$OFFSET]\n\t    , pack  = conversion(+value);\n\t  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n\t};\n\t\n\tvar validateArrayBufferArguments = function(that, length){\n\t  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);\n\t  var numberLength = +length\n\t    , byteLength   = toLength(numberLength);\n\t  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);\n\t  return byteLength;\n\t};\n\t\n\tif(!$typed.ABV){\n\t  $ArrayBuffer = function ArrayBuffer(length){\n\t    var byteLength = validateArrayBufferArguments(this, length);\n\t    this._b       = arrayFill.call(Array(byteLength), 0);\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t\n\t  $DataView = function DataView(buffer, byteOffset, byteLength){\n\t    anInstance(this, $DataView, DATA_VIEW);\n\t    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n\t    var bufferLength = buffer[$LENGTH]\n\t      , offset       = toInteger(byteOffset);\n\t    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');\n\t    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n\t    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);\n\t    this[$BUFFER] = buffer;\n\t    this[$OFFSET] = offset;\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t\n\t  if(DESCRIPTORS){\n\t    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BUFFER, '_b');\n\t    addGetter($DataView, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BYTE_OFFSET, '_o');\n\t  }\n\t\n\t  redefineAll($DataView[PROTOTYPE], {\n\t    getInt8: function getInt8(byteOffset){\n\t      return get(this, 1, byteOffset)[0] << 24 >> 24;\n\t    },\n\t    getUint8: function getUint8(byteOffset){\n\t      return get(this, 1, byteOffset)[0];\n\t    },\n\t    getInt16: function getInt16(byteOffset /*, littleEndian */){\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n\t    },\n\t    getUint16: function getUint16(byteOffset /*, littleEndian */){\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return bytes[1] << 8 | bytes[0];\n\t    },\n\t    getInt32: function getInt32(byteOffset /*, littleEndian */){\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n\t    },\n\t    getUint32: function getUint32(byteOffset /*, littleEndian */){\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n\t    },\n\t    getFloat32: function getFloat32(byteOffset /*, littleEndian */){\n\t      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n\t    },\n\t    getFloat64: function getFloat64(byteOffset /*, littleEndian */){\n\t      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n\t    },\n\t    setInt8: function setInt8(byteOffset, value){\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value){\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setInt16: function setInt16(byteOffset, value /*, littleEndian */){\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setUint16: function setUint16(byteOffset, value /*, littleEndian */){\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setInt32: function setInt32(byteOffset, value /*, littleEndian */){\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setUint32: function setUint32(byteOffset, value /*, littleEndian */){\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){\n\t      set(this, 4, byteOffset, packF32, value, arguments[2]);\n\t    },\n\t    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){\n\t      set(this, 8, byteOffset, packF64, value, arguments[2]);\n\t    }\n\t  });\n\t} else {\n\t  if(!fails(function(){\n\t    new $ArrayBuffer;     // eslint-disable-line no-new\n\t  }) || !fails(function(){\n\t    new $ArrayBuffer(.5); // eslint-disable-line no-new\n\t  })){\n\t    $ArrayBuffer = function ArrayBuffer(length){\n\t      return new BaseBuffer(validateArrayBufferArguments(this, length));\n\t    };\n\t    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n\t    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){\n\t      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);\n\t    };\n\t    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;\n\t  }\n\t  // iOS Safari 7.x bug\n\t  var view = new $DataView(new $ArrayBuffer(2))\n\t    , $setInt8 = $DataView[PROTOTYPE].setInt8;\n\t  view.setInt8(0, 2147483648);\n\t  view.setInt8(1, 2147483649);\n\t  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {\n\t    setInt8: function setInt8(byteOffset, value){\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value){\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    }\n\t  }, true);\n\t}\n\tsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\n\tsetToStringTag($DataView, DATA_VIEW);\n\thide($DataView[PROTOTYPE], $typed.VIEW, true);\n\texports[ARRAY_BUFFER] = $ArrayBuffer;\n\texports[DATA_VIEW] = $DataView;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global         = __webpack_require__(3)\n\t  , core           = __webpack_require__(25)\n\t  , LIBRARY        = __webpack_require__(34)\n\t  , wksExt         = __webpack_require__(112)\n\t  , defineProperty = __webpack_require__(8).f;\n\tmodule.exports = function(name){\n\t  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n\t  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n\t};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar classof   = __webpack_require__(47)\n\t  , ITERATOR  = __webpack_require__(6)('iterator')\n\t  , Iterators = __webpack_require__(44);\n\tmodule.exports = __webpack_require__(25).getIteratorMethod = function(it){\n\t  if(it != undefined)return it[ITERATOR]\n\t    || it['@@iterator']\n\t    || Iterators[classof(it)];\n\t};\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar addToUnscopables = __webpack_require__(42)\n\t  , step             = __webpack_require__(100)\n\t  , Iterators        = __webpack_require__(44)\n\t  , toIObject        = __webpack_require__(16);\n\t\n\t// 22.1.3.4 Array.prototype.entries()\n\t// 22.1.3.13 Array.prototype.keys()\n\t// 22.1.3.29 Array.prototype.values()\n\t// 22.1.3.30 Array.prototype[@@iterator]()\n\tmodule.exports = __webpack_require__(72)(Array, 'Array', function(iterated, kind){\n\t  this._t = toIObject(iterated); // target\n\t  this._i = 0;                   // next index\n\t  this._k = kind;                // kind\n\t// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , kind  = this._k\n\t    , index = this._i++;\n\t  if(!O || index >= O.length){\n\t    this._t = undefined;\n\t    return step(1);\n\t  }\n\t  if(kind == 'keys'  )return step(0, index);\n\t  if(kind == 'values')return step(0, O[index]);\n\t  return step(0, [index, O[index]]);\n\t}, 'values');\n\t\n\t// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\tIterators.Arguments = Iterators.Array;\n\t\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tvar _Wire = __webpack_require__(122);\n\t\n\tvar _Wire2 = _interopRequireDefault(_Wire);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Input = function (_Circle) {\n\t\t_inherits(Input, _Circle);\n\t\n\t\tfunction Input(x, y, ctx) {\n\t\t\t_classCallCheck(this, Input);\n\t\n\t\t\t/* attributes */\n\t\t\tvar _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tradius: 8,\n\t\t\t\tstrokeWidth: 2,\n\t\t\t\tfill: '#f2f2f2',\n\t\t\t\tstroke: 'black'\n\t\t\t}));\n\t\n\t\t\t_this.x = _this.attrs.x;\n\t\t\t_this.y = _this.attrs.y;\n\t\t\t_this.radius = 10;\n\t\t\t_this.context = ctx;\n\t\n\t\t\t/* info */\n\t\t\t_this.type = 'Input';\n\t\t\t_this.id = _this.type + ' #' + Math.floor(Math.random() * 1000);\n\t\t\t_this.used = false;\n\t\t\t_this.connectInput = null;\n\t\t\t_this.connecting = false;\n\t\n\t\t\t/* handlers */\n\t\t\t_this.on('mouseover', _this.mouseOverHandler);\n\t\t\t_this.on('mouseout', _this.mouseOutHandler);\n\t\t\t_this.on('dblclick', _this.dblClickHandler);\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Input, [{\n\t\t\tkey: 'connect',\n\t\t\tvalue: function connect(input) {\n\t\t\t\tthis.used = true;\n\t\t\t\tthis.connectInput = input;\n\t\t\t\tthis.wire = input.wire;\n\t\t\t\tif (this.pointer) this.pointer.destroy();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'disconnect',\n\t\t\tvalue: function disconnect() {\n\t\t\t\tthis.used = false;\n\t\t\t\tthis.pointer = null;\n\t\t\t\tthis.connectInput = null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'mouseOverHandler',\n\t\t\tvalue: function mouseOverHandler(e) {\n\t\t\t\t//console.log(this.id + ' mouse over');\n\t\t\t\tif (!this.pointer && !this.used) {\n\t\t\t\t\tthis.fill('#f4d742');\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t\tthis.pointer = new _konva.Circle({\n\t\t\t\t\t\tx: this.x,\n\t\t\t\t\t\ty: this.y,\n\t\t\t\t\t\tradius: 8,\n\t\t\t\t\t\tfill: 'red',\n\t\t\t\t\t\tdraggable: true\n\t\t\t\t\t});\n\t\t\t\t\tthis.context.addElement(this.pointer);\n\t\t\t\t\tthis.pointer.on('dragstart', this.startPointer.bind(this));\n\t\t\t\t\tthis.pointer.on('dragmove', this.updatePointer.bind(this));\n\t\t\t\t\tthis.pointer.on('dragend', this.connectPointer.bind(this));\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'mouseOutHandler',\n\t\t\tvalue: function mouseOutHandler(e) {\n\t\t\t\tthis.fill('#f2f2f2');\n\t\t\t\tthis.context.draw();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'dblClickHandler',\n\t\t\tvalue: function dblClickHandler(e) {\n\t\t\t\tconsole.log('Double clicked...' + this.used);\n\t\t\t\tif (this.used) {\n\t\t\t\t\tthis.wire.destroy();\n\t\t\t\t\tthis.connectInput.disconnect();\n\t\t\t\t\tthis.disconnect();\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'startPointer',\n\t\t\tvalue: function startPointer(e) {\n\t\t\t\tvar x = e.evt.offsetX;\n\t\t\t\tvar y = e.evt.offsetY;\n\t\t\t\tconsole.log('Start => x: ' + x + ', y: ' + y);\n\t\t\t\tthis.wire = new _Wire2.default([this.x, this.y, (this.x + x) / 2, this.y, (this.x + x) / 2, y, x, y], this.context);\n\t\t\t\tthis.context.addElement(this.wire);\n\t\t\t\tthis.context.draw();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'updatePointer',\n\t\t\tvalue: function updatePointer(e) {\n\t\t\t\tvar x = e.evt.offsetX;\n\t\t\t\tvar y = e.evt.offsetY;\n\t\t\t\tthis.wire.points(this.wire.update([this.x, this.y, (this.x + x) / 2, this.y, (this.x + x) / 2, y, x, y]));\n\t\t\t\tthis.context.draw();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'connectPointer',\n\t\t\tvalue: function connectPointer(e) {\n\t\t\t\tvar x = e.evt.offsetX;\n\t\t\t\tvar y = e.evt.offsetY;\n\t\t\t\tvar connected = false;\n\t\t\t\tconsole.log('Connect => x: ' + x + ', y: ' + y);\n\t\t\t\tthis.wire.points([this.x, this.y, (this.x + x) / 2, this.y, (this.x + x) / 2, y, x, y]);\n\t\t\t\tconsole.log('Checking elements...');\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = this.context.getElements()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar el = _step.value;\n\t\n\t\t\t\t\t\tif (el.type === 'Input') {\n\t\t\t\t\t\t\tconsole.log(el.id + ' x:' + el.x + ' \\n\\t\\t\\t\\t\\ty:' + el.y + ' with r:' + el.radius);\n\t\t\t\t\t\t\tif (el.x + el.radius * 2 >= x && el.x - el.radius * 2 <= x && el.y - el.radius * 2 <= y && el.y + el.radius * 2 >= y) if (el.used === false) {\n\t\t\t\t\t\t\t\tel.connect(this);\n\t\t\t\t\t\t\t\tthis.connect(el);\n\t\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\t\tthis.wire.connected = true;\n\t\t\t\t\t\t\t\tthis.wire.points([this.x, this.y, (this.x + x) / 2, this.y, (this.x + x) / 2, y, el.x, el.y]);\n\t\t\t\t\t\t\t\tthis.pointer.destroy();\n\t\t\t\t\t\t\t\tthis.context.draw();\n\t\t\t\t\t\t\t\tconsole.log('Element - ' + el.id);\n\t\t\t\t\t\t\t\tconsole.log('Connected... Success');\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tconsole.log('Connection failure...');\n\t\t\t\tif (connected === false) {\n\t\t\t\t\tthis.wire.destroy();\n\t\t\t\t\tthis.pointer.destroy();\n\t\t\t\t\tthis.connecting = false;\n\t\t\t\t\tthis.used = false;\n\t\t\t\t\tthis.pointer = null;\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Input;\n\t}(_konva.Circle);\n\t\n\texports.default = Input;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cof = __webpack_require__(19);\n\tmodule.exports = function(it, msg){\n\t  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);\n\t  return +it;\n\t};\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n\t'use strict';\n\tvar toObject = __webpack_require__(10)\n\t  , toIndex  = __webpack_require__(40)\n\t  , toLength = __webpack_require__(9);\n\t\n\tmodule.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){\n\t  var O     = toObject(this)\n\t    , len   = toLength(O.length)\n\t    , to    = toIndex(target, len)\n\t    , from  = toIndex(start, len)\n\t    , end   = arguments.length > 2 ? arguments[2] : undefined\n\t    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)\n\t    , inc   = 1;\n\t  if(from < to && to < from + count){\n\t    inc  = -1;\n\t    from += count - 1;\n\t    to   += count - 1;\n\t  }\n\t  while(count-- > 0){\n\t    if(from in O)O[to] = O[from];\n\t    else delete O[to];\n\t    to   += inc;\n\t    from += inc;\n\t  } return O;\n\t};\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar forOf = __webpack_require__(43);\n\t\n\tmodule.exports = function(iter, ITERATOR){\n\t  var result = [];\n\t  forOf(iter, false, result.push, result, ITERATOR);\n\t  return result;\n\t};\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar aFunction = __webpack_require__(12)\n\t  , toObject  = __webpack_require__(10)\n\t  , IObject   = __webpack_require__(48)\n\t  , toLength  = __webpack_require__(9);\n\t\n\tmodule.exports = function(that, callbackfn, aLen, memo, isRight){\n\t  aFunction(callbackfn);\n\t  var O      = toObject(that)\n\t    , self   = IObject(O)\n\t    , length = toLength(O.length)\n\t    , index  = isRight ? length - 1 : 0\n\t    , i      = isRight ? -1 : 1;\n\t  if(aLen < 2)for(;;){\n\t    if(index in self){\n\t      memo = self[index];\n\t      index += i;\n\t      break;\n\t    }\n\t    index += i;\n\t    if(isRight ? index < 0 : length <= index){\n\t      throw TypeError('Reduce of empty array with no initial value');\n\t    }\n\t  }\n\t  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){\n\t    memo = callbackfn(memo, self[index], index, O);\n\t  }\n\t  return memo;\n\t};\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar aFunction  = __webpack_require__(12)\n\t  , isObject   = __webpack_require__(5)\n\t  , invoke     = __webpack_require__(55)\n\t  , arraySlice = [].slice\n\t  , factories  = {};\n\t\n\tvar construct = function(F, len, args){\n\t  if(!(len in factories)){\n\t    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';\n\t    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n\t  } return factories[len](F, args);\n\t};\n\t\n\tmodule.exports = Function.bind || function bind(that /*, args... */){\n\t  var fn       = aFunction(this)\n\t    , partArgs = arraySlice.call(arguments, 1);\n\t  var bound = function(/* args... */){\n\t    var args = partArgs.concat(arraySlice.call(arguments));\n\t    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n\t  };\n\t  if(isObject(fn.prototype))bound.prototype = fn.prototype;\n\t  return bound;\n\t};\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar dP          = __webpack_require__(8).f\n\t  , create      = __webpack_require__(35)\n\t  , redefineAll = __webpack_require__(38)\n\t  , ctx         = __webpack_require__(26)\n\t  , anInstance  = __webpack_require__(33)\n\t  , defined     = __webpack_require__(20)\n\t  , forOf       = __webpack_require__(43)\n\t  , $iterDefine = __webpack_require__(72)\n\t  , step        = __webpack_require__(100)\n\t  , setSpecies  = __webpack_require__(39)\n\t  , DESCRIPTORS = __webpack_require__(7)\n\t  , fastKey     = __webpack_require__(29).fastKey\n\t  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\t\n\tvar getEntry = function(that, key){\n\t  // fast case\n\t  var index = fastKey(key), entry;\n\t  if(index !== 'F')return that._i[index];\n\t  // frozen object case\n\t  for(entry = that._f; entry; entry = entry.n){\n\t    if(entry.k == key)return entry;\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n\t    var C = wrapper(function(that, iterable){\n\t      anInstance(that, C, NAME, '_i');\n\t      that._i = create(null); // index\n\t      that._f = undefined;    // first entry\n\t      that._l = undefined;    // last entry\n\t      that[SIZE] = 0;         // size\n\t      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n\t    });\n\t    redefineAll(C.prototype, {\n\t      // 23.1.3.1 Map.prototype.clear()\n\t      // 23.2.3.2 Set.prototype.clear()\n\t      clear: function clear(){\n\t        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n\t          entry.r = true;\n\t          if(entry.p)entry.p = entry.p.n = undefined;\n\t          delete data[entry.i];\n\t        }\n\t        that._f = that._l = undefined;\n\t        that[SIZE] = 0;\n\t      },\n\t      // 23.1.3.3 Map.prototype.delete(key)\n\t      // 23.2.3.4 Set.prototype.delete(value)\n\t      'delete': function(key){\n\t        var that  = this\n\t          , entry = getEntry(that, key);\n\t        if(entry){\n\t          var next = entry.n\n\t            , prev = entry.p;\n\t          delete that._i[entry.i];\n\t          entry.r = true;\n\t          if(prev)prev.n = next;\n\t          if(next)next.p = prev;\n\t          if(that._f == entry)that._f = next;\n\t          if(that._l == entry)that._l = prev;\n\t          that[SIZE]--;\n\t        } return !!entry;\n\t      },\n\t      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n\t      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n\t      forEach: function forEach(callbackfn /*, that = undefined */){\n\t        anInstance(this, C, 'forEach');\n\t        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n\t          , entry;\n\t        while(entry = entry ? entry.n : this._f){\n\t          f(entry.v, entry.k, this);\n\t          // revert to the last existing entry\n\t          while(entry && entry.r)entry = entry.p;\n\t        }\n\t      },\n\t      // 23.1.3.7 Map.prototype.has(key)\n\t      // 23.2.3.7 Set.prototype.has(value)\n\t      has: function has(key){\n\t        return !!getEntry(this, key);\n\t      }\n\t    });\n\t    if(DESCRIPTORS)dP(C.prototype, 'size', {\n\t      get: function(){\n\t        return defined(this[SIZE]);\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  def: function(that, key, value){\n\t    var entry = getEntry(that, key)\n\t      , prev, index;\n\t    // change existing entry\n\t    if(entry){\n\t      entry.v = value;\n\t    // create new entry\n\t    } else {\n\t      that._l = entry = {\n\t        i: index = fastKey(key, true), // <- index\n\t        k: key,                        // <- key\n\t        v: value,                      // <- value\n\t        p: prev = that._l,             // <- previous entry\n\t        n: undefined,                  // <- next entry\n\t        r: false                       // <- removed\n\t      };\n\t      if(!that._f)that._f = entry;\n\t      if(prev)prev.n = entry;\n\t      that[SIZE]++;\n\t      // add to index\n\t      if(index !== 'F')that._i[index] = entry;\n\t    } return that;\n\t  },\n\t  getEntry: getEntry,\n\t  setStrong: function(C, NAME, IS_MAP){\n\t    // add .keys, .values, .entries, [@@iterator]\n\t    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n\t    $iterDefine(C, NAME, function(iterated, kind){\n\t      this._t = iterated;  // target\n\t      this._k = kind;      // kind\n\t      this._l = undefined; // previous\n\t    }, function(){\n\t      var that  = this\n\t        , kind  = that._k\n\t        , entry = that._l;\n\t      // revert to the last existing entry\n\t      while(entry && entry.r)entry = entry.p;\n\t      // get next entry\n\t      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n\t        // or finish the iteration\n\t        that._t = undefined;\n\t        return step(1);\n\t      }\n\t      // return step by kind\n\t      if(kind == 'keys'  )return step(0, entry.k);\n\t      if(kind == 'values')return step(0, entry.v);\n\t      return step(0, [entry.k, entry.v]);\n\t    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\t\n\t    // add [@@species], 23.1.2.2, 23.2.2.2\n\t    setSpecies(NAME);\n\t  }\n\t};\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\tvar classof = __webpack_require__(47)\n\t  , from    = __webpack_require__(91);\n\tmodule.exports = function(NAME){\n\t  return function toJSON(){\n\t    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n\t    return from(this);\n\t  };\n\t};\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar redefineAll       = __webpack_require__(38)\n\t  , getWeak           = __webpack_require__(29).getWeak\n\t  , anObject          = __webpack_require__(2)\n\t  , isObject          = __webpack_require__(5)\n\t  , anInstance        = __webpack_require__(33)\n\t  , forOf             = __webpack_require__(43)\n\t  , createArrayMethod = __webpack_require__(22)\n\t  , $has              = __webpack_require__(11)\n\t  , arrayFind         = createArrayMethod(5)\n\t  , arrayFindIndex    = createArrayMethod(6)\n\t  , id                = 0;\n\t\n\t// fallback for uncaught frozen keys\n\tvar uncaughtFrozenStore = function(that){\n\t  return that._l || (that._l = new UncaughtFrozenStore);\n\t};\n\tvar UncaughtFrozenStore = function(){\n\t  this.a = [];\n\t};\n\tvar findUncaughtFrozen = function(store, key){\n\t  return arrayFind(store.a, function(it){\n\t    return it[0] === key;\n\t  });\n\t};\n\tUncaughtFrozenStore.prototype = {\n\t  get: function(key){\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if(entry)return entry[1];\n\t  },\n\t  has: function(key){\n\t    return !!findUncaughtFrozen(this, key);\n\t  },\n\t  set: function(key, value){\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if(entry)entry[1] = value;\n\t    else this.a.push([key, value]);\n\t  },\n\t  'delete': function(key){\n\t    var index = arrayFindIndex(this.a, function(it){\n\t      return it[0] === key;\n\t    });\n\t    if(~index)this.a.splice(index, 1);\n\t    return !!~index;\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n\t    var C = wrapper(function(that, iterable){\n\t      anInstance(that, C, NAME, '_i');\n\t      that._i = id++;      // collection id\n\t      that._l = undefined; // leak store for uncaught frozen objects\n\t      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n\t    });\n\t    redefineAll(C.prototype, {\n\t      // 23.3.3.2 WeakMap.prototype.delete(key)\n\t      // 23.4.3.3 WeakSet.prototype.delete(value)\n\t      'delete': function(key){\n\t        if(!isObject(key))return false;\n\t        var data = getWeak(key);\n\t        if(data === true)return uncaughtFrozenStore(this)['delete'](key);\n\t        return data && $has(data, this._i) && delete data[this._i];\n\t      },\n\t      // 23.3.3.4 WeakMap.prototype.has(key)\n\t      // 23.4.3.4 WeakSet.prototype.has(value)\n\t      has: function has(key){\n\t        if(!isObject(key))return false;\n\t        var data = getWeak(key);\n\t        if(data === true)return uncaughtFrozenStore(this).has(key);\n\t        return data && $has(data, this._i);\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  def: function(that, key, value){\n\t    var data = getWeak(anObject(key), true);\n\t    if(data === true)uncaughtFrozenStore(that).set(key, value);\n\t    else data[that._i] = value;\n\t    return that;\n\t  },\n\t  ufstore: uncaughtFrozenStore\n\t};\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(7) && !__webpack_require__(4)(function(){\n\t  return Object.defineProperty(__webpack_require__(64)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.3 Number.isInteger(number)\n\tvar isObject = __webpack_require__(5)\n\t  , floor    = Math.floor;\n\tmodule.exports = function isInteger(it){\n\t  return !isObject(it) && isFinite(it) && floor(it) === it;\n\t};\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// call something on iterator step with safe closing on error\n\tvar anObject = __webpack_require__(2);\n\tmodule.exports = function(iterator, fn, value, entries){\n\t  try {\n\t    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  // 7.4.6 IteratorClose(iterator, completion)\n\t  } catch(e){\n\t    var ret = iterator['return'];\n\t    if(ret !== undefined)anObject(ret.call(iterator));\n\t    throw e;\n\t  }\n\t};\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(done, value){\n\t  return {value: value, done: !!done};\n\t};\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n\t// 20.2.2.20 Math.log1p(x)\n\tmodule.exports = Math.log1p || function log1p(x){\n\t  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n\t};\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar getKeys  = __webpack_require__(37)\n\t  , gOPS     = __webpack_require__(59)\n\t  , pIE      = __webpack_require__(49)\n\t  , toObject = __webpack_require__(10)\n\t  , IObject  = __webpack_require__(48)\n\t  , $assign  = Object.assign;\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(4)(function(){\n\t  var A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , aLen  = arguments.length\n\t    , index = 1\n\t    , getSymbols = gOPS.f\n\t    , isEnum     = pIE.f;\n\t  while(aLen > index){\n\t    var S      = IObject(arguments[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  } return T;\n\t} : $assign;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP       = __webpack_require__(8)\n\t  , anObject = __webpack_require__(2)\n\t  , getKeys  = __webpack_require__(37);\n\t\n\tmodule.exports = __webpack_require__(7) ? Object.defineProperties : function defineProperties(O, Properties){\n\t  anObject(O);\n\t  var keys   = getKeys(Properties)\n\t    , length = keys.length\n\t    , i = 0\n\t    , P;\n\t  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n\t  return O;\n\t};\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\tvar toIObject = __webpack_require__(16)\n\t  , gOPN      = __webpack_require__(36).f\n\t  , toString  = {}.toString;\n\t\n\tvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n\t  ? Object.getOwnPropertyNames(window) : [];\n\t\n\tvar getWindowNames = function(it){\n\t  try {\n\t    return gOPN(it);\n\t  } catch(e){\n\t    return windowNames.slice();\n\t  }\n\t};\n\t\n\tmodule.exports.f = function getOwnPropertyNames(it){\n\t  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n\t};\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(11)\n\t  , toIObject    = __webpack_require__(16)\n\t  , arrayIndexOf = __webpack_require__(51)(false)\n\t  , IE_PROTO     = __webpack_require__(77)('IE_PROTO');\n\t\n\tmodule.exports = function(object, names){\n\t  var O      = toIObject(object)\n\t    , i      = 0\n\t    , result = []\n\t    , key;\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while(names.length > i)if(has(O, key = names[i++])){\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getKeys   = __webpack_require__(37)\n\t  , toIObject = __webpack_require__(16)\n\t  , isEnum    = __webpack_require__(49).f;\n\tmodule.exports = function(isEntries){\n\t  return function(it){\n\t    var O      = toIObject(it)\n\t      , keys   = getKeys(O)\n\t      , length = keys.length\n\t      , i      = 0\n\t      , result = []\n\t      , key;\n\t    while(length > i)if(isEnum.call(O, key = keys[i++])){\n\t      result.push(isEntries ? [key, O[key]] : O[key]);\n\t    } return result;\n\t  };\n\t};\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// all object keys, includes non-enumerable and symbols\n\tvar gOPN     = __webpack_require__(36)\n\t  , gOPS     = __webpack_require__(59)\n\t  , anObject = __webpack_require__(2)\n\t  , Reflect  = __webpack_require__(3).Reflect;\n\tmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it){\n\t  var keys       = gOPN.f(anObject(it))\n\t    , getSymbols = gOPS.f;\n\t  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n\t};\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $parseFloat = __webpack_require__(3).parseFloat\n\t  , $trim       = __webpack_require__(46).trim;\n\t\n\tmodule.exports = 1 / $parseFloat(__webpack_require__(82) + '-0') !== -Infinity ? function parseFloat(str){\n\t  var string = $trim(String(str), 3)\n\t    , result = $parseFloat(string);\n\t  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n\t} : $parseFloat;\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $parseInt = __webpack_require__(3).parseInt\n\t  , $trim     = __webpack_require__(46).trim\n\t  , ws        = __webpack_require__(82)\n\t  , hex       = /^[\\-+]?0[xX]/;\n\t\n\tmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){\n\t  var string = $trim(String(str), 3);\n\t  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n\t} : $parseInt;\n\n/***/ },\n/* 110 */\n/***/ function(module, exports) {\n\n\t// 7.2.9 SameValue(x, y)\n\tmodule.exports = Object.is || function is(x, y){\n\t  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n\t};\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-string-pad-start-end\n\tvar toLength = __webpack_require__(9)\n\t  , repeat   = __webpack_require__(81)\n\t  , defined  = __webpack_require__(20);\n\t\n\tmodule.exports = function(that, maxLength, fillString, left){\n\t  var S            = String(defined(that))\n\t    , stringLength = S.length\n\t    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n\t    , intMaxLength = toLength(maxLength);\n\t  if(intMaxLength <= stringLength || fillStr == '')return S;\n\t  var fillLen = intMaxLength - stringLength\n\t    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n\t  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n\t  return left ? stringFiller + S : S + stringFiller;\n\t};\n\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.f = __webpack_require__(6);\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar strong = __webpack_require__(94);\n\t\n\t// 23.1 Map Objects\n\tmodule.exports = __webpack_require__(52)('Map', function(get){\n\t  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n\t}, {\n\t  // 23.1.3.6 Map.prototype.get(key)\n\t  get: function get(key){\n\t    var entry = strong.getEntry(this, key);\n\t    return entry && entry.v;\n\t  },\n\t  // 23.1.3.9 Map.prototype.set(key, value)\n\t  set: function set(key, value){\n\t    return strong.def(this, key === 0 ? 0 : key, value);\n\t  }\n\t}, strong, true);\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.2.5.3 get RegExp.prototype.flags()\n\tif(__webpack_require__(7) && /./g.flags != 'g')__webpack_require__(8).f(RegExp.prototype, 'flags', {\n\t  configurable: true,\n\t  get: __webpack_require__(54)\n\t});\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar strong = __webpack_require__(94);\n\t\n\t// 23.2 Set Objects\n\tmodule.exports = __webpack_require__(52)('Set', function(get){\n\t  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n\t}, {\n\t  // 23.2.3.1 Set.prototype.add(value)\n\t  add: function add(value){\n\t    return strong.def(this, value = value === 0 ? 0 : value, value);\n\t  }\n\t}, strong);\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar each         = __webpack_require__(22)(0)\n\t  , redefine     = __webpack_require__(14)\n\t  , meta         = __webpack_require__(29)\n\t  , assign       = __webpack_require__(102)\n\t  , weak         = __webpack_require__(96)\n\t  , isObject     = __webpack_require__(5)\n\t  , getWeak      = meta.getWeak\n\t  , isExtensible = Object.isExtensible\n\t  , uncaughtFrozenStore = weak.ufstore\n\t  , tmp          = {}\n\t  , InternalMap;\n\t\n\tvar wrapper = function(get){\n\t  return function WeakMap(){\n\t    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n\t  };\n\t};\n\t\n\tvar methods = {\n\t  // 23.3.3.3 WeakMap.prototype.get(key)\n\t  get: function get(key){\n\t    if(isObject(key)){\n\t      var data = getWeak(key);\n\t      if(data === true)return uncaughtFrozenStore(this).get(key);\n\t      return data ? data[this._i] : undefined;\n\t    }\n\t  },\n\t  // 23.3.3.5 WeakMap.prototype.set(key, value)\n\t  set: function set(key, value){\n\t    return weak.def(this, key, value);\n\t  }\n\t};\n\t\n\t// 23.3 WeakMap Objects\n\tvar $WeakMap = module.exports = __webpack_require__(52)('WeakMap', wrapper, methods, weak, true, true);\n\t\n\t// IE11 WeakMap frozen keys fix\n\tif(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){\n\t  InternalMap = weak.getConstructor(wrapper);\n\t  assign(InternalMap.prototype, methods);\n\t  meta.NEED = true;\n\t  each(['delete', 'has', 'get', 'set'], function(key){\n\t    var proto  = $WeakMap.prototype\n\t      , method = proto[key];\n\t    redefine(proto, key, function(a, b){\n\t      // store frozen objects on internal weakmap shim\n\t      if(isObject(a) && !isExtensible(a)){\n\t        if(!this._f)this._f = new InternalMap;\n\t        var result = this._f[key](a, b);\n\t        return key == 'set' ? this : result;\n\t      // store all the rest on native weakmap\n\t      } return method.call(this, a, b);\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Capacity = function (_Rect) {\n\t\t_inherits(Capacity, _Rect);\n\t\n\t\tfunction Capacity() {\n\t\t\t_classCallCheck(this, Capacity);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Capacity.__proto__ || Object.getPrototypeOf(Capacity)).call(this));\n\t\n\t\t\t_this.inputs = [new Input(_this.x - 20, _this.y + 12.5, _this.context), new Input(_this.x + 70, _this.y + 12.5, _this.context)];\n\t\t\t_this.context.addElements(_this.inputs);\n\t\t\treturn _this;\n\t\t}\n\t\n\t\treturn Capacity;\n\t}(_konva.Rect);\n\t\n\texports.default = Capacity;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Inductivity = function (_Rect) {\n\t\t_inherits(Inductivity, _Rect);\n\t\n\t\tfunction Inductivity() {\n\t\t\t_classCallCheck(this, Inductivity);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Inductivity.__proto__ || Object.getPrototypeOf(Inductivity)).call(this));\n\t\n\t\t\t_this.inputs = [new Input(_this.x - 20, _this.y + 12.5, _this.context), new Input(_this.x + 70, _this.y + 12.5, _this.context)];\n\t\t\t_this.context.addElements(_this.inputs);\n\t\t\treturn _this;\n\t\t}\n\t\n\t\treturn Inductivity;\n\t}(_konva.Rect);\n\t\n\texports.default = Inductivity;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tvar _Screen = __webpack_require__(50);\n\t\n\tvar _Screen2 = _interopRequireDefault(_Screen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Regulator = function (_Circle) {\n\t\t_inherits(Regulator, _Circle);\n\t\n\t\tfunction Regulator(x, y, data, ctx) {\n\t\t\t_classCallCheck(this, Regulator);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Regulator.__proto__ || Object.getPrototypeOf(Regulator)).call(this, {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\t//width: 120,\n\t\t\t\t//height: 120,\n\t\t\t\tradius: 20,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: 'rgba(12,12,12,0.1)',\n\t\t\t\tstroke: 'black'\n\t\t\t}));\n\t\n\t\t\t_this.x = x;\n\t\t\t_this.y = y;\n\t\t\t_this.context = ctx;\n\t\t\t_this.pointer = new _konva.Line({\n\t\t\t\tpoints: [_this.x, _this.y, _this.x, _this.y - 20],\n\t\t\t\tstroke: 'black',\n\t\t\t\tstrokeWidth: 1\n\t\t\t});\n\t\t\t_this.data = data;\n\t\t\t_this.states = _this.data.map(function (el, index) {\n\t\t\t\tvar label = new _Screen2.default(_this.x + Math.cos(index * 180 / _this.data.length) * 20, _this.y + Math.sin(index * 180 / _this.data.length) * 20, 'yellow', 'black', el, 0.8);\n\t\t\t\tlabel.rotate(index * 180 / _this.data.length);\n\t\t\t\t_this.context.addElement(label);\n\t\n\t\t\t\treturn {\n\t\t\t\t\t'rotation': index * 180 / _this.data.length,\n\t\t\t\t\t'data': el,\n\t\t\t\t\t'label': label\n\t\t\t\t};\n\t\t\t});\n\t\n\t\t\t_this.stateId = 2;\n\t\t\t_this.curState = _this.states[_this.stateId];\n\t\t\tconsole.log('Curstate ' + JSON.stringify(_this.curState));\n\t\t\t_this.context.addElement(_this.pointer);\n\t\t\t_this.spining = false;\n\t\t\tconsole.log('states - ' + JSON.stringify(_this.states));\n\t\n\t\t\t_this.on('mousedown', function (e) {\n\t\t\t\t_this.spining = true;\n\t\t\t});\n\t\n\t\t\t_this.on('mousemove', function (e) {\n\t\t\t\tif (_this.spining === true) {\n\t\t\t\t\tif (e.evt.offsetX >= _this.x) {\n\t\t\t\t\t\t_this.spinRight();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this.spinLeft();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t_this.on('mouseup', function (e) {\n\t\t\t\t_this.spining = false;\n\t\t\t});\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Regulator, [{\n\t\t\tkey: 'spinRight',\n\t\t\tvalue: function spinRight() {\n\t\t\t\tconsole.log('Spining right');\n\t\t\t\tif (!this.stateId == this.data.length - 1) {\n\t\t\t\t\tthis.curState = this.states[++this.stateId];\n\t\t\t\t\t/*this.pointer.points([this.x, this.y, Math.sin(this.curState.rotation) * 20, Math.cos(this.curState.rotation) * 20]);*/\n\t\t\t\t\tthis.rotate(this.curState.rotation);\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'spinLeft',\n\t\t\tvalue: function spinLeft() {\n\t\t\t\tconsole.log('Spining left');\n\t\t\t\tif (!this.stateId == 0) {\n\t\t\t\t\tthis.curState = this.states[--this.stateId];\n\t\t\t\t\tthis.rotate(this.curState.rotation);\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'check',\n\t\t\tvalue: function check() {\n\t\t\t\tconsole.log('' + this.spining);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Regulator;\n\t}(_konva.Circle);\n\t\n\texports.default = Regulator;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tvar _Screen = __webpack_require__(50);\n\t\n\tvar _Screen2 = _interopRequireDefault(_Screen);\n\t\n\tvar _Input = __webpack_require__(88);\n\t\n\tvar _Input2 = _interopRequireDefault(_Input);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Resistor = function (_Rect) {\n\t\t_inherits(Resistor, _Rect);\n\t\n\t\tfunction Resistor(x, y, resistance, ctx) {\n\t\t\t_classCallCheck(this, Resistor);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Resistor.__proto__ || Object.getPrototypeOf(Resistor)).call(this, {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: 50,\n\t\t\t\theight: 25,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: 'rgba(12,12,12,0.1)',\n\t\t\t\tstroke: 'black'\n\t\t\t}));\n\t\n\t\t\t_this.tooltip = null;\n\t\t\t_this.context = ctx;\n\t\t\t_this.resistance = resistance;\n\t\t\t_this.x = x;\n\t\t\t_this.y = y;\n\t\n\t\t\t_this.inputs = [new _Input2.default(_this.x - 20, _this.y + 12.5, _this.context), new _Input2.default(_this.x + 70, _this.y + 12.5, _this.context)];\n\t\t\t_this.context.addElements(_this.inputs);\n\t\t\t_this.on('mouseover', _this.mouseOverHandler.bind(_this));\n\t\t\t_this.on('mouseout', _this.mouseOutHandler.bind(_this));\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Resistor, [{\n\t\t\tkey: 'mouseOverHandler',\n\t\t\tvalue: function mouseOverHandler(e) {\n\t\t\t\tif (!this.tooltip) {\n\t\t\t\t\tthis.tooltip = new _Screen2.default(this.x + 25, this.y + 12.5, 'black', '#f2f2f2', this.resistance + ' Ом', 0.8);\n\t\t\t\t\tthis.context.addElement(this.tooltip);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'mouseOutHandler',\n\t\t\tvalue: function mouseOutHandler(e) {\n\t\t\t\tif (this.tooltip) {\n\t\t\t\t\tthis.tooltip.destroy();\n\t\t\t\t\tthis.tooltip = null;\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Resistor;\n\t}(_konva.Rect);\n\t\n\texports.default = Resistor;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Stand = function (_Layer) {\n\t\t_inherits(Stand, _Layer);\n\t\n\t\tfunction Stand() {\n\t\t\t_classCallCheck(this, Stand);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Stand.__proto__ || Object.getPrototypeOf(Stand)).call(this));\n\t\n\t\t\tvar container = document.querySelector('#stand');\n\t\t\tvar width = container.offsetWidth;\n\t\t\tvar height = container.offsetHeight;\n\t\t\t_this.stage = new _konva.Stage({\n\t\t\t\tcontainer: 'stand',\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t});\n\t\t\t_this.elements = [];\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Stand, [{\n\t\t\tkey: 'addElement',\n\t\t\tvalue: function addElement(element) {\n\t\t\t\tthis.add(element);\n\t\t\t\tthis.stage.add(this);\n\t\t\t\tthis.elements.push(element);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'addElements',\n\t\t\tvalue: function addElements(elements) {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar element = _step.value;\n\t\n\t\t\t\t\t\tthis.add(element);\n\t\t\t\t\t\tthis.elements.push(element);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.stage.add(this);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getElements',\n\t\t\tvalue: function getElements() {\n\t\t\t\treturn this.elements;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Stand;\n\t}(_konva.Layer);\n\t\n\texports.default = Stand;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _konva = __webpack_require__(32);\n\t\n\tvar _Screen = __webpack_require__(50);\n\t\n\tvar _Screen2 = _interopRequireDefault(_Screen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Wire = function (_Line) {\n\t\t_inherits(Wire, _Line);\n\t\n\t\tfunction Wire(points, ctx) {\n\t\t\t_classCallCheck(this, Wire);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Wire.__proto__ || Object.getPrototypeOf(Wire)).call(this, {\n\t\t\t\tpoints: points,\n\t\t\t\tstroke: 'red',\n\t\t\t\tstokeWidth: 3\n\t\t\t}));\n\t\n\t\t\t_this.type = 'Wire';\n\t\t\t_this.connected = false;\n\t\t\t_this.x = (points[2] + points[0]) / 2;\n\t\t\t_this.y = (points[3] + points[1]) / 2;\n\t\t\t_this.id = _this.type + ' #' + Math.floor(Math.random() * 1000);\n\t\t\t_this.context = ctx;\n\t\t\t_this.tooltip = null;\n\t\t\t_this.on('mouseover', _this.mouseOverHandler.bind(_this));\n\t\t\t_this.on('mouseout', _this.mouseOutHandler.bind(_this));\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Wire, [{\n\t\t\tkey: 'mouseOverHandler',\n\t\t\tvalue: function mouseOverHandler(e) {\n\t\t\t\tif (this.connected && !this.tooltip) {\n\t\t\t\t\tthis.tooltip = new _Screen2.default(this.x, this.y, 'black', '#f2f2f2', '12 A');\n\t\t\t\t\tthis.context.addElement(this.tooltip);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'mouseOutHandler',\n\t\t\tvalue: function mouseOutHandler(e) {\n\t\t\t\tif (this.tooltip) {\n\t\t\t\t\tthis.tooltip.destroy();\n\t\t\t\t\tthis.tooltip = null;\n\t\t\t\t\tthis.context.draw();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update(points) {\n\t\t\t\tthis.x = (points[4] + points[0]) / 2;\n\t\t\t\tthis.y = (points[5] + points[1]) / 2;\n\t\t\t\treturn points;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Wire;\n\t}(_konva.Line);\n\t\n\texports.default = Wire;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(125);\n\t\n\t__webpack_require__(307);\n\t\n\tvar _standBuilder = __webpack_require__(124);\n\t\n\tvar _standBuilder2 = _interopRequireDefault(_standBuilder);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (false) {\n\t\tmodule.hot.accept();\n\t}\n\t\n\tvar standBuilder = new _standBuilder2.default();\n\tvar labs = {\n\t\t\"Lab_1\": {\n\t\t\t\"elements\": [{\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 100,\n\t\t\t\t\"y\": 100\n\t\t\t}, {\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 100,\n\t\t\t\t\"y\": 200\n\t\t\t}, {\n\t\t\t\t\"type\": \"Resistor\",\n\t\t\t\t\"x\": 250,\n\t\t\t\t\"y\": 300,\n\t\t\t\t\"resistance\": 100\n\t\t\t}]\n\t\t},\n\t\t\"Lab_2\": {\n\t\t\t\"elements\": [{\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 300,\n\t\t\t\t\"y\": 100\n\t\t\t}, {\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 100,\n\t\t\t\t\"y\": 200\n\t\t\t}, {\n\t\t\t\t\"type\": \"Resistor\",\n\t\t\t\t\"x\": 250,\n\t\t\t\t\"y\": 300,\n\t\t\t\t\"resistance\": 100\n\t\t\t}]\n\t\t}\n\t};\n\tvar LabList = document.getElementById(\"selectLab\");\n\tvar sendBtn = document.getElementById(\"sendBtn\");\n\tsendBtn.addEventListener('click', function (e) {\n\t\tconsole.log(standBuilder.toJSON());\n\t\tvar data = [{\n\t\t\ttype: \"Input\",\n\t\t\tx: 300,\n\t\t\ty: 100\n\t\t}, {\n\t\t\ttype: \"Input\",\n\t\t\tx: 100,\n\t\t\ty: 200\n\t\t}, {\n\t\t\ttype: \"Wire\",\n\t\t\tinput_1_id: '1',\n\t\t\tinput_2_id: '2'\n\t\t}];\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: \"http://localhost:3000/check\",\n\t\t\txhrFields: {\n\t\t\t\twithCredentials: false\n\t\t\t},\n\t\t\tcrossDomain: true,\n\t\t\tcontentType: 'application/json',\n\t\t\tdata: JSON.stringify(data)\n\t\t}).done(function (msg) {\n\t\t\talert(\"Answer = \" + JSON.stringify(msg));\n\t\t});\n\t});\n\tLabList.addEventListener('change', function (e) {\n\t\tchangeStand();\n\t});\n\tchangeStand();\n\t\n\tfunction changeStand() {\n\t\tif (standBuilder.isDirty === true) {\n\t\t\tstandBuilder.clear();\n\t\t}\n\t\tvar selectId = LabList.options.selectedIndex;\n\t\tvar labId = LabList.options[selectId].value;\n\t\tvar selectedLab = labs[labId];\n\t\tvar data = selectedLab;\n\t\tstandBuilder.build(data);\n\t}\n\t\n\t/* about page scroliing */\n\t\n\t/* Write JavaScript here */\n\t\n\t//Detecting MSIE versions\n\t/*var msIE = function(){\n\t\tvar ieVersion = 0;\n\t\tif (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;\n\t\t\tieVersion=new Number(RegExp.$1) // capture x.x portion and store as a number\n\t\t}\t\n\t\treturn {\n\t\t\tisIE: function(){\n\t\t\t\treturn ieVersion ? true : false;\n\t\t\t},\n\t\t\tisOldIE: function(){\n\t\t\t\treturn (ieVersion>0 && ieVersion<9);\n\t\t\t},\n\t\t\tgetIEVersion: function(){\n\t\t\t\treturn ieVersion;\n\t\t\t}\n\t\t}\n\t}();*/\n\t//console fix for IE8\n\tif (typeof console === \"undefined\" || typeof console.log === \"undefined\") {\n\t\tconsole = {};\n\t\tconsole.log = function () {};\n\t};\n\t\n\t/*\n\tvar currentPageIndex = 0;\n\tvar numberOfPages = 5;\n\tvar pageHeight = 800;\n\n\tvar currentSubPageIndex = 0;\n\tvar numberOfSubPages = 2;\n\tvar subPageHeight = 400;\n\n\tvar transitionDuration = 2000;\n\tvar quietPeriodBetweenTwoScrollEvents = 400;\n\tvar lastTransitionTime = 0;\n\tvar lastScrollEventTime = 0;\n\n\n\tfunction pageScroll(element, position) {\n\t\tif(msIE.isOldIE()){\n\t\t\t$(element).animate({scrollTop:(position)}, 800, 'swing', function(){});\n\t\t\treturn;\n\t\t}\n\t\tvar translation = \"translate3d(0,\"+(-(position))+\"px,0)\";\n\t\tif(msIE.isIE()){\n\t\t\tif(msIE.getIEVersion()==9 ){\n\t\t\t\ttranslation = \"translate(0,\"+(-(position))+\"px)\";\n\t\t\t}\n\t\t}\n\t\t$(element).css({\n\t\t\t'transform': translation,\n\t\t\t'-webkit-transform': translation,\n\t\t\t'-moz-transform': translation,\n\t\t\t'-o-transform': translation,\n\t\t\t'-ms-transform': translation\n\t\t});\n\t}\n\n\tfunction next(e){\n\t  if(!(currentPageIndex == (numberOfPages - 1))){\n\t\t\tcurrentPageIndex++;\n\t\t\tpageScroll(\"body\",currentPageIndex * pageHeight);\n\t\t}\n\t}\n\tfunction prev(e){\n\t\tif(!(currentPageIndex == 0)){\n\t\t\tcurrentPageIndex--;\n\t\t\tpageScroll(\"body\",currentPageIndex * pageHeight);\n\t\t}\n\t}\n\tfunction nextSubPage(e){\n\t\tif(!(currentSubPageIndex == (numberOfSubPages - 1))){\n\t\t\tcurrentSubPageIndex++;\n\t\t\tpageScroll(\".subScrollPage\", currentSubPageIndex * subPageHeight);\n\t\t\te.stopPropagation();\n\t\t}else{\n\t\t\t//next(e);\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n\tfunction prevSubPage(e){\n\t\tif(!(currentSubPageIndex == 0)){\n\t\t\tcurrentSubPageIndex--;\n\t\t\tpageScroll(\".subScrollPage\", currentSubPageIndex * subPageHeight);\n\t\t\te.stopPropagation();\n\t\t}else{\n\t\t\t//prev(e);\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n\n\n\n\t$( document ).ready(function() {\n\n\t\t$(\"body\").scrollsteps({\n\t\t\tup: prev,\n\t\t\tdown: next\n\t\t});\n\t\t$(\"#subScrollFrame\").scrollsteps({\n\t\t\tup: prevSubPage,\n\t\t\tdown: nextSubPage\n\t\t});\n\n\n\t\tpageHeight = window.innerHeight;\n\t\t$(\".fullScreenPage\").css(\"height\",pageHeight);\n\n\t});\n\n\t$( window ).resize(function() {\n\t\tpageHeight = window.innerHeight;\n\t\t$(\".fullScreenPage\").css(\"height\",pageHeight);\n\t\tpageScroll();\n\t});\n\n\t\t\t\n\t\t\t\n\t\t*/\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Stand = __webpack_require__(121);\n\t\n\tvar _Stand2 = _interopRequireDefault(_Stand);\n\t\n\tvar _Input = __webpack_require__(88);\n\t\n\tvar _Input2 = _interopRequireDefault(_Input);\n\t\n\tvar _Screen = __webpack_require__(50);\n\t\n\tvar _Screen2 = _interopRequireDefault(_Screen);\n\t\n\tvar _Regulator = __webpack_require__(119);\n\t\n\tvar _Regulator2 = _interopRequireDefault(_Regulator);\n\t\n\tvar _Resistor = __webpack_require__(120);\n\t\n\tvar _Resistor2 = _interopRequireDefault(_Resistor);\n\t\n\tvar _Inductivity = __webpack_require__(118);\n\t\n\tvar _Inductivity2 = _interopRequireDefault(_Inductivity);\n\t\n\tvar _Capacity = __webpack_require__(117);\n\t\n\tvar _Capacity2 = _interopRequireDefault(_Capacity);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar StandBuilder = function () {\n\t\tfunction StandBuilder() {\n\t\t\t_classCallCheck(this, StandBuilder);\n\t\n\t\t\tthis.stand = new _Stand2.default();\n\t\t\tthis.isDirty = false;\n\t\t}\n\t\n\t\t_createClass(StandBuilder, [{\n\t\t\tkey: 'build',\n\t\t\tvalue: function build(data) {\n\t\t\t\tthis.isDirty = true;\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = data.elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar el = _step.value;\n\t\n\t\t\t\t\t\tthis.stand.addElement(this.createElement(el));\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'clear',\n\t\t\tvalue: function clear() {\n\t\t\t\tthis.isDirty = false;\n\t\t\t\tthis.stand.elements.map(function (e) {\n\t\t\t\t\te.destroy();\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'createElement',\n\t\t\tvalue: function createElement(el) {\n\t\t\t\tvar element = void 0;\n\t\t\t\tswitch (el.type) {\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\telement = new _Input2.default(el.x, el.y, this.stand);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Screen':\n\t\t\t\t\t\telement = new _Screen2.default(el.x, el.y, el.textColor, el.backgroundColor, el.text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Regulator':\n\t\t\t\t\t\telement = new _Regulator2.default(el.x, el.y, el.data, this.stand);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Resistor':\n\t\t\t\t\t\telement = new _Resistor2.default(el.x, el.y, el.resistance, this.stand);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'toJSON',\n\t\t\tvalue: function toJSON() {\n\t\t\t\tvar elements = this.stand.getElements();\n\t\t\t\tvar standJSON = [];\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = elements[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar element = _step2.value;\n\t\n\t\t\t\t\t\tstandJSON.push({\n\t\t\t\t\t\t\ttype: element.type ? element.type : 'null',\n\t\t\t\t\t\t\tid: element.id ? element.id : 'null'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn standJSON;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn StandBuilder;\n\t}();\n\t\n\texports.default = StandBuilder;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t__webpack_require__(306);\n\t\n\t__webpack_require__(309);\n\t\n\t__webpack_require__(126);\n\t\n\t/* eslint max-len: 0 */\n\t\n\tif (global._babelPolyfill) {\n\t  throw new Error(\"only one instance of babel-polyfill is allowed\");\n\t}\n\tglobal._babelPolyfill = true;\n\t\n\t// Should be removed in the next major release:\n\t\n\tvar DEFINE_PROPERTY = \"defineProperty\";\n\tfunction define(O, key, value) {\n\t  O[key] || Object[DEFINE_PROPERTY](O, key, {\n\t    writable: true,\n\t    configurable: true,\n\t    value: value\n\t  });\n\t}\n\t\n\tdefine(String.prototype, \"padLeft\", \"\".padStart);\n\tdefine(String.prototype, \"padRight\", \"\".padEnd);\n\t\n\t\"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill\".split(\",\").forEach(function (key) {\n\t  [][key] && define(Array, key, Function.call.bind([][key]));\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(135);\n\tmodule.exports = __webpack_require__(25).RegExp.escape;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(5)\n\t  , isArray  = __webpack_require__(70)\n\t  , SPECIES  = __webpack_require__(6)('species');\n\t\n\tmodule.exports = function(original){\n\t  var C;\n\t  if(isArray(original)){\n\t    C = original.constructor;\n\t    // cross-realm fallback\n\t    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n\t    if(isObject(C)){\n\t      C = C[SPECIES];\n\t      if(C === null)C = undefined;\n\t    }\n\t  } return C === undefined ? Array : C;\n\t};\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\tvar speciesConstructor = __webpack_require__(127);\n\t\n\tmodule.exports = function(original, length){\n\t  return new (speciesConstructor(original))(length);\n\t};\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar anObject    = __webpack_require__(2)\n\t  , toPrimitive = __webpack_require__(24)\n\t  , NUMBER      = 'number';\n\t\n\tmodule.exports = function(hint){\n\t  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');\n\t  return toPrimitive(anObject(this), hint != NUMBER);\n\t};\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// all enumerable object keys, includes symbols\n\tvar getKeys = __webpack_require__(37)\n\t  , gOPS    = __webpack_require__(59)\n\t  , pIE     = __webpack_require__(49);\n\tmodule.exports = function(it){\n\t  var result     = getKeys(it)\n\t    , getSymbols = gOPS.f;\n\t  if(getSymbols){\n\t    var symbols = getSymbols(it)\n\t      , isEnum  = pIE.f\n\t      , i       = 0\n\t      , key;\n\t    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n\t  } return result;\n\t};\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getKeys   = __webpack_require__(37)\n\t  , toIObject = __webpack_require__(16);\n\tmodule.exports = function(object, el){\n\t  var O      = toIObject(object)\n\t    , keys   = getKeys(O)\n\t    , length = keys.length\n\t    , index  = 0\n\t    , key;\n\t  while(length > index)if(O[key = keys[index++]] === el)return key;\n\t};\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar path      = __webpack_require__(133)\n\t  , invoke    = __webpack_require__(55)\n\t  , aFunction = __webpack_require__(12);\n\tmodule.exports = function(/* ...pargs */){\n\t  var fn     = aFunction(this)\n\t    , length = arguments.length\n\t    , pargs  = Array(length)\n\t    , i      = 0\n\t    , _      = path._\n\t    , holder = false;\n\t  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;\n\t  return function(/* ...args */){\n\t    var that = this\n\t      , aLen = arguments.length\n\t      , j = 0, k = 0, args;\n\t    if(!holder && !aLen)return invoke(fn, pargs, that);\n\t    args = pargs.slice();\n\t    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];\n\t    while(aLen > k)args.push(arguments[k++]);\n\t    return invoke(fn, args, that);\n\t  };\n\t};\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(3);\n\n/***/ },\n/* 134 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(regExp, replace){\n\t  var replacer = replace === Object(replace) ? function(part){\n\t    return replace[part];\n\t  } : replace;\n\t  return function(it){\n\t    return String(it).replace(regExp, replacer);\n\t  };\n\t};\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/benjamingr/RexExp.escape\n\tvar $export = __webpack_require__(1)\n\t  , $re     = __webpack_require__(134)(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\n\t$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});\n\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.P, 'Array', {copyWithin: __webpack_require__(90)});\n\t\n\t__webpack_require__(42)('copyWithin');\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $every  = __webpack_require__(22)(4);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(21)([].every, true), 'Array', {\n\t  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\n\t  every: function every(callbackfn /* , thisArg */){\n\t    return $every(this, callbackfn, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.P, 'Array', {fill: __webpack_require__(62)});\n\t\n\t__webpack_require__(42)('fill');\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $filter = __webpack_require__(22)(2);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(21)([].filter, true), 'Array', {\n\t  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n\t  filter: function filter(callbackfn /* , thisArg */){\n\t    return $filter(this, callbackfn, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\tvar $export = __webpack_require__(1)\n\t  , $find   = __webpack_require__(22)(6)\n\t  , KEY     = 'findIndex'\n\t  , forced  = true;\n\t// Shouldn't skip holes\n\tif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n\t$export($export.P + $export.F * forced, 'Array', {\n\t  findIndex: function findIndex(callbackfn/*, that = undefined */){\n\t    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\t__webpack_require__(42)(KEY);\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\tvar $export = __webpack_require__(1)\n\t  , $find   = __webpack_require__(22)(5)\n\t  , KEY     = 'find'\n\t  , forced  = true;\n\t// Shouldn't skip holes\n\tif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n\t$export($export.P + $export.F * forced, 'Array', {\n\t  find: function find(callbackfn/*, that = undefined */){\n\t    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\t__webpack_require__(42)(KEY);\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export  = __webpack_require__(1)\n\t  , $forEach = __webpack_require__(22)(0)\n\t  , STRICT   = __webpack_require__(21)([].forEach, true);\n\t\n\t$export($export.P + $export.F * !STRICT, 'Array', {\n\t  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n\t  forEach: function forEach(callbackfn /* , thisArg */){\n\t    return $forEach(this, callbackfn, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ctx            = __webpack_require__(26)\n\t  , $export        = __webpack_require__(1)\n\t  , toObject       = __webpack_require__(10)\n\t  , call           = __webpack_require__(99)\n\t  , isArrayIter    = __webpack_require__(69)\n\t  , toLength       = __webpack_require__(9)\n\t  , createProperty = __webpack_require__(63)\n\t  , getIterFn      = __webpack_require__(86);\n\t\n\t$export($export.S + $export.F * !__webpack_require__(57)(function(iter){ Array.from(iter); }), 'Array', {\n\t  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n\t  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n\t    var O       = toObject(arrayLike)\n\t      , C       = typeof this == 'function' ? this : Array\n\t      , aLen    = arguments.length\n\t      , mapfn   = aLen > 1 ? arguments[1] : undefined\n\t      , mapping = mapfn !== undefined\n\t      , index   = 0\n\t      , iterFn  = getIterFn(O)\n\t      , length, result, step, iterator;\n\t    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n\t    // if object isn't iterable or it's array with default iterator - use simple case\n\t    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n\t      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n\t        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n\t      }\n\t    } else {\n\t      length = toLength(O.length);\n\t      for(result = new C(length); length > index; index++){\n\t        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n\t      }\n\t    }\n\t    result.length = index;\n\t    return result;\n\t  }\n\t});\n\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export       = __webpack_require__(1)\n\t  , $indexOf      = __webpack_require__(51)(false)\n\t  , $native       = [].indexOf\n\t  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\t\n\t$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(21)($native)), 'Array', {\n\t  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n\t  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){\n\t    return NEGATIVE_ZERO\n\t      // convert -0 to +0\n\t      ? $native.apply(this, arguments) || 0\n\t      : $indexOf(this, searchElement, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Array', {isArray: __webpack_require__(70)});\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 22.1.3.13 Array.prototype.join(separator)\n\tvar $export   = __webpack_require__(1)\n\t  , toIObject = __webpack_require__(16)\n\t  , arrayJoin = [].join;\n\t\n\t// fallback for not array-like strings\n\t$export($export.P + $export.F * (__webpack_require__(48) != Object || !__webpack_require__(21)(arrayJoin)), 'Array', {\n\t  join: function join(separator){\n\t    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n\t  }\n\t});\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export       = __webpack_require__(1)\n\t  , toIObject     = __webpack_require__(16)\n\t  , toInteger     = __webpack_require__(31)\n\t  , toLength      = __webpack_require__(9)\n\t  , $native       = [].lastIndexOf\n\t  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\t\n\t$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(21)($native)), 'Array', {\n\t  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n\t  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){\n\t    // convert -0 to +0\n\t    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;\n\t    var O      = toIObject(this)\n\t      , length = toLength(O.length)\n\t      , index  = length - 1;\n\t    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));\n\t    if(index < 0)index = length + index;\n\t    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;\n\t    return -1;\n\t  }\n\t});\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $map    = __webpack_require__(22)(1);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(21)([].map, true), 'Array', {\n\t  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n\t  map: function map(callbackfn /* , thisArg */){\n\t    return $map(this, callbackfn, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export        = __webpack_require__(1)\n\t  , createProperty = __webpack_require__(63);\n\t\n\t// WebKit Array.of isn't generic\n\t$export($export.S + $export.F * __webpack_require__(4)(function(){\n\t  function F(){}\n\t  return !(Array.of.call(F) instanceof F);\n\t}), 'Array', {\n\t  // 22.1.2.3 Array.of( ...items)\n\t  of: function of(/* ...args */){\n\t    var index  = 0\n\t      , aLen   = arguments.length\n\t      , result = new (typeof this == 'function' ? this : Array)(aLen);\n\t    while(aLen > index)createProperty(result, index, arguments[index++]);\n\t    result.length = aLen;\n\t    return result;\n\t  }\n\t});\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $reduce = __webpack_require__(92);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(21)([].reduceRight, true), 'Array', {\n\t  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n\t  reduceRight: function reduceRight(callbackfn /* , initialValue */){\n\t    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n\t  }\n\t});\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $reduce = __webpack_require__(92);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(21)([].reduce, true), 'Array', {\n\t  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\n\t  reduce: function reduce(callbackfn /* , initialValue */){\n\t    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\n\t  }\n\t});\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export    = __webpack_require__(1)\n\t  , html       = __webpack_require__(67)\n\t  , cof        = __webpack_require__(19)\n\t  , toIndex    = __webpack_require__(40)\n\t  , toLength   = __webpack_require__(9)\n\t  , arraySlice = [].slice;\n\t\n\t// fallback for not array-like ES3 strings and DOM objects\n\t$export($export.P + $export.F * __webpack_require__(4)(function(){\n\t  if(html)arraySlice.call(html);\n\t}), 'Array', {\n\t  slice: function slice(begin, end){\n\t    var len   = toLength(this.length)\n\t      , klass = cof(this);\n\t    end = end === undefined ? len : end;\n\t    if(klass == 'Array')return arraySlice.call(this, begin, end);\n\t    var start  = toIndex(begin, len)\n\t      , upTo   = toIndex(end, len)\n\t      , size   = toLength(upTo - start)\n\t      , cloned = Array(size)\n\t      , i      = 0;\n\t    for(; i < size; i++)cloned[i] = klass == 'String'\n\t      ? this.charAt(start + i)\n\t      : this[start + i];\n\t    return cloned;\n\t  }\n\t});\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $some   = __webpack_require__(22)(3);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(21)([].some, true), 'Array', {\n\t  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\n\t  some: function some(callbackfn /* , thisArg */){\n\t    return $some(this, callbackfn, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export   = __webpack_require__(1)\n\t  , aFunction = __webpack_require__(12)\n\t  , toObject  = __webpack_require__(10)\n\t  , fails     = __webpack_require__(4)\n\t  , $sort     = [].sort\n\t  , test      = [1, 2, 3];\n\t\n\t$export($export.P + $export.F * (fails(function(){\n\t  // IE8-\n\t  test.sort(undefined);\n\t}) || !fails(function(){\n\t  // V8 bug\n\t  test.sort(null);\n\t  // Old WebKit\n\t}) || !__webpack_require__(21)($sort)), 'Array', {\n\t  // 22.1.3.25 Array.prototype.sort(comparefn)\n\t  sort: function sort(comparefn){\n\t    return comparefn === undefined\n\t      ? $sort.call(toObject(this))\n\t      : $sort.call(toObject(this), aFunction(comparefn));\n\t  }\n\t});\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(39)('Array');\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.3.3.1 / 15.9.4.4 Date.now()\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\n\tvar $export = __webpack_require__(1)\n\t  , fails   = __webpack_require__(4)\n\t  , getTime = Date.prototype.getTime;\n\t\n\tvar lz = function(num){\n\t  return num > 9 ? num : '0' + num;\n\t};\n\t\n\t// PhantomJS / old WebKit has a broken implementations\n\t$export($export.P + $export.F * (fails(function(){\n\t  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';\n\t}) || !fails(function(){\n\t  new Date(NaN).toISOString();\n\t})), 'Date', {\n\t  toISOString: function toISOString(){\n\t    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');\n\t    var d = this\n\t      , y = d.getUTCFullYear()\n\t      , m = d.getUTCMilliseconds()\n\t      , s = y < 0 ? '-' : y > 9999 ? '+' : '';\n\t    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n\t      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n\t      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n\t      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n\t  }\n\t});\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export     = __webpack_require__(1)\n\t  , toObject    = __webpack_require__(10)\n\t  , toPrimitive = __webpack_require__(24);\n\t\n\t$export($export.P + $export.F * __webpack_require__(4)(function(){\n\t  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;\n\t}), 'Date', {\n\t  toJSON: function toJSON(key){\n\t    var O  = toObject(this)\n\t      , pv = toPrimitive(O);\n\t    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n\t  }\n\t});\n\n/***/ },\n/* 159 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar TO_PRIMITIVE = __webpack_require__(6)('toPrimitive')\n\t  , proto        = Date.prototype;\n\t\n\tif(!(TO_PRIMITIVE in proto))__webpack_require__(13)(proto, TO_PRIMITIVE, __webpack_require__(129));\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar DateProto    = Date.prototype\n\t  , INVALID_DATE = 'Invalid Date'\n\t  , TO_STRING    = 'toString'\n\t  , $toString    = DateProto[TO_STRING]\n\t  , getTime      = DateProto.getTime;\n\tif(new Date(NaN) + '' != INVALID_DATE){\n\t  __webpack_require__(14)(DateProto, TO_STRING, function toString(){\n\t    var value = getTime.call(this);\n\t    return value === value ? $toString.call(this) : INVALID_DATE;\n\t  });\n\t}\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.P, 'Function', {bind: __webpack_require__(93)});\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar isObject       = __webpack_require__(5)\n\t  , getPrototypeOf = __webpack_require__(18)\n\t  , HAS_INSTANCE   = __webpack_require__(6)('hasInstance')\n\t  , FunctionProto  = Function.prototype;\n\t// 19.2.3.6 Function.prototype[@@hasInstance](V)\n\tif(!(HAS_INSTANCE in FunctionProto))__webpack_require__(8).f(FunctionProto, HAS_INSTANCE, {value: function(O){\n\t  if(typeof this != 'function' || !isObject(O))return false;\n\t  if(!isObject(this.prototype))return O instanceof this;\n\t  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n\t  while(O = getPrototypeOf(O))if(this.prototype === O)return true;\n\t  return false;\n\t}});\n\n/***/ },\n/* 163 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(8).f\n\t  , createDesc = __webpack_require__(30)\n\t  , has        = __webpack_require__(11)\n\t  , FProto     = Function.prototype\n\t  , nameRE     = /^\\s*function ([^ (]*)/\n\t  , NAME       = 'name';\n\t\n\tvar isExtensible = Object.isExtensible || function(){\n\t  return true;\n\t};\n\t\n\t// 19.2.4.2 name\n\tNAME in FProto || __webpack_require__(7) && dP(FProto, NAME, {\n\t  configurable: true,\n\t  get: function(){\n\t    try {\n\t      var that = this\n\t        , name = ('' + that).match(nameRE)[1];\n\t      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));\n\t      return name;\n\t    } catch(e){\n\t      return '';\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 164 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.3 Math.acosh(x)\n\tvar $export = __webpack_require__(1)\n\t  , log1p   = __webpack_require__(101)\n\t  , sqrt    = Math.sqrt\n\t  , $acosh  = Math.acosh;\n\t\n\t$export($export.S + $export.F * !($acosh\n\t  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n\t  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n\t  // Tor Browser bug: Math.acosh(Infinity) -> NaN \n\t  && $acosh(Infinity) == Infinity\n\t), 'Math', {\n\t  acosh: function acosh(x){\n\t    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n\t      ? Math.log(x) + Math.LN2\n\t      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n\t  }\n\t});\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.5 Math.asinh(x)\n\tvar $export = __webpack_require__(1)\n\t  , $asinh  = Math.asinh;\n\t\n\tfunction asinh(x){\n\t  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n\t}\n\t\n\t// Tor Browser bug: Math.asinh(0) -> -0 \n\t$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.7 Math.atanh(x)\n\tvar $export = __webpack_require__(1)\n\t  , $atanh  = Math.atanh;\n\t\n\t// Tor Browser bug: Math.atanh(-0) -> 0 \n\t$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n\t  atanh: function atanh(x){\n\t    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n\t  }\n\t});\n\n/***/ },\n/* 167 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.9 Math.cbrt(x)\n\tvar $export = __webpack_require__(1)\n\t  , sign    = __webpack_require__(74);\n\t\n\t$export($export.S, 'Math', {\n\t  cbrt: function cbrt(x){\n\t    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n\t  }\n\t});\n\n/***/ },\n/* 168 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.11 Math.clz32(x)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  clz32: function clz32(x){\n\t    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n\t  }\n\t});\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.12 Math.cosh(x)\n\tvar $export = __webpack_require__(1)\n\t  , exp     = Math.exp;\n\t\n\t$export($export.S, 'Math', {\n\t  cosh: function cosh(x){\n\t    return (exp(x = +x) + exp(-x)) / 2;\n\t  }\n\t});\n\n/***/ },\n/* 170 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.14 Math.expm1(x)\n\tvar $export = __webpack_require__(1)\n\t  , $expm1  = __webpack_require__(73);\n\t\n\t$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});\n\n/***/ },\n/* 171 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.16 Math.fround(x)\n\tvar $export   = __webpack_require__(1)\n\t  , sign      = __webpack_require__(74)\n\t  , pow       = Math.pow\n\t  , EPSILON   = pow(2, -52)\n\t  , EPSILON32 = pow(2, -23)\n\t  , MAX32     = pow(2, 127) * (2 - EPSILON32)\n\t  , MIN32     = pow(2, -126);\n\t\n\tvar roundTiesToEven = function(n){\n\t  return n + 1 / EPSILON - 1 / EPSILON;\n\t};\n\t\n\t\n\t$export($export.S, 'Math', {\n\t  fround: function fround(x){\n\t    var $abs  = Math.abs(x)\n\t      , $sign = sign(x)\n\t      , a, result;\n\t    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n\t    a = (1 + EPSILON32 / EPSILON) * $abs;\n\t    result = a - (a - $abs);\n\t    if(result > MAX32 || result != result)return $sign * Infinity;\n\t    return $sign * result;\n\t  }\n\t});\n\n/***/ },\n/* 172 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\n\tvar $export = __webpack_require__(1)\n\t  , abs     = Math.abs;\n\t\n\t$export($export.S, 'Math', {\n\t  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n\t    var sum  = 0\n\t      , i    = 0\n\t      , aLen = arguments.length\n\t      , larg = 0\n\t      , arg, div;\n\t    while(i < aLen){\n\t      arg = abs(arguments[i++]);\n\t      if(larg < arg){\n\t        div  = larg / arg;\n\t        sum  = sum * div * div + 1;\n\t        larg = arg;\n\t      } else if(arg > 0){\n\t        div  = arg / larg;\n\t        sum += div * div;\n\t      } else sum += arg;\n\t    }\n\t    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n\t  }\n\t});\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.18 Math.imul(x, y)\n\tvar $export = __webpack_require__(1)\n\t  , $imul   = Math.imul;\n\t\n\t// some WebKit versions fails with big numbers, some has wrong arity\n\t$export($export.S + $export.F * __webpack_require__(4)(function(){\n\t  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n\t}), 'Math', {\n\t  imul: function imul(x, y){\n\t    var UINT16 = 0xffff\n\t      , xn = +x\n\t      , yn = +y\n\t      , xl = UINT16 & xn\n\t      , yl = UINT16 & yn;\n\t    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n\t  }\n\t});\n\n/***/ },\n/* 174 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.21 Math.log10(x)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  log10: function log10(x){\n\t    return Math.log(x) / Math.LN10;\n\t  }\n\t});\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.20 Math.log1p(x)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {log1p: __webpack_require__(101)});\n\n/***/ },\n/* 176 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.22 Math.log2(x)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  log2: function log2(x){\n\t    return Math.log(x) / Math.LN2;\n\t  }\n\t});\n\n/***/ },\n/* 177 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.28 Math.sign(x)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {sign: __webpack_require__(74)});\n\n/***/ },\n/* 178 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.30 Math.sinh(x)\n\tvar $export = __webpack_require__(1)\n\t  , expm1   = __webpack_require__(73)\n\t  , exp     = Math.exp;\n\t\n\t// V8 near Chromium 38 has a problem with very small numbers\n\t$export($export.S + $export.F * __webpack_require__(4)(function(){\n\t  return !Math.sinh(-2e-17) != -2e-17;\n\t}), 'Math', {\n\t  sinh: function sinh(x){\n\t    return Math.abs(x = +x) < 1\n\t      ? (expm1(x) - expm1(-x)) / 2\n\t      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n\t  }\n\t});\n\n/***/ },\n/* 179 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.33 Math.tanh(x)\n\tvar $export = __webpack_require__(1)\n\t  , expm1   = __webpack_require__(73)\n\t  , exp     = Math.exp;\n\t\n\t$export($export.S, 'Math', {\n\t  tanh: function tanh(x){\n\t    var a = expm1(x = +x)\n\t      , b = expm1(-x);\n\t    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n\t  }\n\t});\n\n/***/ },\n/* 180 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.34 Math.trunc(x)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  trunc: function trunc(it){\n\t    return (it > 0 ? Math.floor : Math.ceil)(it);\n\t  }\n\t});\n\n/***/ },\n/* 181 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global            = __webpack_require__(3)\n\t  , has               = __webpack_require__(11)\n\t  , cof               = __webpack_require__(19)\n\t  , inheritIfRequired = __webpack_require__(68)\n\t  , toPrimitive       = __webpack_require__(24)\n\t  , fails             = __webpack_require__(4)\n\t  , gOPN              = __webpack_require__(36).f\n\t  , gOPD              = __webpack_require__(17).f\n\t  , dP                = __webpack_require__(8).f\n\t  , $trim             = __webpack_require__(46).trim\n\t  , NUMBER            = 'Number'\n\t  , $Number           = global[NUMBER]\n\t  , Base              = $Number\n\t  , proto             = $Number.prototype\n\t  // Opera ~12 has broken Object#toString\n\t  , BROKEN_COF        = cof(__webpack_require__(35)(proto)) == NUMBER\n\t  , TRIM              = 'trim' in String.prototype;\n\t\n\t// 7.1.3 ToNumber(argument)\n\tvar toNumber = function(argument){\n\t  var it = toPrimitive(argument, false);\n\t  if(typeof it == 'string' && it.length > 2){\n\t    it = TRIM ? it.trim() : $trim(it, 3);\n\t    var first = it.charCodeAt(0)\n\t      , third, radix, maxCode;\n\t    if(first === 43 || first === 45){\n\t      third = it.charCodeAt(2);\n\t      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix\n\t    } else if(first === 48){\n\t      switch(it.charCodeAt(1)){\n\t        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n\t        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n\t        default : return +it;\n\t      }\n\t      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){\n\t        code = digits.charCodeAt(i);\n\t        // parseInt parses a string to a first unavailable symbol\n\t        // but ToNumber should return NaN if a string contains unavailable symbols\n\t        if(code < 48 || code > maxCode)return NaN;\n\t      } return parseInt(digits, radix);\n\t    }\n\t  } return +it;\n\t};\n\t\n\tif(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){\n\t  $Number = function Number(value){\n\t    var it = arguments.length < 1 ? 0 : value\n\t      , that = this;\n\t    return that instanceof $Number\n\t      // check on 1..constructor(foo) case\n\t      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)\n\t        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n\t  };\n\t  for(var keys = __webpack_require__(7) ? gOPN(Base) : (\n\t    // ES3:\n\t    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n\t    // ES6 (in case, if modules with ES6 Number statics required before):\n\t    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n\t    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n\t  ).split(','), j = 0, key; keys.length > j; j++){\n\t    if(has(Base, key = keys[j]) && !has($Number, key)){\n\t      dP($Number, key, gOPD(Base, key));\n\t    }\n\t  }\n\t  $Number.prototype = proto;\n\t  proto.constructor = $Number;\n\t  __webpack_require__(14)(global, NUMBER, $Number);\n\t}\n\n/***/ },\n/* 182 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.1 Number.EPSILON\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});\n\n/***/ },\n/* 183 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.2 Number.isFinite(number)\n\tvar $export   = __webpack_require__(1)\n\t  , _isFinite = __webpack_require__(3).isFinite;\n\t\n\t$export($export.S, 'Number', {\n\t  isFinite: function isFinite(it){\n\t    return typeof it == 'number' && _isFinite(it);\n\t  }\n\t});\n\n/***/ },\n/* 184 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.3 Number.isInteger(number)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Number', {isInteger: __webpack_require__(98)});\n\n/***/ },\n/* 185 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.4 Number.isNaN(number)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Number', {\n\t  isNaN: function isNaN(number){\n\t    return number != number;\n\t  }\n\t});\n\n/***/ },\n/* 186 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.5 Number.isSafeInteger(number)\n\tvar $export   = __webpack_require__(1)\n\t  , isInteger = __webpack_require__(98)\n\t  , abs       = Math.abs;\n\t\n\t$export($export.S, 'Number', {\n\t  isSafeInteger: function isSafeInteger(number){\n\t    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n\t  }\n\t});\n\n/***/ },\n/* 187 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.6 Number.MAX_SAFE_INTEGER\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});\n\n/***/ },\n/* 188 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.10 Number.MIN_SAFE_INTEGER\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});\n\n/***/ },\n/* 189 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export     = __webpack_require__(1)\n\t  , $parseFloat = __webpack_require__(108);\n\t// 20.1.2.12 Number.parseFloat(string)\n\t$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});\n\n/***/ },\n/* 190 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export   = __webpack_require__(1)\n\t  , $parseInt = __webpack_require__(109);\n\t// 20.1.2.13 Number.parseInt(string, radix)\n\t$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});\n\n/***/ },\n/* 191 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export      = __webpack_require__(1)\n\t  , toInteger    = __webpack_require__(31)\n\t  , aNumberValue = __webpack_require__(89)\n\t  , repeat       = __webpack_require__(81)\n\t  , $toFixed     = 1..toFixed\n\t  , floor        = Math.floor\n\t  , data         = [0, 0, 0, 0, 0, 0]\n\t  , ERROR        = 'Number.toFixed: incorrect invocation!'\n\t  , ZERO         = '0';\n\t\n\tvar multiply = function(n, c){\n\t  var i  = -1\n\t    , c2 = c;\n\t  while(++i < 6){\n\t    c2 += n * data[i];\n\t    data[i] = c2 % 1e7;\n\t    c2 = floor(c2 / 1e7);\n\t  }\n\t};\n\tvar divide = function(n){\n\t  var i = 6\n\t    , c = 0;\n\t  while(--i >= 0){\n\t    c += data[i];\n\t    data[i] = floor(c / n);\n\t    c = (c % n) * 1e7;\n\t  }\n\t};\n\tvar numToString = function(){\n\t  var i = 6\n\t    , s = '';\n\t  while(--i >= 0){\n\t    if(s !== '' || i === 0 || data[i] !== 0){\n\t      var t = String(data[i]);\n\t      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n\t    }\n\t  } return s;\n\t};\n\tvar pow = function(x, n, acc){\n\t  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n\t};\n\tvar log = function(x){\n\t  var n  = 0\n\t    , x2 = x;\n\t  while(x2 >= 4096){\n\t    n += 12;\n\t    x2 /= 4096;\n\t  }\n\t  while(x2 >= 2){\n\t    n  += 1;\n\t    x2 /= 2;\n\t  } return n;\n\t};\n\t\n\t$export($export.P + $export.F * (!!$toFixed && (\n\t  0.00008.toFixed(3) !== '0.000' ||\n\t  0.9.toFixed(0) !== '1' ||\n\t  1.255.toFixed(2) !== '1.25' ||\n\t  1000000000000000128..toFixed(0) !== '1000000000000000128'\n\t) || !__webpack_require__(4)(function(){\n\t  // V8 ~ Android 4.3-\n\t  $toFixed.call({});\n\t})), 'Number', {\n\t  toFixed: function toFixed(fractionDigits){\n\t    var x = aNumberValue(this, ERROR)\n\t      , f = toInteger(fractionDigits)\n\t      , s = ''\n\t      , m = ZERO\n\t      , e, z, j, k;\n\t    if(f < 0 || f > 20)throw RangeError(ERROR);\n\t    if(x != x)return 'NaN';\n\t    if(x <= -1e21 || x >= 1e21)return String(x);\n\t    if(x < 0){\n\t      s = '-';\n\t      x = -x;\n\t    }\n\t    if(x > 1e-21){\n\t      e = log(x * pow(2, 69, 1)) - 69;\n\t      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n\t      z *= 0x10000000000000;\n\t      e = 52 - e;\n\t      if(e > 0){\n\t        multiply(0, z);\n\t        j = f;\n\t        while(j >= 7){\n\t          multiply(1e7, 0);\n\t          j -= 7;\n\t        }\n\t        multiply(pow(10, j, 1), 0);\n\t        j = e - 1;\n\t        while(j >= 23){\n\t          divide(1 << 23);\n\t          j -= 23;\n\t        }\n\t        divide(1 << j);\n\t        multiply(1, 1);\n\t        divide(2);\n\t        m = numToString();\n\t      } else {\n\t        multiply(0, z);\n\t        multiply(1 << -e, 0);\n\t        m = numToString() + repeat.call(ZERO, f);\n\t      }\n\t    }\n\t    if(f > 0){\n\t      k = m.length;\n\t      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n\t    } else {\n\t      m = s + m;\n\t    } return m;\n\t  }\n\t});\n\n/***/ },\n/* 192 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export      = __webpack_require__(1)\n\t  , $fails       = __webpack_require__(4)\n\t  , aNumberValue = __webpack_require__(89)\n\t  , $toPrecision = 1..toPrecision;\n\t\n\t$export($export.P + $export.F * ($fails(function(){\n\t  // IE7-\n\t  return $toPrecision.call(1, undefined) !== '1';\n\t}) || !$fails(function(){\n\t  // V8 ~ Android 4.3-\n\t  $toPrecision.call({});\n\t})), 'Number', {\n\t  toPrecision: function toPrecision(precision){\n\t    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\n\t    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); \n\t  }\n\t});\n\n/***/ },\n/* 193 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(102)});\n\n/***/ },\n/* 194 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1)\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\t$export($export.S, 'Object', {create: __webpack_require__(35)});\n\n/***/ },\n/* 195 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1);\n\t// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n\t$export($export.S + $export.F * !__webpack_require__(7), 'Object', {defineProperties: __webpack_require__(103)});\n\n/***/ },\n/* 196 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1);\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n\t$export($export.S + $export.F * !__webpack_require__(7), 'Object', {defineProperty: __webpack_require__(8).f});\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.5 Object.freeze(O)\n\tvar isObject = __webpack_require__(5)\n\t  , meta     = __webpack_require__(29).onFreeze;\n\t\n\t__webpack_require__(23)('freeze', function($freeze){\n\t  return function freeze(it){\n\t    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n\t  };\n\t});\n\n/***/ },\n/* 198 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n\tvar toIObject                 = __webpack_require__(16)\n\t  , $getOwnPropertyDescriptor = __webpack_require__(17).f;\n\t\n\t__webpack_require__(23)('getOwnPropertyDescriptor', function(){\n\t  return function getOwnPropertyDescriptor(it, key){\n\t    return $getOwnPropertyDescriptor(toIObject(it), key);\n\t  };\n\t});\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.7 Object.getOwnPropertyNames(O)\n\t__webpack_require__(23)('getOwnPropertyNames', function(){\n\t  return __webpack_require__(104).f;\n\t});\n\n/***/ },\n/* 200 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.9 Object.getPrototypeOf(O)\n\tvar toObject        = __webpack_require__(10)\n\t  , $getPrototypeOf = __webpack_require__(18);\n\t\n\t__webpack_require__(23)('getPrototypeOf', function(){\n\t  return function getPrototypeOf(it){\n\t    return $getPrototypeOf(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 201 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.11 Object.isExtensible(O)\n\tvar isObject = __webpack_require__(5);\n\t\n\t__webpack_require__(23)('isExtensible', function($isExtensible){\n\t  return function isExtensible(it){\n\t    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n\t  };\n\t});\n\n/***/ },\n/* 202 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.12 Object.isFrozen(O)\n\tvar isObject = __webpack_require__(5);\n\t\n\t__webpack_require__(23)('isFrozen', function($isFrozen){\n\t  return function isFrozen(it){\n\t    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n\t  };\n\t});\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.13 Object.isSealed(O)\n\tvar isObject = __webpack_require__(5);\n\t\n\t__webpack_require__(23)('isSealed', function($isSealed){\n\t  return function isSealed(it){\n\t    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n\t  };\n\t});\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.10 Object.is(value1, value2)\n\tvar $export = __webpack_require__(1);\n\t$export($export.S, 'Object', {is: __webpack_require__(110)});\n\n/***/ },\n/* 205 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 Object.keys(O)\n\tvar toObject = __webpack_require__(10)\n\t  , $keys    = __webpack_require__(37);\n\t\n\t__webpack_require__(23)('keys', function(){\n\t  return function keys(it){\n\t    return $keys(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 206 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.15 Object.preventExtensions(O)\n\tvar isObject = __webpack_require__(5)\n\t  , meta     = __webpack_require__(29).onFreeze;\n\t\n\t__webpack_require__(23)('preventExtensions', function($preventExtensions){\n\t  return function preventExtensions(it){\n\t    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n\t  };\n\t});\n\n/***/ },\n/* 207 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.17 Object.seal(O)\n\tvar isObject = __webpack_require__(5)\n\t  , meta     = __webpack_require__(29).onFreeze;\n\t\n\t__webpack_require__(23)('seal', function($seal){\n\t  return function seal(it){\n\t    return $seal && isObject(it) ? $seal(meta(it)) : it;\n\t  };\n\t});\n\n/***/ },\n/* 208 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.19 Object.setPrototypeOf(O, proto)\n\tvar $export = __webpack_require__(1);\n\t$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(76).set});\n\n/***/ },\n/* 209 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.3.6 Object.prototype.toString()\n\tvar classof = __webpack_require__(47)\n\t  , test    = {};\n\ttest[__webpack_require__(6)('toStringTag')] = 'z';\n\tif(test + '' != '[object z]'){\n\t  __webpack_require__(14)(Object.prototype, 'toString', function toString(){\n\t    return '[object ' + classof(this) + ']';\n\t  }, true);\n\t}\n\n/***/ },\n/* 210 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export     = __webpack_require__(1)\n\t  , $parseFloat = __webpack_require__(108);\n\t// 18.2.4 parseFloat(string)\n\t$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});\n\n/***/ },\n/* 211 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export   = __webpack_require__(1)\n\t  , $parseInt = __webpack_require__(109);\n\t// 18.2.5 parseInt(string, radix)\n\t$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});\n\n/***/ },\n/* 212 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY            = __webpack_require__(34)\n\t  , global             = __webpack_require__(3)\n\t  , ctx                = __webpack_require__(26)\n\t  , classof            = __webpack_require__(47)\n\t  , $export            = __webpack_require__(1)\n\t  , isObject           = __webpack_require__(5)\n\t  , aFunction          = __webpack_require__(12)\n\t  , anInstance         = __webpack_require__(33)\n\t  , forOf              = __webpack_require__(43)\n\t  , speciesConstructor = __webpack_require__(78)\n\t  , task               = __webpack_require__(83).set\n\t  , microtask          = __webpack_require__(75)()\n\t  , PROMISE            = 'Promise'\n\t  , TypeError          = global.TypeError\n\t  , process            = global.process\n\t  , $Promise           = global[PROMISE]\n\t  , process            = global.process\n\t  , isNode             = classof(process) == 'process'\n\t  , empty              = function(){ /* empty */ }\n\t  , Internal, GenericPromiseCapability, Wrapper;\n\t\n\tvar USE_NATIVE = !!function(){\n\t  try {\n\t    // correct subclassing with @@species support\n\t    var promise     = $Promise.resolve(1)\n\t      , FakePromise = (promise.constructor = {})[__webpack_require__(6)('species')] = function(exec){ exec(empty, empty); };\n\t    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\t    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n\t  } catch(e){ /* empty */ }\n\t}();\n\t\n\t// helpers\n\tvar sameConstructor = function(a, b){\n\t  // with library wrapper special case\n\t  return a === b || a === $Promise && b === Wrapper;\n\t};\n\tvar isThenable = function(it){\n\t  var then;\n\t  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n\t};\n\tvar newPromiseCapability = function(C){\n\t  return sameConstructor($Promise, C)\n\t    ? new PromiseCapability(C)\n\t    : new GenericPromiseCapability(C);\n\t};\n\tvar PromiseCapability = GenericPromiseCapability = function(C){\n\t  var resolve, reject;\n\t  this.promise = new C(function($$resolve, $$reject){\n\t    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n\t    resolve = $$resolve;\n\t    reject  = $$reject;\n\t  });\n\t  this.resolve = aFunction(resolve);\n\t  this.reject  = aFunction(reject);\n\t};\n\tvar perform = function(exec){\n\t  try {\n\t    exec();\n\t  } catch(e){\n\t    return {error: e};\n\t  }\n\t};\n\tvar notify = function(promise, isReject){\n\t  if(promise._n)return;\n\t  promise._n = true;\n\t  var chain = promise._c;\n\t  microtask(function(){\n\t    var value = promise._v\n\t      , ok    = promise._s == 1\n\t      , i     = 0;\n\t    var run = function(reaction){\n\t      var handler = ok ? reaction.ok : reaction.fail\n\t        , resolve = reaction.resolve\n\t        , reject  = reaction.reject\n\t        , domain  = reaction.domain\n\t        , result, then;\n\t      try {\n\t        if(handler){\n\t          if(!ok){\n\t            if(promise._h == 2)onHandleUnhandled(promise);\n\t            promise._h = 1;\n\t          }\n\t          if(handler === true)result = value;\n\t          else {\n\t            if(domain)domain.enter();\n\t            result = handler(value);\n\t            if(domain)domain.exit();\n\t          }\n\t          if(result === reaction.promise){\n\t            reject(TypeError('Promise-chain cycle'));\n\t          } else if(then = isThenable(result)){\n\t            then.call(result, resolve, reject);\n\t          } else resolve(result);\n\t        } else reject(value);\n\t      } catch(e){\n\t        reject(e);\n\t      }\n\t    };\n\t    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n\t    promise._c = [];\n\t    promise._n = false;\n\t    if(isReject && !promise._h)onUnhandled(promise);\n\t  });\n\t};\n\tvar onUnhandled = function(promise){\n\t  task.call(global, function(){\n\t    var value = promise._v\n\t      , abrupt, handler, console;\n\t    if(isUnhandled(promise)){\n\t      abrupt = perform(function(){\n\t        if(isNode){\n\t          process.emit('unhandledRejection', value, promise);\n\t        } else if(handler = global.onunhandledrejection){\n\t          handler({promise: promise, reason: value});\n\t        } else if((console = global.console) && console.error){\n\t          console.error('Unhandled promise rejection', value);\n\t        }\n\t      });\n\t      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\t      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n\t    } promise._a = undefined;\n\t    if(abrupt)throw abrupt.error;\n\t  });\n\t};\n\tvar isUnhandled = function(promise){\n\t  if(promise._h == 1)return false;\n\t  var chain = promise._a || promise._c\n\t    , i     = 0\n\t    , reaction;\n\t  while(chain.length > i){\n\t    reaction = chain[i++];\n\t    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n\t  } return true;\n\t};\n\tvar onHandleUnhandled = function(promise){\n\t  task.call(global, function(){\n\t    var handler;\n\t    if(isNode){\n\t      process.emit('rejectionHandled', promise);\n\t    } else if(handler = global.onrejectionhandled){\n\t      handler({promise: promise, reason: promise._v});\n\t    }\n\t  });\n\t};\n\tvar $reject = function(value){\n\t  var promise = this;\n\t  if(promise._d)return;\n\t  promise._d = true;\n\t  promise = promise._w || promise; // unwrap\n\t  promise._v = value;\n\t  promise._s = 2;\n\t  if(!promise._a)promise._a = promise._c.slice();\n\t  notify(promise, true);\n\t};\n\tvar $resolve = function(value){\n\t  var promise = this\n\t    , then;\n\t  if(promise._d)return;\n\t  promise._d = true;\n\t  promise = promise._w || promise; // unwrap\n\t  try {\n\t    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n\t    if(then = isThenable(value)){\n\t      microtask(function(){\n\t        var wrapper = {_w: promise, _d: false}; // wrap\n\t        try {\n\t          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n\t        } catch(e){\n\t          $reject.call(wrapper, e);\n\t        }\n\t      });\n\t    } else {\n\t      promise._v = value;\n\t      promise._s = 1;\n\t      notify(promise, false);\n\t    }\n\t  } catch(e){\n\t    $reject.call({_w: promise, _d: false}, e); // wrap\n\t  }\n\t};\n\t\n\t// constructor polyfill\n\tif(!USE_NATIVE){\n\t  // 25.4.3.1 Promise(executor)\n\t  $Promise = function Promise(executor){\n\t    anInstance(this, $Promise, PROMISE, '_h');\n\t    aFunction(executor);\n\t    Internal.call(this);\n\t    try {\n\t      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n\t    } catch(err){\n\t      $reject.call(this, err);\n\t    }\n\t  };\n\t  Internal = function Promise(executor){\n\t    this._c = [];             // <- awaiting reactions\n\t    this._a = undefined;      // <- checked in isUnhandled reactions\n\t    this._s = 0;              // <- state\n\t    this._d = false;          // <- done\n\t    this._v = undefined;      // <- value\n\t    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n\t    this._n = false;          // <- notify\n\t  };\n\t  Internal.prototype = __webpack_require__(38)($Promise.prototype, {\n\t    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n\t    then: function then(onFulfilled, onRejected){\n\t      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n\t      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n\t      reaction.fail   = typeof onRejected == 'function' && onRejected;\n\t      reaction.domain = isNode ? process.domain : undefined;\n\t      this._c.push(reaction);\n\t      if(this._a)this._a.push(reaction);\n\t      if(this._s)notify(this, false);\n\t      return reaction.promise;\n\t    },\n\t    // 25.4.5.1 Promise.prototype.catch(onRejected)\n\t    'catch': function(onRejected){\n\t      return this.then(undefined, onRejected);\n\t    }\n\t  });\n\t  PromiseCapability = function(){\n\t    var promise  = new Internal;\n\t    this.promise = promise;\n\t    this.resolve = ctx($resolve, promise, 1);\n\t    this.reject  = ctx($reject, promise, 1);\n\t  };\n\t}\n\t\n\t$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\n\t__webpack_require__(45)($Promise, PROMISE);\n\t__webpack_require__(39)(PROMISE);\n\tWrapper = __webpack_require__(25)[PROMISE];\n\t\n\t// statics\n\t$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n\t  // 25.4.4.5 Promise.reject(r)\n\t  reject: function reject(r){\n\t    var capability = newPromiseCapability(this)\n\t      , $$reject   = capability.reject;\n\t    $$reject(r);\n\t    return capability.promise;\n\t  }\n\t});\n\t$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n\t  // 25.4.4.6 Promise.resolve(x)\n\t  resolve: function resolve(x){\n\t    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n\t    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n\t    var capability = newPromiseCapability(this)\n\t      , $$resolve  = capability.resolve;\n\t    $$resolve(x);\n\t    return capability.promise;\n\t  }\n\t});\n\t$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(57)(function(iter){\n\t  $Promise.all(iter)['catch'](empty);\n\t})), PROMISE, {\n\t  // 25.4.4.1 Promise.all(iterable)\n\t  all: function all(iterable){\n\t    var C          = this\n\t      , capability = newPromiseCapability(C)\n\t      , resolve    = capability.resolve\n\t      , reject     = capability.reject;\n\t    var abrupt = perform(function(){\n\t      var values    = []\n\t        , index     = 0\n\t        , remaining = 1;\n\t      forOf(iterable, false, function(promise){\n\t        var $index        = index++\n\t          , alreadyCalled = false;\n\t        values.push(undefined);\n\t        remaining++;\n\t        C.resolve(promise).then(function(value){\n\t          if(alreadyCalled)return;\n\t          alreadyCalled  = true;\n\t          values[$index] = value;\n\t          --remaining || resolve(values);\n\t        }, reject);\n\t      });\n\t      --remaining || resolve(values);\n\t    });\n\t    if(abrupt)reject(abrupt.error);\n\t    return capability.promise;\n\t  },\n\t  // 25.4.4.4 Promise.race(iterable)\n\t  race: function race(iterable){\n\t    var C          = this\n\t      , capability = newPromiseCapability(C)\n\t      , reject     = capability.reject;\n\t    var abrupt = perform(function(){\n\t      forOf(iterable, false, function(promise){\n\t        C.resolve(promise).then(capability.resolve, reject);\n\t      });\n\t    });\n\t    if(abrupt)reject(abrupt.error);\n\t    return capability.promise;\n\t  }\n\t});\n\n/***/ },\n/* 213 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\n\tvar $export   = __webpack_require__(1)\n\t  , aFunction = __webpack_require__(12)\n\t  , anObject  = __webpack_require__(2)\n\t  , rApply    = (__webpack_require__(3).Reflect || {}).apply\n\t  , fApply    = Function.apply;\n\t// MS Edge argumentsList argument is optional\n\t$export($export.S + $export.F * !__webpack_require__(4)(function(){\n\t  rApply(function(){});\n\t}), 'Reflect', {\n\t  apply: function apply(target, thisArgument, argumentsList){\n\t    var T = aFunction(target)\n\t      , L = anObject(argumentsList);\n\t    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n\t  }\n\t});\n\n/***/ },\n/* 214 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\n\tvar $export    = __webpack_require__(1)\n\t  , create     = __webpack_require__(35)\n\t  , aFunction  = __webpack_require__(12)\n\t  , anObject   = __webpack_require__(2)\n\t  , isObject   = __webpack_require__(5)\n\t  , fails      = __webpack_require__(4)\n\t  , bind       = __webpack_require__(93)\n\t  , rConstruct = (__webpack_require__(3).Reflect || {}).construct;\n\t\n\t// MS Edge supports only 2 arguments and argumentsList argument is optional\n\t// FF Nightly sets third argument as `new.target`, but does not create `this` from it\n\tvar NEW_TARGET_BUG = fails(function(){\n\t  function F(){}\n\t  return !(rConstruct(function(){}, [], F) instanceof F);\n\t});\n\tvar ARGS_BUG = !fails(function(){\n\t  rConstruct(function(){});\n\t});\n\t\n\t$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n\t  construct: function construct(Target, args /*, newTarget*/){\n\t    aFunction(Target);\n\t    anObject(args);\n\t    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n\t    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);\n\t    if(Target == newTarget){\n\t      // w/o altered newTarget, optimization for 0-4 arguments\n\t      switch(args.length){\n\t        case 0: return new Target;\n\t        case 1: return new Target(args[0]);\n\t        case 2: return new Target(args[0], args[1]);\n\t        case 3: return new Target(args[0], args[1], args[2]);\n\t        case 4: return new Target(args[0], args[1], args[2], args[3]);\n\t      }\n\t      // w/o altered newTarget, lot of arguments case\n\t      var $args = [null];\n\t      $args.push.apply($args, args);\n\t      return new (bind.apply(Target, $args));\n\t    }\n\t    // with altered newTarget, not support built-in constructors\n\t    var proto    = newTarget.prototype\n\t      , instance = create(isObject(proto) ? proto : Object.prototype)\n\t      , result   = Function.apply.call(Target, instance, args);\n\t    return isObject(result) ? result : instance;\n\t  }\n\t});\n\n/***/ },\n/* 215 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\n\tvar dP          = __webpack_require__(8)\n\t  , $export     = __webpack_require__(1)\n\t  , anObject    = __webpack_require__(2)\n\t  , toPrimitive = __webpack_require__(24);\n\t\n\t// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n\t$export($export.S + $export.F * __webpack_require__(4)(function(){\n\t  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});\n\t}), 'Reflect', {\n\t  defineProperty: function defineProperty(target, propertyKey, attributes){\n\t    anObject(target);\n\t    propertyKey = toPrimitive(propertyKey, true);\n\t    anObject(attributes);\n\t    try {\n\t      dP.f(target, propertyKey, attributes);\n\t      return true;\n\t    } catch(e){\n\t      return false;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 216 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.4 Reflect.deleteProperty(target, propertyKey)\n\tvar $export  = __webpack_require__(1)\n\t  , gOPD     = __webpack_require__(17).f\n\t  , anObject = __webpack_require__(2);\n\t\n\t$export($export.S, 'Reflect', {\n\t  deleteProperty: function deleteProperty(target, propertyKey){\n\t    var desc = gOPD(anObject(target), propertyKey);\n\t    return desc && !desc.configurable ? false : delete target[propertyKey];\n\t  }\n\t});\n\n/***/ },\n/* 217 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 26.1.5 Reflect.enumerate(target)\n\tvar $export  = __webpack_require__(1)\n\t  , anObject = __webpack_require__(2);\n\tvar Enumerate = function(iterated){\n\t  this._t = anObject(iterated); // target\n\t  this._i = 0;                  // next index\n\t  var keys = this._k = []       // keys\n\t    , key;\n\t  for(key in iterated)keys.push(key);\n\t};\n\t__webpack_require__(71)(Enumerate, 'Object', function(){\n\t  var that = this\n\t    , keys = that._k\n\t    , key;\n\t  do {\n\t    if(that._i >= keys.length)return {value: undefined, done: true};\n\t  } while(!((key = keys[that._i++]) in that._t));\n\t  return {value: key, done: false};\n\t});\n\t\n\t$export($export.S, 'Reflect', {\n\t  enumerate: function enumerate(target){\n\t    return new Enumerate(target);\n\t  }\n\t});\n\n/***/ },\n/* 218 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\n\tvar gOPD     = __webpack_require__(17)\n\t  , $export  = __webpack_require__(1)\n\t  , anObject = __webpack_require__(2);\n\t\n\t$export($export.S, 'Reflect', {\n\t  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){\n\t    return gOPD.f(anObject(target), propertyKey);\n\t  }\n\t});\n\n/***/ },\n/* 219 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.8 Reflect.getPrototypeOf(target)\n\tvar $export  = __webpack_require__(1)\n\t  , getProto = __webpack_require__(18)\n\t  , anObject = __webpack_require__(2);\n\t\n\t$export($export.S, 'Reflect', {\n\t  getPrototypeOf: function getPrototypeOf(target){\n\t    return getProto(anObject(target));\n\t  }\n\t});\n\n/***/ },\n/* 220 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.6 Reflect.get(target, propertyKey [, receiver])\n\tvar gOPD           = __webpack_require__(17)\n\t  , getPrototypeOf = __webpack_require__(18)\n\t  , has            = __webpack_require__(11)\n\t  , $export        = __webpack_require__(1)\n\t  , isObject       = __webpack_require__(5)\n\t  , anObject       = __webpack_require__(2);\n\t\n\tfunction get(target, propertyKey/*, receiver*/){\n\t  var receiver = arguments.length < 3 ? target : arguments[2]\n\t    , desc, proto;\n\t  if(anObject(target) === receiver)return target[propertyKey];\n\t  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')\n\t    ? desc.value\n\t    : desc.get !== undefined\n\t      ? desc.get.call(receiver)\n\t      : undefined;\n\t  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);\n\t}\n\t\n\t$export($export.S, 'Reflect', {get: get});\n\n/***/ },\n/* 221 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.9 Reflect.has(target, propertyKey)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Reflect', {\n\t  has: function has(target, propertyKey){\n\t    return propertyKey in target;\n\t  }\n\t});\n\n/***/ },\n/* 222 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.10 Reflect.isExtensible(target)\n\tvar $export       = __webpack_require__(1)\n\t  , anObject      = __webpack_require__(2)\n\t  , $isExtensible = Object.isExtensible;\n\t\n\t$export($export.S, 'Reflect', {\n\t  isExtensible: function isExtensible(target){\n\t    anObject(target);\n\t    return $isExtensible ? $isExtensible(target) : true;\n\t  }\n\t});\n\n/***/ },\n/* 223 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.11 Reflect.ownKeys(target)\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Reflect', {ownKeys: __webpack_require__(107)});\n\n/***/ },\n/* 224 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.12 Reflect.preventExtensions(target)\n\tvar $export            = __webpack_require__(1)\n\t  , anObject           = __webpack_require__(2)\n\t  , $preventExtensions = Object.preventExtensions;\n\t\n\t$export($export.S, 'Reflect', {\n\t  preventExtensions: function preventExtensions(target){\n\t    anObject(target);\n\t    try {\n\t      if($preventExtensions)$preventExtensions(target);\n\t      return true;\n\t    } catch(e){\n\t      return false;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 225 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.14 Reflect.setPrototypeOf(target, proto)\n\tvar $export  = __webpack_require__(1)\n\t  , setProto = __webpack_require__(76);\n\t\n\tif(setProto)$export($export.S, 'Reflect', {\n\t  setPrototypeOf: function setPrototypeOf(target, proto){\n\t    setProto.check(target, proto);\n\t    try {\n\t      setProto.set(target, proto);\n\t      return true;\n\t    } catch(e){\n\t      return false;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 226 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\n\tvar dP             = __webpack_require__(8)\n\t  , gOPD           = __webpack_require__(17)\n\t  , getPrototypeOf = __webpack_require__(18)\n\t  , has            = __webpack_require__(11)\n\t  , $export        = __webpack_require__(1)\n\t  , createDesc     = __webpack_require__(30)\n\t  , anObject       = __webpack_require__(2)\n\t  , isObject       = __webpack_require__(5);\n\t\n\tfunction set(target, propertyKey, V/*, receiver*/){\n\t  var receiver = arguments.length < 4 ? target : arguments[3]\n\t    , ownDesc  = gOPD.f(anObject(target), propertyKey)\n\t    , existingDescriptor, proto;\n\t  if(!ownDesc){\n\t    if(isObject(proto = getPrototypeOf(target))){\n\t      return set(proto, propertyKey, V, receiver);\n\t    }\n\t    ownDesc = createDesc(0);\n\t  }\n\t  if(has(ownDesc, 'value')){\n\t    if(ownDesc.writable === false || !isObject(receiver))return false;\n\t    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);\n\t    existingDescriptor.value = V;\n\t    dP.f(receiver, propertyKey, existingDescriptor);\n\t    return true;\n\t  }\n\t  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n\t}\n\t\n\t$export($export.S, 'Reflect', {set: set});\n\n/***/ },\n/* 227 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global            = __webpack_require__(3)\n\t  , inheritIfRequired = __webpack_require__(68)\n\t  , dP                = __webpack_require__(8).f\n\t  , gOPN              = __webpack_require__(36).f\n\t  , isRegExp          = __webpack_require__(56)\n\t  , $flags            = __webpack_require__(54)\n\t  , $RegExp           = global.RegExp\n\t  , Base              = $RegExp\n\t  , proto             = $RegExp.prototype\n\t  , re1               = /a/g\n\t  , re2               = /a/g\n\t  // \"new\" creates a new object, old webkit buggy here\n\t  , CORRECT_NEW       = new $RegExp(re1) !== re1;\n\t\n\tif(__webpack_require__(7) && (!CORRECT_NEW || __webpack_require__(4)(function(){\n\t  re2[__webpack_require__(6)('match')] = false;\n\t  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n\t  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n\t}))){\n\t  $RegExp = function RegExp(p, f){\n\t    var tiRE = this instanceof $RegExp\n\t      , piRE = isRegExp(p)\n\t      , fiU  = f === undefined;\n\t    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n\t      : inheritIfRequired(CORRECT_NEW\n\t        ? new Base(piRE && !fiU ? p.source : p, f)\n\t        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n\t      , tiRE ? this : proto, $RegExp);\n\t  };\n\t  var proxy = function(key){\n\t    key in $RegExp || dP($RegExp, key, {\n\t      configurable: true,\n\t      get: function(){ return Base[key]; },\n\t      set: function(it){ Base[key] = it; }\n\t    });\n\t  };\n\t  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);\n\t  proto.constructor = $RegExp;\n\t  $RegExp.prototype = proto;\n\t  __webpack_require__(14)(global, 'RegExp', $RegExp);\n\t}\n\t\n\t__webpack_require__(39)('RegExp');\n\n/***/ },\n/* 228 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@match logic\n\t__webpack_require__(53)('match', 1, function(defined, MATCH, $match){\n\t  // 21.1.3.11 String.prototype.match(regexp)\n\t  return [function match(regexp){\n\t    'use strict';\n\t    var O  = defined(this)\n\t      , fn = regexp == undefined ? undefined : regexp[MATCH];\n\t    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n\t  }, $match];\n\t});\n\n/***/ },\n/* 229 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@replace logic\n\t__webpack_require__(53)('replace', 2, function(defined, REPLACE, $replace){\n\t  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n\t  return [function replace(searchValue, replaceValue){\n\t    'use strict';\n\t    var O  = defined(this)\n\t      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n\t    return fn !== undefined\n\t      ? fn.call(searchValue, O, replaceValue)\n\t      : $replace.call(String(O), searchValue, replaceValue);\n\t  }, $replace];\n\t});\n\n/***/ },\n/* 230 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@search logic\n\t__webpack_require__(53)('search', 1, function(defined, SEARCH, $search){\n\t  // 21.1.3.15 String.prototype.search(regexp)\n\t  return [function search(regexp){\n\t    'use strict';\n\t    var O  = defined(this)\n\t      , fn = regexp == undefined ? undefined : regexp[SEARCH];\n\t    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n\t  }, $search];\n\t});\n\n/***/ },\n/* 231 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@split logic\n\t__webpack_require__(53)('split', 2, function(defined, SPLIT, $split){\n\t  'use strict';\n\t  var isRegExp   = __webpack_require__(56)\n\t    , _split     = $split\n\t    , $push      = [].push\n\t    , $SPLIT     = 'split'\n\t    , LENGTH     = 'length'\n\t    , LAST_INDEX = 'lastIndex';\n\t  if(\n\t    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n\t    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n\t    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n\t    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n\t    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n\t    ''[$SPLIT](/.?/)[LENGTH]\n\t  ){\n\t    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n\t    // based on es5-shim implementation, need to rework it\n\t    $split = function(separator, limit){\n\t      var string = String(this);\n\t      if(separator === undefined && limit === 0)return [];\n\t      // If `separator` is not a regex, use native split\n\t      if(!isRegExp(separator))return _split.call(string, separator, limit);\n\t      var output = [];\n\t      var flags = (separator.ignoreCase ? 'i' : '') +\n\t                  (separator.multiline ? 'm' : '') +\n\t                  (separator.unicode ? 'u' : '') +\n\t                  (separator.sticky ? 'y' : '');\n\t      var lastLastIndex = 0;\n\t      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n\t      // Make `global` and avoid `lastIndex` issues by working with a copy\n\t      var separatorCopy = new RegExp(separator.source, flags + 'g');\n\t      var separator2, match, lastIndex, lastLength, i;\n\t      // Doesn't need flags gy, but they don't hurt\n\t      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n\t      while(match = separatorCopy.exec(string)){\n\t        // `separatorCopy.lastIndex` is not reliable cross-browser\n\t        lastIndex = match.index + match[0][LENGTH];\n\t        if(lastIndex > lastLastIndex){\n\t          output.push(string.slice(lastLastIndex, match.index));\n\t          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n\t          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){\n\t            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;\n\t          });\n\t          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));\n\t          lastLength = match[0][LENGTH];\n\t          lastLastIndex = lastIndex;\n\t          if(output[LENGTH] >= splitLimit)break;\n\t        }\n\t        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n\t      }\n\t      if(lastLastIndex === string[LENGTH]){\n\t        if(lastLength || !separatorCopy.test(''))output.push('');\n\t      } else output.push(string.slice(lastLastIndex));\n\t      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n\t    };\n\t  // Chakra, V8\n\t  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){\n\t    $split = function(separator, limit){\n\t      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n\t    };\n\t  }\n\t  // 21.1.3.17 String.prototype.split(separator, limit)\n\t  return [function split(separator, limit){\n\t    var O  = defined(this)\n\t      , fn = separator == undefined ? undefined : separator[SPLIT];\n\t    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n\t  }, $split];\n\t});\n\n/***/ },\n/* 232 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t__webpack_require__(114);\n\tvar anObject    = __webpack_require__(2)\n\t  , $flags      = __webpack_require__(54)\n\t  , DESCRIPTORS = __webpack_require__(7)\n\t  , TO_STRING   = 'toString'\n\t  , $toString   = /./[TO_STRING];\n\t\n\tvar define = function(fn){\n\t  __webpack_require__(14)(RegExp.prototype, TO_STRING, fn, true);\n\t};\n\t\n\t// 21.2.5.14 RegExp.prototype.toString()\n\tif(__webpack_require__(4)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){\n\t  define(function toString(){\n\t    var R = anObject(this);\n\t    return '/'.concat(R.source, '/',\n\t      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n\t  });\n\t// FF44- RegExp#toString has a wrong name\n\t} else if($toString.name != TO_STRING){\n\t  define(function toString(){\n\t    return $toString.call(this);\n\t  });\n\t}\n\n/***/ },\n/* 233 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.2 String.prototype.anchor(name)\n\t__webpack_require__(15)('anchor', function(createHTML){\n\t  return function anchor(name){\n\t    return createHTML(this, 'a', 'name', name);\n\t  }\n\t});\n\n/***/ },\n/* 234 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.3 String.prototype.big()\n\t__webpack_require__(15)('big', function(createHTML){\n\t  return function big(){\n\t    return createHTML(this, 'big', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 235 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.4 String.prototype.blink()\n\t__webpack_require__(15)('blink', function(createHTML){\n\t  return function blink(){\n\t    return createHTML(this, 'blink', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 236 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.5 String.prototype.bold()\n\t__webpack_require__(15)('bold', function(createHTML){\n\t  return function bold(){\n\t    return createHTML(this, 'b', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 237 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(1)\n\t  , $at     = __webpack_require__(79)(false);\n\t$export($export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos){\n\t    return $at(this, pos);\n\t  }\n\t});\n\n/***/ },\n/* 238 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n\t'use strict';\n\tvar $export   = __webpack_require__(1)\n\t  , toLength  = __webpack_require__(9)\n\t  , context   = __webpack_require__(80)\n\t  , ENDS_WITH = 'endsWith'\n\t  , $endsWith = ''[ENDS_WITH];\n\t\n\t$export($export.P + $export.F * __webpack_require__(66)(ENDS_WITH), 'String', {\n\t  endsWith: function endsWith(searchString /*, endPosition = @length */){\n\t    var that = context(this, searchString, ENDS_WITH)\n\t      , endPosition = arguments.length > 1 ? arguments[1] : undefined\n\t      , len    = toLength(that.length)\n\t      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)\n\t      , search = String(searchString);\n\t    return $endsWith\n\t      ? $endsWith.call(that, search, end)\n\t      : that.slice(end - search.length, end) === search;\n\t  }\n\t});\n\n/***/ },\n/* 239 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.6 String.prototype.fixed()\n\t__webpack_require__(15)('fixed', function(createHTML){\n\t  return function fixed(){\n\t    return createHTML(this, 'tt', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 240 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.7 String.prototype.fontcolor(color)\n\t__webpack_require__(15)('fontcolor', function(createHTML){\n\t  return function fontcolor(color){\n\t    return createHTML(this, 'font', 'color', color);\n\t  }\n\t});\n\n/***/ },\n/* 241 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.8 String.prototype.fontsize(size)\n\t__webpack_require__(15)('fontsize', function(createHTML){\n\t  return function fontsize(size){\n\t    return createHTML(this, 'font', 'size', size);\n\t  }\n\t});\n\n/***/ },\n/* 242 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export        = __webpack_require__(1)\n\t  , toIndex        = __webpack_require__(40)\n\t  , fromCharCode   = String.fromCharCode\n\t  , $fromCodePoint = String.fromCodePoint;\n\t\n\t// length should be 1, old FF problem\n\t$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars\n\t    var res  = []\n\t      , aLen = arguments.length\n\t      , i    = 0\n\t      , code;\n\t    while(aLen > i){\n\t      code = +arguments[i++];\n\t      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n/***/ },\n/* 243 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n\t'use strict';\n\tvar $export  = __webpack_require__(1)\n\t  , context  = __webpack_require__(80)\n\t  , INCLUDES = 'includes';\n\t\n\t$export($export.P + $export.F * __webpack_require__(66)(INCLUDES), 'String', {\n\t  includes: function includes(searchString /*, position = 0 */){\n\t    return !!~context(this, searchString, INCLUDES)\n\t      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n/***/ },\n/* 244 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.9 String.prototype.italics()\n\t__webpack_require__(15)('italics', function(createHTML){\n\t  return function italics(){\n\t    return createHTML(this, 'i', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 245 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $at  = __webpack_require__(79)(true);\n\t\n\t// 21.1.3.27 String.prototype[@@iterator]()\n\t__webpack_require__(72)(String, 'String', function(iterated){\n\t  this._t = String(iterated); // target\n\t  this._i = 0;                // next index\n\t// 21.1.5.2.1 %StringIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , index = this._i\n\t    , point;\n\t  if(index >= O.length)return {value: undefined, done: true};\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {value: point, done: false};\n\t});\n\n/***/ },\n/* 246 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.10 String.prototype.link(url)\n\t__webpack_require__(15)('link', function(createHTML){\n\t  return function link(url){\n\t    return createHTML(this, 'a', 'href', url);\n\t  }\n\t});\n\n/***/ },\n/* 247 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export   = __webpack_require__(1)\n\t  , toIObject = __webpack_require__(16)\n\t  , toLength  = __webpack_require__(9);\n\t\n\t$export($export.S, 'String', {\n\t  // 21.1.2.4 String.raw(callSite, ...substitutions)\n\t  raw: function raw(callSite){\n\t    var tpl  = toIObject(callSite.raw)\n\t      , len  = toLength(tpl.length)\n\t      , aLen = arguments.length\n\t      , res  = []\n\t      , i    = 0;\n\t    while(len > i){\n\t      res.push(String(tpl[i++]));\n\t      if(i < aLen)res.push(String(arguments[i]));\n\t    } return res.join('');\n\t  }\n\t});\n\n/***/ },\n/* 248 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.P, 'String', {\n\t  // 21.1.3.13 String.prototype.repeat(count)\n\t  repeat: __webpack_require__(81)\n\t});\n\n/***/ },\n/* 249 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.11 String.prototype.small()\n\t__webpack_require__(15)('small', function(createHTML){\n\t  return function small(){\n\t    return createHTML(this, 'small', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 250 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n\t'use strict';\n\tvar $export     = __webpack_require__(1)\n\t  , toLength    = __webpack_require__(9)\n\t  , context     = __webpack_require__(80)\n\t  , STARTS_WITH = 'startsWith'\n\t  , $startsWith = ''[STARTS_WITH];\n\t\n\t$export($export.P + $export.F * __webpack_require__(66)(STARTS_WITH), 'String', {\n\t  startsWith: function startsWith(searchString /*, position = 0 */){\n\t    var that   = context(this, searchString, STARTS_WITH)\n\t      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))\n\t      , search = String(searchString);\n\t    return $startsWith\n\t      ? $startsWith.call(that, search, index)\n\t      : that.slice(index, index + search.length) === search;\n\t  }\n\t});\n\n/***/ },\n/* 251 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.12 String.prototype.strike()\n\t__webpack_require__(15)('strike', function(createHTML){\n\t  return function strike(){\n\t    return createHTML(this, 'strike', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 252 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.13 String.prototype.sub()\n\t__webpack_require__(15)('sub', function(createHTML){\n\t  return function sub(){\n\t    return createHTML(this, 'sub', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 253 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.14 String.prototype.sup()\n\t__webpack_require__(15)('sup', function(createHTML){\n\t  return function sup(){\n\t    return createHTML(this, 'sup', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 254 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 21.1.3.25 String.prototype.trim()\n\t__webpack_require__(46)('trim', function($trim){\n\t  return function trim(){\n\t    return $trim(this, 3);\n\t  };\n\t});\n\n/***/ },\n/* 255 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// ECMAScript 6 symbols shim\n\tvar global         = __webpack_require__(3)\n\t  , has            = __webpack_require__(11)\n\t  , DESCRIPTORS    = __webpack_require__(7)\n\t  , $export        = __webpack_require__(1)\n\t  , redefine       = __webpack_require__(14)\n\t  , META           = __webpack_require__(29).KEY\n\t  , $fails         = __webpack_require__(4)\n\t  , shared         = __webpack_require__(60)\n\t  , setToStringTag = __webpack_require__(45)\n\t  , uid            = __webpack_require__(41)\n\t  , wks            = __webpack_require__(6)\n\t  , wksExt         = __webpack_require__(112)\n\t  , wksDefine      = __webpack_require__(85)\n\t  , keyOf          = __webpack_require__(131)\n\t  , enumKeys       = __webpack_require__(130)\n\t  , isArray        = __webpack_require__(70)\n\t  , anObject       = __webpack_require__(2)\n\t  , toIObject      = __webpack_require__(16)\n\t  , toPrimitive    = __webpack_require__(24)\n\t  , createDesc     = __webpack_require__(30)\n\t  , _create        = __webpack_require__(35)\n\t  , gOPNExt        = __webpack_require__(104)\n\t  , $GOPD          = __webpack_require__(17)\n\t  , $DP            = __webpack_require__(8)\n\t  , $keys          = __webpack_require__(37)\n\t  , gOPD           = $GOPD.f\n\t  , dP             = $DP.f\n\t  , gOPN           = gOPNExt.f\n\t  , $Symbol        = global.Symbol\n\t  , $JSON          = global.JSON\n\t  , _stringify     = $JSON && $JSON.stringify\n\t  , PROTOTYPE      = 'prototype'\n\t  , HIDDEN         = wks('_hidden')\n\t  , TO_PRIMITIVE   = wks('toPrimitive')\n\t  , isEnum         = {}.propertyIsEnumerable\n\t  , SymbolRegistry = shared('symbol-registry')\n\t  , AllSymbols     = shared('symbols')\n\t  , OPSymbols      = shared('op-symbols')\n\t  , ObjectProto    = Object[PROTOTYPE]\n\t  , USE_NATIVE     = typeof $Symbol == 'function'\n\t  , QObject        = global.QObject;\n\t// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\n\tvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\t\n\t// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n\tvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n\t  return _create(dP({}, 'a', {\n\t    get: function(){ return dP(this, 'a', {value: 7}).a; }\n\t  })).a != 7;\n\t}) ? function(it, key, D){\n\t  var protoDesc = gOPD(ObjectProto, key);\n\t  if(protoDesc)delete ObjectProto[key];\n\t  dP(it, key, D);\n\t  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n\t} : dP;\n\t\n\tvar wrap = function(tag){\n\t  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n\t  sym._k = tag;\n\t  return sym;\n\t};\n\t\n\tvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n\t  return typeof it == 'symbol';\n\t} : function(it){\n\t  return it instanceof $Symbol;\n\t};\n\t\n\tvar $defineProperty = function defineProperty(it, key, D){\n\t  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n\t  anObject(it);\n\t  key = toPrimitive(key, true);\n\t  anObject(D);\n\t  if(has(AllSymbols, key)){\n\t    if(!D.enumerable){\n\t      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n\t      it[HIDDEN][key] = true;\n\t    } else {\n\t      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n\t      D = _create(D, {enumerable: createDesc(0, false)});\n\t    } return setSymbolDesc(it, key, D);\n\t  } return dP(it, key, D);\n\t};\n\tvar $defineProperties = function defineProperties(it, P){\n\t  anObject(it);\n\t  var keys = enumKeys(P = toIObject(P))\n\t    , i    = 0\n\t    , l = keys.length\n\t    , key;\n\t  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n\t  return it;\n\t};\n\tvar $create = function create(it, P){\n\t  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n\t};\n\tvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n\t  var E = isEnum.call(this, key = toPrimitive(key, true));\n\t  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n\t  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n\t};\n\tvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n\t  it  = toIObject(it);\n\t  key = toPrimitive(key, true);\n\t  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n\t  var D = gOPD(it, key);\n\t  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n\t  return D;\n\t};\n\tvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n\t  var names  = gOPN(toIObject(it))\n\t    , result = []\n\t    , i      = 0\n\t    , key;\n\t  while(names.length > i){\n\t    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n\t  } return result;\n\t};\n\tvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n\t  var IS_OP  = it === ObjectProto\n\t    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n\t    , result = []\n\t    , i      = 0\n\t    , key;\n\t  while(names.length > i){\n\t    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n\t  } return result;\n\t};\n\t\n\t// 19.4.1.1 Symbol([description])\n\tif(!USE_NATIVE){\n\t  $Symbol = function Symbol(){\n\t    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n\t    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n\t    var $set = function(value){\n\t      if(this === ObjectProto)$set.call(OPSymbols, value);\n\t      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n\t      setSymbolDesc(this, tag, createDesc(1, value));\n\t    };\n\t    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n\t    return wrap(tag);\n\t  };\n\t  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n\t    return this._k;\n\t  });\n\t\n\t  $GOPD.f = $getOwnPropertyDescriptor;\n\t  $DP.f   = $defineProperty;\n\t  __webpack_require__(36).f = gOPNExt.f = $getOwnPropertyNames;\n\t  __webpack_require__(49).f  = $propertyIsEnumerable;\n\t  __webpack_require__(59).f = $getOwnPropertySymbols;\n\t\n\t  if(DESCRIPTORS && !__webpack_require__(34)){\n\t    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n\t  }\n\t\n\t  wksExt.f = function(name){\n\t    return wrap(wks(name));\n\t  }\n\t}\n\t\n\t$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\t\n\tfor(var symbols = (\n\t  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n\t  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n\t).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\t\n\tfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\t\n\t$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n\t  // 19.4.2.1 Symbol.for(key)\n\t  'for': function(key){\n\t    return has(SymbolRegistry, key += '')\n\t      ? SymbolRegistry[key]\n\t      : SymbolRegistry[key] = $Symbol(key);\n\t  },\n\t  // 19.4.2.5 Symbol.keyFor(sym)\n\t  keyFor: function keyFor(key){\n\t    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n\t    throw TypeError(key + ' is not a symbol!');\n\t  },\n\t  useSetter: function(){ setter = true; },\n\t  useSimple: function(){ setter = false; }\n\t});\n\t\n\t$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n\t  // 19.1.2.2 Object.create(O [, Properties])\n\t  create: $create,\n\t  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n\t  defineProperty: $defineProperty,\n\t  // 19.1.2.3 Object.defineProperties(O, Properties)\n\t  defineProperties: $defineProperties,\n\t  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n\t  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n\t  // 19.1.2.7 Object.getOwnPropertyNames(O)\n\t  getOwnPropertyNames: $getOwnPropertyNames,\n\t  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n\t  getOwnPropertySymbols: $getOwnPropertySymbols\n\t});\n\t\n\t// 24.3.2 JSON.stringify(value [, replacer [, space]])\n\t$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n\t  var S = $Symbol();\n\t  // MS Edge converts symbol values to JSON as {}\n\t  // WebKit converts symbol values to JSON as null\n\t  // V8 throws on boxed symbols\n\t  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n\t})), 'JSON', {\n\t  stringify: function stringify(it){\n\t    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n\t    var args = [it]\n\t      , i    = 1\n\t      , replacer, $replacer;\n\t    while(arguments.length > i)args.push(arguments[i++]);\n\t    replacer = args[1];\n\t    if(typeof replacer == 'function')$replacer = replacer;\n\t    if($replacer || !isArray(replacer))replacer = function(key, value){\n\t      if($replacer)value = $replacer.call(this, key, value);\n\t      if(!isSymbol(value))return value;\n\t    };\n\t    args[1] = replacer;\n\t    return _stringify.apply($JSON, args);\n\t  }\n\t});\n\t\n\t// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n\t$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(13)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n\t// 19.4.3.5 Symbol.prototype[@@toStringTag]\n\tsetToStringTag($Symbol, 'Symbol');\n\t// 20.2.1.9 Math[@@toStringTag]\n\tsetToStringTag(Math, 'Math', true);\n\t// 24.3.3 JSON[@@toStringTag]\n\tsetToStringTag(global.JSON, 'JSON', true);\n\n/***/ },\n/* 256 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export      = __webpack_require__(1)\n\t  , $typed       = __webpack_require__(61)\n\t  , buffer       = __webpack_require__(84)\n\t  , anObject     = __webpack_require__(2)\n\t  , toIndex      = __webpack_require__(40)\n\t  , toLength     = __webpack_require__(9)\n\t  , isObject     = __webpack_require__(5)\n\t  , ArrayBuffer  = __webpack_require__(3).ArrayBuffer\n\t  , speciesConstructor = __webpack_require__(78)\n\t  , $ArrayBuffer = buffer.ArrayBuffer\n\t  , $DataView    = buffer.DataView\n\t  , $isView      = $typed.ABV && ArrayBuffer.isView\n\t  , $slice       = $ArrayBuffer.prototype.slice\n\t  , VIEW         = $typed.VIEW\n\t  , ARRAY_BUFFER = 'ArrayBuffer';\n\t\n\t$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});\n\t\n\t$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n\t  // 24.1.3.1 ArrayBuffer.isView(arg)\n\t  isView: function isView(it){\n\t    return $isView && $isView(it) || isObject(it) && VIEW in it;\n\t  }\n\t});\n\t\n\t$export($export.P + $export.U + $export.F * __webpack_require__(4)(function(){\n\t  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n\t}), ARRAY_BUFFER, {\n\t  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n\t  slice: function slice(start, end){\n\t    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix\n\t    var len    = anObject(this).byteLength\n\t      , first  = toIndex(start, len)\n\t      , final  = toIndex(end === undefined ? len : end, len)\n\t      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))\n\t      , viewS  = new $DataView(this)\n\t      , viewT  = new $DataView(result)\n\t      , index  = 0;\n\t    while(first < final){\n\t      viewT.setUint8(index++, viewS.getUint8(first++));\n\t    } return result;\n\t  }\n\t});\n\t\n\t__webpack_require__(39)(ARRAY_BUFFER);\n\n/***/ },\n/* 257 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1);\n\t$export($export.G + $export.W + $export.F * !__webpack_require__(61).ABV, {\n\t  DataView: __webpack_require__(84).DataView\n\t});\n\n/***/ },\n/* 258 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Float32', 4, function(init){\n\t  return function Float32Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 259 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Float64', 8, function(init){\n\t  return function Float64Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 260 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Int16', 2, function(init){\n\t  return function Int16Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 261 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Int32', 4, function(init){\n\t  return function Int32Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 262 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Int8', 1, function(init){\n\t  return function Int8Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 263 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Uint16', 2, function(init){\n\t  return function Uint16Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 264 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Uint32', 4, function(init){\n\t  return function Uint32Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 265 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Uint8', 1, function(init){\n\t  return function Uint8Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 266 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28)('Uint8', 1, function(init){\n\t  return function Uint8ClampedArray(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t}, true);\n\n/***/ },\n/* 267 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar weak = __webpack_require__(96);\n\t\n\t// 23.4 WeakSet Objects\n\t__webpack_require__(52)('WeakSet', function(get){\n\t  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n\t}, {\n\t  // 23.4.3.1 WeakSet.prototype.add(value)\n\t  add: function add(value){\n\t    return weak.def(this, value, true);\n\t  }\n\t}, weak, false, true);\n\n/***/ },\n/* 268 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/tc39/Array.prototype.includes\n\tvar $export   = __webpack_require__(1)\n\t  , $includes = __webpack_require__(51)(true);\n\t\n\t$export($export.P, 'Array', {\n\t  includes: function includes(el /*, fromIndex = 0 */){\n\t    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\t\n\t__webpack_require__(42)('includes');\n\n/***/ },\n/* 269 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask\n\tvar $export   = __webpack_require__(1)\n\t  , microtask = __webpack_require__(75)()\n\t  , process   = __webpack_require__(3).process\n\t  , isNode    = __webpack_require__(19)(process) == 'process';\n\t\n\t$export($export.G, {\n\t  asap: function asap(fn){\n\t    var domain = isNode && process.domain;\n\t    microtask(domain ? domain.bind(fn) : fn);\n\t  }\n\t});\n\n/***/ },\n/* 270 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/ljharb/proposal-is-error\n\tvar $export = __webpack_require__(1)\n\t  , cof     = __webpack_require__(19);\n\t\n\t$export($export.S, 'Error', {\n\t  isError: function isError(it){\n\t    return cof(it) === 'Error';\n\t  }\n\t});\n\n/***/ },\n/* 271 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\tvar $export  = __webpack_require__(1);\n\t\n\t$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(95)('Map')});\n\n/***/ },\n/* 272 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  iaddh: function iaddh(x0, x1, y0, y1){\n\t    var $x0 = x0 >>> 0\n\t      , $x1 = x1 >>> 0\n\t      , $y0 = y0 >>> 0;\n\t    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;\n\t  }\n\t});\n\n/***/ },\n/* 273 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  imulh: function imulh(u, v){\n\t    var UINT16 = 0xffff\n\t      , $u = +u\n\t      , $v = +v\n\t      , u0 = $u & UINT16\n\t      , v0 = $v & UINT16\n\t      , u1 = $u >> 16\n\t      , v1 = $v >> 16\n\t      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n\t    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);\n\t  }\n\t});\n\n/***/ },\n/* 274 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  isubh: function isubh(x0, x1, y0, y1){\n\t    var $x0 = x0 >>> 0\n\t      , $x1 = x1 >>> 0\n\t      , $y0 = y0 >>> 0;\n\t    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;\n\t  }\n\t});\n\n/***/ },\n/* 275 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'Math', {\n\t  umulh: function umulh(u, v){\n\t    var UINT16 = 0xffff\n\t      , $u = +u\n\t      , $v = +v\n\t      , u0 = $u & UINT16\n\t      , v0 = $v & UINT16\n\t      , u1 = $u >>> 16\n\t      , v1 = $v >>> 16\n\t      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n\t    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);\n\t  }\n\t});\n\n/***/ },\n/* 276 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export         = __webpack_require__(1)\n\t  , toObject        = __webpack_require__(10)\n\t  , aFunction       = __webpack_require__(12)\n\t  , $defineProperty = __webpack_require__(8);\n\t\n\t// B.2.2.2 Object.prototype.__defineGetter__(P, getter)\n\t__webpack_require__(7) && $export($export.P + __webpack_require__(58), 'Object', {\n\t  __defineGetter__: function __defineGetter__(P, getter){\n\t    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});\n\t  }\n\t});\n\n/***/ },\n/* 277 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export         = __webpack_require__(1)\n\t  , toObject        = __webpack_require__(10)\n\t  , aFunction       = __webpack_require__(12)\n\t  , $defineProperty = __webpack_require__(8);\n\t\n\t// B.2.2.3 Object.prototype.__defineSetter__(P, setter)\n\t__webpack_require__(7) && $export($export.P + __webpack_require__(58), 'Object', {\n\t  __defineSetter__: function __defineSetter__(P, setter){\n\t    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});\n\t  }\n\t});\n\n/***/ },\n/* 278 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-object-values-entries\n\tvar $export  = __webpack_require__(1)\n\t  , $entries = __webpack_require__(106)(true);\n\t\n\t$export($export.S, 'Object', {\n\t  entries: function entries(it){\n\t    return $entries(it);\n\t  }\n\t});\n\n/***/ },\n/* 279 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-object-getownpropertydescriptors\n\tvar $export        = __webpack_require__(1)\n\t  , ownKeys        = __webpack_require__(107)\n\t  , toIObject      = __webpack_require__(16)\n\t  , gOPD           = __webpack_require__(17)\n\t  , createProperty = __webpack_require__(63);\n\t\n\t$export($export.S, 'Object', {\n\t  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){\n\t    var O       = toIObject(object)\n\t      , getDesc = gOPD.f\n\t      , keys    = ownKeys(O)\n\t      , result  = {}\n\t      , i       = 0\n\t      , key;\n\t    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));\n\t    return result;\n\t  }\n\t});\n\n/***/ },\n/* 280 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export                  = __webpack_require__(1)\n\t  , toObject                 = __webpack_require__(10)\n\t  , toPrimitive              = __webpack_require__(24)\n\t  , getPrototypeOf           = __webpack_require__(18)\n\t  , getOwnPropertyDescriptor = __webpack_require__(17).f;\n\t\n\t// B.2.2.4 Object.prototype.__lookupGetter__(P)\n\t__webpack_require__(7) && $export($export.P + __webpack_require__(58), 'Object', {\n\t  __lookupGetter__: function __lookupGetter__(P){\n\t    var O = toObject(this)\n\t      , K = toPrimitive(P, true)\n\t      , D;\n\t    do {\n\t      if(D = getOwnPropertyDescriptor(O, K))return D.get;\n\t    } while(O = getPrototypeOf(O));\n\t  }\n\t});\n\n/***/ },\n/* 281 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export                  = __webpack_require__(1)\n\t  , toObject                 = __webpack_require__(10)\n\t  , toPrimitive              = __webpack_require__(24)\n\t  , getPrototypeOf           = __webpack_require__(18)\n\t  , getOwnPropertyDescriptor = __webpack_require__(17).f;\n\t\n\t// B.2.2.5 Object.prototype.__lookupSetter__(P)\n\t__webpack_require__(7) && $export($export.P + __webpack_require__(58), 'Object', {\n\t  __lookupSetter__: function __lookupSetter__(P){\n\t    var O = toObject(this)\n\t      , K = toPrimitive(P, true)\n\t      , D;\n\t    do {\n\t      if(D = getOwnPropertyDescriptor(O, K))return D.set;\n\t    } while(O = getPrototypeOf(O));\n\t  }\n\t});\n\n/***/ },\n/* 282 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-object-values-entries\n\tvar $export = __webpack_require__(1)\n\t  , $values = __webpack_require__(106)(false);\n\t\n\t$export($export.S, 'Object', {\n\t  values: function values(it){\n\t    return $values(it);\n\t  }\n\t});\n\n/***/ },\n/* 283 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/zenparsing/es-observable\n\tvar $export     = __webpack_require__(1)\n\t  , global      = __webpack_require__(3)\n\t  , core        = __webpack_require__(25)\n\t  , microtask   = __webpack_require__(75)()\n\t  , OBSERVABLE  = __webpack_require__(6)('observable')\n\t  , aFunction   = __webpack_require__(12)\n\t  , anObject    = __webpack_require__(2)\n\t  , anInstance  = __webpack_require__(33)\n\t  , redefineAll = __webpack_require__(38)\n\t  , hide        = __webpack_require__(13)\n\t  , forOf       = __webpack_require__(43)\n\t  , RETURN      = forOf.RETURN;\n\t\n\tvar getMethod = function(fn){\n\t  return fn == null ? undefined : aFunction(fn);\n\t};\n\t\n\tvar cleanupSubscription = function(subscription){\n\t  var cleanup = subscription._c;\n\t  if(cleanup){\n\t    subscription._c = undefined;\n\t    cleanup();\n\t  }\n\t};\n\t\n\tvar subscriptionClosed = function(subscription){\n\t  return subscription._o === undefined;\n\t};\n\t\n\tvar closeSubscription = function(subscription){\n\t  if(!subscriptionClosed(subscription)){\n\t    subscription._o = undefined;\n\t    cleanupSubscription(subscription);\n\t  }\n\t};\n\t\n\tvar Subscription = function(observer, subscriber){\n\t  anObject(observer);\n\t  this._c = undefined;\n\t  this._o = observer;\n\t  observer = new SubscriptionObserver(this);\n\t  try {\n\t    var cleanup      = subscriber(observer)\n\t      , subscription = cleanup;\n\t    if(cleanup != null){\n\t      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };\n\t      else aFunction(cleanup);\n\t      this._c = cleanup;\n\t    }\n\t  } catch(e){\n\t    observer.error(e);\n\t    return;\n\t  } if(subscriptionClosed(this))cleanupSubscription(this);\n\t};\n\t\n\tSubscription.prototype = redefineAll({}, {\n\t  unsubscribe: function unsubscribe(){ closeSubscription(this); }\n\t});\n\t\n\tvar SubscriptionObserver = function(subscription){\n\t  this._s = subscription;\n\t};\n\t\n\tSubscriptionObserver.prototype = redefineAll({}, {\n\t  next: function next(value){\n\t    var subscription = this._s;\n\t    if(!subscriptionClosed(subscription)){\n\t      var observer = subscription._o;\n\t      try {\n\t        var m = getMethod(observer.next);\n\t        if(m)return m.call(observer, value);\n\t      } catch(e){\n\t        try {\n\t          closeSubscription(subscription);\n\t        } finally {\n\t          throw e;\n\t        }\n\t      }\n\t    }\n\t  },\n\t  error: function error(value){\n\t    var subscription = this._s;\n\t    if(subscriptionClosed(subscription))throw value;\n\t    var observer = subscription._o;\n\t    subscription._o = undefined;\n\t    try {\n\t      var m = getMethod(observer.error);\n\t      if(!m)throw value;\n\t      value = m.call(observer, value);\n\t    } catch(e){\n\t      try {\n\t        cleanupSubscription(subscription);\n\t      } finally {\n\t        throw e;\n\t      }\n\t    } cleanupSubscription(subscription);\n\t    return value;\n\t  },\n\t  complete: function complete(value){\n\t    var subscription = this._s;\n\t    if(!subscriptionClosed(subscription)){\n\t      var observer = subscription._o;\n\t      subscription._o = undefined;\n\t      try {\n\t        var m = getMethod(observer.complete);\n\t        value = m ? m.call(observer, value) : undefined;\n\t      } catch(e){\n\t        try {\n\t          cleanupSubscription(subscription);\n\t        } finally {\n\t          throw e;\n\t        }\n\t      } cleanupSubscription(subscription);\n\t      return value;\n\t    }\n\t  }\n\t});\n\t\n\tvar $Observable = function Observable(subscriber){\n\t  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\n\t};\n\t\n\tredefineAll($Observable.prototype, {\n\t  subscribe: function subscribe(observer){\n\t    return new Subscription(observer, this._f);\n\t  },\n\t  forEach: function forEach(fn){\n\t    var that = this;\n\t    return new (core.Promise || global.Promise)(function(resolve, reject){\n\t      aFunction(fn);\n\t      var subscription = that.subscribe({\n\t        next : function(value){\n\t          try {\n\t            return fn(value);\n\t          } catch(e){\n\t            reject(e);\n\t            subscription.unsubscribe();\n\t          }\n\t        },\n\t        error: reject,\n\t        complete: resolve\n\t      });\n\t    });\n\t  }\n\t});\n\t\n\tredefineAll($Observable, {\n\t  from: function from(x){\n\t    var C = typeof this === 'function' ? this : $Observable;\n\t    var method = getMethod(anObject(x)[OBSERVABLE]);\n\t    if(method){\n\t      var observable = anObject(method.call(x));\n\t      return observable.constructor === C ? observable : new C(function(observer){\n\t        return observable.subscribe(observer);\n\t      });\n\t    }\n\t    return new C(function(observer){\n\t      var done = false;\n\t      microtask(function(){\n\t        if(!done){\n\t          try {\n\t            if(forOf(x, false, function(it){\n\t              observer.next(it);\n\t              if(done)return RETURN;\n\t            }) === RETURN)return;\n\t          } catch(e){\n\t            if(done)throw e;\n\t            observer.error(e);\n\t            return;\n\t          } observer.complete();\n\t        }\n\t      });\n\t      return function(){ done = true; };\n\t    });\n\t  },\n\t  of: function of(){\n\t    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];\n\t    return new (typeof this === 'function' ? this : $Observable)(function(observer){\n\t      var done = false;\n\t      microtask(function(){\n\t        if(!done){\n\t          for(var i = 0; i < items.length; ++i){\n\t            observer.next(items[i]);\n\t            if(done)return;\n\t          } observer.complete();\n\t        }\n\t      });\n\t      return function(){ done = true; };\n\t    });\n\t  }\n\t});\n\t\n\thide($Observable.prototype, OBSERVABLE, function(){ return this; });\n\t\n\t$export($export.G, {Observable: $Observable});\n\t\n\t__webpack_require__(39)('Observable');\n\n/***/ },\n/* 284 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata                  = __webpack_require__(27)\n\t  , anObject                  = __webpack_require__(2)\n\t  , toMetaKey                 = metadata.key\n\t  , ordinaryDefineOwnMetadata = metadata.set;\n\t\n\tmetadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){\n\t  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));\n\t}});\n\n/***/ },\n/* 285 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(27)\n\t  , anObject               = __webpack_require__(2)\n\t  , toMetaKey              = metadata.key\n\t  , getOrCreateMetadataMap = metadata.map\n\t  , store                  = metadata.store;\n\t\n\tmetadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){\n\t  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])\n\t    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n\t  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;\n\t  if(metadataMap.size)return true;\n\t  var targetMetadata = store.get(target);\n\t  targetMetadata['delete'](targetKey);\n\t  return !!targetMetadata.size || store['delete'](target);\n\t}});\n\n/***/ },\n/* 286 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Set                     = __webpack_require__(115)\n\t  , from                    = __webpack_require__(91)\n\t  , metadata                = __webpack_require__(27)\n\t  , anObject                = __webpack_require__(2)\n\t  , getPrototypeOf          = __webpack_require__(18)\n\t  , ordinaryOwnMetadataKeys = metadata.keys\n\t  , toMetaKey               = metadata.key;\n\t\n\tvar ordinaryMetadataKeys = function(O, P){\n\t  var oKeys  = ordinaryOwnMetadataKeys(O, P)\n\t    , parent = getPrototypeOf(O);\n\t  if(parent === null)return oKeys;\n\t  var pKeys  = ordinaryMetadataKeys(parent, P);\n\t  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n\t};\n\t\n\tmetadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){\n\t  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n\t}});\n\n/***/ },\n/* 287 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(27)\n\t  , anObject               = __webpack_require__(2)\n\t  , getPrototypeOf         = __webpack_require__(18)\n\t  , ordinaryHasOwnMetadata = metadata.has\n\t  , ordinaryGetOwnMetadata = metadata.get\n\t  , toMetaKey              = metadata.key;\n\t\n\tvar ordinaryGetMetadata = function(MetadataKey, O, P){\n\t  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n\t  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);\n\t  var parent = getPrototypeOf(O);\n\t  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;\n\t};\n\t\n\tmetadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 288 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata                = __webpack_require__(27)\n\t  , anObject                = __webpack_require__(2)\n\t  , ordinaryOwnMetadataKeys = metadata.keys\n\t  , toMetaKey               = metadata.key;\n\t\n\tmetadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){\n\t  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n\t}});\n\n/***/ },\n/* 289 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(27)\n\t  , anObject               = __webpack_require__(2)\n\t  , ordinaryGetOwnMetadata = metadata.get\n\t  , toMetaKey              = metadata.key;\n\t\n\tmetadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryGetOwnMetadata(metadataKey, anObject(target)\n\t    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 290 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(27)\n\t  , anObject               = __webpack_require__(2)\n\t  , getPrototypeOf         = __webpack_require__(18)\n\t  , ordinaryHasOwnMetadata = metadata.has\n\t  , toMetaKey              = metadata.key;\n\t\n\tvar ordinaryHasMetadata = function(MetadataKey, O, P){\n\t  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n\t  if(hasOwn)return true;\n\t  var parent = getPrototypeOf(O);\n\t  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;\n\t};\n\t\n\tmetadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 291 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(27)\n\t  , anObject               = __webpack_require__(2)\n\t  , ordinaryHasOwnMetadata = metadata.has\n\t  , toMetaKey              = metadata.key;\n\t\n\tmetadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryHasOwnMetadata(metadataKey, anObject(target)\n\t    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 292 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata                  = __webpack_require__(27)\n\t  , anObject                  = __webpack_require__(2)\n\t  , aFunction                 = __webpack_require__(12)\n\t  , toMetaKey                 = metadata.key\n\t  , ordinaryDefineOwnMetadata = metadata.set;\n\t\n\tmetadata.exp({metadata: function metadata(metadataKey, metadataValue){\n\t  return function decorator(target, targetKey){\n\t    ordinaryDefineOwnMetadata(\n\t      metadataKey, metadataValue,\n\t      (targetKey !== undefined ? anObject : aFunction)(target),\n\t      toMetaKey(targetKey)\n\t    );\n\t  };\n\t}});\n\n/***/ },\n/* 293 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\tvar $export  = __webpack_require__(1);\n\t\n\t$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(95)('Set')});\n\n/***/ },\n/* 294 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/mathiasbynens/String.prototype.at\n\tvar $export = __webpack_require__(1)\n\t  , $at     = __webpack_require__(79)(true);\n\t\n\t$export($export.P, 'String', {\n\t  at: function at(pos){\n\t    return $at(this, pos);\n\t  }\n\t});\n\n/***/ },\n/* 295 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://tc39.github.io/String.prototype.matchAll/\n\tvar $export     = __webpack_require__(1)\n\t  , defined     = __webpack_require__(20)\n\t  , toLength    = __webpack_require__(9)\n\t  , isRegExp    = __webpack_require__(56)\n\t  , getFlags    = __webpack_require__(54)\n\t  , RegExpProto = RegExp.prototype;\n\t\n\tvar $RegExpStringIterator = function(regexp, string){\n\t  this._r = regexp;\n\t  this._s = string;\n\t};\n\t\n\t__webpack_require__(71)($RegExpStringIterator, 'RegExp String', function next(){\n\t  var match = this._r.exec(this._s);\n\t  return {value: match, done: match === null};\n\t});\n\t\n\t$export($export.P, 'String', {\n\t  matchAll: function matchAll(regexp){\n\t    defined(this);\n\t    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');\n\t    var S     = String(this)\n\t      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)\n\t      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n\t    rx.lastIndex = toLength(regexp.lastIndex);\n\t    return new $RegExpStringIterator(rx, S);\n\t  }\n\t});\n\n/***/ },\n/* 296 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/tc39/proposal-string-pad-start-end\n\tvar $export = __webpack_require__(1)\n\t  , $pad    = __webpack_require__(111);\n\t\n\t$export($export.P, 'String', {\n\t  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\n\t    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n\t  }\n\t});\n\n/***/ },\n/* 297 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/tc39/proposal-string-pad-start-end\n\tvar $export = __webpack_require__(1)\n\t  , $pad    = __webpack_require__(111);\n\t\n\t$export($export.P, 'String', {\n\t  padStart: function padStart(maxLength /*, fillString = ' ' */){\n\t    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n\t  }\n\t});\n\n/***/ },\n/* 298 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\n\t__webpack_require__(46)('trimLeft', function($trim){\n\t  return function trimLeft(){\n\t    return $trim(this, 1);\n\t  };\n\t}, 'trimStart');\n\n/***/ },\n/* 299 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\n\t__webpack_require__(46)('trimRight', function($trim){\n\t  return function trimRight(){\n\t    return $trim(this, 2);\n\t  };\n\t}, 'trimEnd');\n\n/***/ },\n/* 300 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(85)('asyncIterator');\n\n/***/ },\n/* 301 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(85)('observable');\n\n/***/ },\n/* 302 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/ljharb/proposal-global\n\tvar $export = __webpack_require__(1);\n\t\n\t$export($export.S, 'System', {global: __webpack_require__(3)});\n\n/***/ },\n/* 303 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $iterators    = __webpack_require__(87)\n\t  , redefine      = __webpack_require__(14)\n\t  , global        = __webpack_require__(3)\n\t  , hide          = __webpack_require__(13)\n\t  , Iterators     = __webpack_require__(44)\n\t  , wks           = __webpack_require__(6)\n\t  , ITERATOR      = wks('iterator')\n\t  , TO_STRING_TAG = wks('toStringTag')\n\t  , ArrayValues   = Iterators.Array;\n\t\n\tfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n\t  var NAME       = collections[i]\n\t    , Collection = global[NAME]\n\t    , proto      = Collection && Collection.prototype\n\t    , key;\n\t  if(proto){\n\t    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);\n\t    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n\t    Iterators[NAME] = ArrayValues;\n\t    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);\n\t  }\n\t}\n\n/***/ },\n/* 304 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(1)\n\t  , $task   = __webpack_require__(83);\n\t$export($export.G + $export.B, {\n\t  setImmediate:   $task.set,\n\t  clearImmediate: $task.clear\n\t});\n\n/***/ },\n/* 305 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// ie9- setTimeout & setInterval additional parameters fix\n\tvar global     = __webpack_require__(3)\n\t  , $export    = __webpack_require__(1)\n\t  , invoke     = __webpack_require__(55)\n\t  , partial    = __webpack_require__(132)\n\t  , navigator  = global.navigator\n\t  , MSIE       = !!navigator && /MSIE .\\./.test(navigator.userAgent); // <- dirty ie9- check\n\tvar wrap = function(set){\n\t  return MSIE ? function(fn, time /*, ...args */){\n\t    return set(invoke(\n\t      partial,\n\t      [].slice.call(arguments, 2),\n\t      typeof fn == 'function' ? fn : Function(fn)\n\t    ), time);\n\t  } : set;\n\t};\n\t$export($export.G + $export.B + $export.F * MSIE, {\n\t  setTimeout:  wrap(global.setTimeout),\n\t  setInterval: wrap(global.setInterval)\n\t});\n\n/***/ },\n/* 306 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(255);\n\t__webpack_require__(194);\n\t__webpack_require__(196);\n\t__webpack_require__(195);\n\t__webpack_require__(198);\n\t__webpack_require__(200);\n\t__webpack_require__(205);\n\t__webpack_require__(199);\n\t__webpack_require__(197);\n\t__webpack_require__(207);\n\t__webpack_require__(206);\n\t__webpack_require__(202);\n\t__webpack_require__(203);\n\t__webpack_require__(201);\n\t__webpack_require__(193);\n\t__webpack_require__(204);\n\t__webpack_require__(208);\n\t__webpack_require__(209);\n\t__webpack_require__(161);\n\t__webpack_require__(163);\n\t__webpack_require__(162);\n\t__webpack_require__(211);\n\t__webpack_require__(210);\n\t__webpack_require__(181);\n\t__webpack_require__(191);\n\t__webpack_require__(192);\n\t__webpack_require__(182);\n\t__webpack_require__(183);\n\t__webpack_require__(184);\n\t__webpack_require__(185);\n\t__webpack_require__(186);\n\t__webpack_require__(187);\n\t__webpack_require__(188);\n\t__webpack_require__(189);\n\t__webpack_require__(190);\n\t__webpack_require__(164);\n\t__webpack_require__(165);\n\t__webpack_require__(166);\n\t__webpack_require__(167);\n\t__webpack_require__(168);\n\t__webpack_require__(169);\n\t__webpack_require__(170);\n\t__webpack_require__(171);\n\t__webpack_require__(172);\n\t__webpack_require__(173);\n\t__webpack_require__(174);\n\t__webpack_require__(175);\n\t__webpack_require__(176);\n\t__webpack_require__(177);\n\t__webpack_require__(178);\n\t__webpack_require__(179);\n\t__webpack_require__(180);\n\t__webpack_require__(242);\n\t__webpack_require__(247);\n\t__webpack_require__(254);\n\t__webpack_require__(245);\n\t__webpack_require__(237);\n\t__webpack_require__(238);\n\t__webpack_require__(243);\n\t__webpack_require__(248);\n\t__webpack_require__(250);\n\t__webpack_require__(233);\n\t__webpack_require__(234);\n\t__webpack_require__(235);\n\t__webpack_require__(236);\n\t__webpack_require__(239);\n\t__webpack_require__(240);\n\t__webpack_require__(241);\n\t__webpack_require__(244);\n\t__webpack_require__(246);\n\t__webpack_require__(249);\n\t__webpack_require__(251);\n\t__webpack_require__(252);\n\t__webpack_require__(253);\n\t__webpack_require__(156);\n\t__webpack_require__(158);\n\t__webpack_require__(157);\n\t__webpack_require__(160);\n\t__webpack_require__(159);\n\t__webpack_require__(145);\n\t__webpack_require__(143);\n\t__webpack_require__(149);\n\t__webpack_require__(146);\n\t__webpack_require__(152);\n\t__webpack_require__(154);\n\t__webpack_require__(142);\n\t__webpack_require__(148);\n\t__webpack_require__(139);\n\t__webpack_require__(153);\n\t__webpack_require__(137);\n\t__webpack_require__(151);\n\t__webpack_require__(150);\n\t__webpack_require__(144);\n\t__webpack_require__(147);\n\t__webpack_require__(136);\n\t__webpack_require__(138);\n\t__webpack_require__(141);\n\t__webpack_require__(140);\n\t__webpack_require__(155);\n\t__webpack_require__(87);\n\t__webpack_require__(227);\n\t__webpack_require__(232);\n\t__webpack_require__(114);\n\t__webpack_require__(228);\n\t__webpack_require__(229);\n\t__webpack_require__(230);\n\t__webpack_require__(231);\n\t__webpack_require__(212);\n\t__webpack_require__(113);\n\t__webpack_require__(115);\n\t__webpack_require__(116);\n\t__webpack_require__(267);\n\t__webpack_require__(256);\n\t__webpack_require__(257);\n\t__webpack_require__(262);\n\t__webpack_require__(265);\n\t__webpack_require__(266);\n\t__webpack_require__(260);\n\t__webpack_require__(263);\n\t__webpack_require__(261);\n\t__webpack_require__(264);\n\t__webpack_require__(258);\n\t__webpack_require__(259);\n\t__webpack_require__(213);\n\t__webpack_require__(214);\n\t__webpack_require__(215);\n\t__webpack_require__(216);\n\t__webpack_require__(217);\n\t__webpack_require__(220);\n\t__webpack_require__(218);\n\t__webpack_require__(219);\n\t__webpack_require__(221);\n\t__webpack_require__(222);\n\t__webpack_require__(223);\n\t__webpack_require__(224);\n\t__webpack_require__(226);\n\t__webpack_require__(225);\n\t__webpack_require__(268);\n\t__webpack_require__(294);\n\t__webpack_require__(297);\n\t__webpack_require__(296);\n\t__webpack_require__(298);\n\t__webpack_require__(299);\n\t__webpack_require__(295);\n\t__webpack_require__(300);\n\t__webpack_require__(301);\n\t__webpack_require__(279);\n\t__webpack_require__(282);\n\t__webpack_require__(278);\n\t__webpack_require__(276);\n\t__webpack_require__(277);\n\t__webpack_require__(280);\n\t__webpack_require__(281);\n\t__webpack_require__(271);\n\t__webpack_require__(293);\n\t__webpack_require__(302);\n\t__webpack_require__(270);\n\t__webpack_require__(272);\n\t__webpack_require__(274);\n\t__webpack_require__(273);\n\t__webpack_require__(275);\n\t__webpack_require__(284);\n\t__webpack_require__(285);\n\t__webpack_require__(287);\n\t__webpack_require__(286);\n\t__webpack_require__(289);\n\t__webpack_require__(288);\n\t__webpack_require__(290);\n\t__webpack_require__(291);\n\t__webpack_require__(292);\n\t__webpack_require__(269);\n\t__webpack_require__(283);\n\t__webpack_require__(305);\n\t__webpack_require__(304);\n\t__webpack_require__(303);\n\tmodule.exports = __webpack_require__(25);\n\n/***/ },\n/* 307 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 308 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 309 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided, then outerFn.prototype instanceof Generator.\n\t    var generator = Object.create((outerFn || Generator).prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `value instanceof AwaitArgument` to determine if the yielded value is\n\t  // meant to be awaited. Some may consider the name of this method too\n\t  // cutesy, but they are curmudgeons.\n\t  runtime.awrap = function(arg) {\n\t    return new AwaitArgument(arg);\n\t  };\n\t\n\t  function AwaitArgument(arg) {\n\t    this.arg = arg;\n\t  }\n\t\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value instanceof AwaitArgument) {\n\t          return Promise.resolve(value.arg).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\t\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\t\n\t    if (typeof process === \"object\" && process.domain) {\n\t      invoke = process.domain.bind(invoke);\n\t    }\n\t\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          if (method === \"return\" ||\n\t              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n\t            // A return or throw (when the delegate iterator has no throw\n\t            // method) always terminates the yield* loop.\n\t            context.delegate = null;\n\t\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            var returnMethod = delegate.iterator[\"return\"];\n\t            if (returnMethod) {\n\t              var record = tryCatch(returnMethod, delegate.iterator, arg);\n\t              if (record.type === \"throw\") {\n\t                // If the return method threw an exception, let that\n\t                // exception prevail over the original return or throw.\n\t                method = \"throw\";\n\t                arg = record.arg;\n\t                continue;\n\t              }\n\t            }\n\t\n\t            if (method === \"return\") {\n\t              // Continue with the outer return, now that the delegate\n\t              // iterator has been terminated.\n\t              continue;\n\t            }\n\t          }\n\t\n\t          var record = tryCatch(\n\t            delegate.iterator[method],\n\t            delegate.iterator,\n\t            arg\n\t          );\n\t\n\t          if (record.type === \"throw\") {\n\t            context.delegate = null;\n\t\n\t            // Like returning generator.throw(uncaught), but without the\n\t            // overhead of an extra function call.\n\t            method = \"throw\";\n\t            arg = record.arg;\n\t            continue;\n\t          }\n\t\n\t          // Delegate generator ran and handled its own exceptions so\n\t          // regardless of what the method was, we continue as if it is\n\t          // \"next\" with an undefined arg.\n\t          method = \"next\";\n\t          arg = undefined;\n\t\n\t          var info = record.arg;\n\t          if (info.done) {\n\t            context[delegate.resultName] = info.value;\n\t            context.next = delegate.nextLoc;\n\t          } else {\n\t            state = GenStateSuspendedYield;\n\t            return info;\n\t          }\n\t\n\t          context.delegate = null;\n\t        }\n\t\n\t        if (method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = arg;\n\t\n\t        } else if (method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw arg;\n\t          }\n\t\n\t          if (context.dispatchException(arg)) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            method = \"next\";\n\t            arg = undefined;\n\t          }\n\t\n\t        } else if (method === \"return\") {\n\t          context.abrupt(\"return\", arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          var info = {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            if (context.delegate && method === \"next\") {\n\t              // Deliberately forget the last sent value so that we don't\n\t              // accidentally pass it on to the delegate.\n\t              arg = undefined;\n\t            }\n\t          } else {\n\t            return info;\n\t          }\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(arg) call above.\n\t          method = \"throw\";\n\t          arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\t\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t        return !!caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.next = finallyEntry.finallyLoc;\n\t      } else {\n\t        this.complete(record);\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = record.arg;\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(308)))\n\n/***/ },\n/* 310 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 311 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 239b6535d43be39bd003\n **/","var global    = require('./_global')\n  , core      = require('./_core')\n  , hide      = require('./_hide')\n  , redefine  = require('./_redefine')\n  , ctx       = require('./_ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target)redefine(target, key, out, type & $export.U);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_export.js\n ** module id = 1\n ** module chunks = 0\n **/","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_an-object.js\n ** module id = 2\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_global.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_fails.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-object.js\n ** module id = 5\n ** module chunks = 0\n **/","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_wks.js\n ** module id = 6\n ** module chunks = 0\n **/","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_descriptors.js\n ** module id = 7\n ** module chunks = 0\n **/","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-dp.js\n ** module id = 8\n ** module chunks = 0\n **/","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-length.js\n ** module id = 9\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-object.js\n ** module id = 10\n ** module chunks = 0\n **/","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_has.js\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_a-function.js\n ** module id = 12\n ** module chunks = 0\n **/","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_hide.js\n ** module id = 13\n ** module chunks = 0\n **/","var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_redefine.js\n ** module id = 14\n ** module chunks = 0\n **/","var $export = require('./_export')\n  , fails   = require('./_fails')\n  , defined = require('./_defined')\n  , quot    = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function(string, tag, attribute, value) {\n  var S  = String(defined(string))\n    , p1 = '<' + tag;\n  if(attribute !== '')p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function(NAME, exec){\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function(){\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-html.js\n ** module id = 15\n ** module chunks = 0\n **/","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-iobject.js\n ** module id = 16\n ** module chunks = 0\n **/","var pIE            = require('./_object-pie')\n  , createDesc     = require('./_property-desc')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , has            = require('./_has')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gopd.js\n ** module id = 17\n ** module chunks = 0\n **/","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gpo.js\n ** module id = 18\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_cof.js\n ** module id = 19\n ** module chunks = 0\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_defined.js\n ** module id = 20\n ** module chunks = 0\n **/","var fails = require('./_fails');\n\nmodule.exports = function(method, arg){\n  return !!method && fails(function(){\n    arg ? method.call(null, function(){}, 1) : method.call(null);\n  });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_strict-method.js\n ** module id = 21\n ** module chunks = 0\n **/","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-methods.js\n ** module id = 22\n ** module chunks = 0\n **/","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-sap.js\n ** module id = 23\n ** module chunks = 0\n **/","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-primitive.js\n ** module id = 24\n ** module chunks = 0\n **/","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_core.js\n ** module id = 25\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_ctx.js\n ** module id = 26\n ** module chunks = 0\n **/","var Map     = require('./es6.map')\n  , $export = require('./_export')\n  , shared  = require('./_shared')('metadata')\n  , store   = shared.store || (shared.store = new (require('./es6.weak-map')));\n\nvar getOrCreateMetadataMap = function(target, targetKey, create){\n  var targetMetadata = store.get(target);\n  if(!targetMetadata){\n    if(!create)return undefined;\n    store.set(target, targetMetadata = new Map);\n  }\n  var keyMetadata = targetMetadata.get(targetKey);\n  if(!keyMetadata){\n    if(!create)return undefined;\n    targetMetadata.set(targetKey, keyMetadata = new Map);\n  } return keyMetadata;\n};\nvar ordinaryHasOwnMetadata = function(MetadataKey, O, P){\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n};\nvar ordinaryGetOwnMetadata = function(MetadataKey, O, P){\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n};\nvar ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){\n  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n};\nvar ordinaryOwnMetadataKeys = function(target, targetKey){\n  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)\n    , keys        = [];\n  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });\n  return keys;\n};\nvar toMetaKey = function(it){\n  return it === undefined || typeof it == 'symbol' ? it : String(it);\n};\nvar exp = function(O){\n  $export($export.S, 'Reflect', O);\n};\n\nmodule.exports = {\n  store: store,\n  map: getOrCreateMetadataMap,\n  has: ordinaryHasOwnMetadata,\n  get: ordinaryGetOwnMetadata,\n  set: ordinaryDefineOwnMetadata,\n  keys: ordinaryOwnMetadataKeys,\n  key: toMetaKey,\n  exp: exp\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_metadata.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\nif(require('./_descriptors')){\n  var LIBRARY             = require('./_library')\n    , global              = require('./_global')\n    , fails               = require('./_fails')\n    , $export             = require('./_export')\n    , $typed              = require('./_typed')\n    , $buffer             = require('./_typed-buffer')\n    , ctx                 = require('./_ctx')\n    , anInstance          = require('./_an-instance')\n    , propertyDesc        = require('./_property-desc')\n    , hide                = require('./_hide')\n    , redefineAll         = require('./_redefine-all')\n    , toInteger           = require('./_to-integer')\n    , toLength            = require('./_to-length')\n    , toIndex             = require('./_to-index')\n    , toPrimitive         = require('./_to-primitive')\n    , has                 = require('./_has')\n    , same                = require('./_same-value')\n    , classof             = require('./_classof')\n    , isObject            = require('./_is-object')\n    , toObject            = require('./_to-object')\n    , isArrayIter         = require('./_is-array-iter')\n    , create              = require('./_object-create')\n    , getPrototypeOf      = require('./_object-gpo')\n    , gOPN                = require('./_object-gopn').f\n    , getIterFn           = require('./core.get-iterator-method')\n    , uid                 = require('./_uid')\n    , wks                 = require('./_wks')\n    , createArrayMethod   = require('./_array-methods')\n    , createArrayIncludes = require('./_array-includes')\n    , speciesConstructor  = require('./_species-constructor')\n    , ArrayIterators      = require('./es6.array.iterator')\n    , Iterators           = require('./_iterators')\n    , $iterDetect         = require('./_iter-detect')\n    , setSpecies          = require('./_set-species')\n    , arrayFill           = require('./_array-fill')\n    , arrayCopyWithin     = require('./_array-copy-within')\n    , $DP                 = require('./_object-dp')\n    , $GOPD               = require('./_object-gopd')\n    , dP                  = $DP.f\n    , gOPD                = $GOPD.f\n    , RangeError          = global.RangeError\n    , TypeError           = global.TypeError\n    , Uint8Array          = global.Uint8Array\n    , ARRAY_BUFFER        = 'ArrayBuffer'\n    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER\n    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'\n    , PROTOTYPE           = 'prototype'\n    , ArrayProto          = Array[PROTOTYPE]\n    , $ArrayBuffer        = $buffer.ArrayBuffer\n    , $DataView           = $buffer.DataView\n    , arrayForEach        = createArrayMethod(0)\n    , arrayFilter         = createArrayMethod(2)\n    , arraySome           = createArrayMethod(3)\n    , arrayEvery          = createArrayMethod(4)\n    , arrayFind           = createArrayMethod(5)\n    , arrayFindIndex      = createArrayMethod(6)\n    , arrayIncludes       = createArrayIncludes(true)\n    , arrayIndexOf        = createArrayIncludes(false)\n    , arrayValues         = ArrayIterators.values\n    , arrayKeys           = ArrayIterators.keys\n    , arrayEntries        = ArrayIterators.entries\n    , arrayLastIndexOf    = ArrayProto.lastIndexOf\n    , arrayReduce         = ArrayProto.reduce\n    , arrayReduceRight    = ArrayProto.reduceRight\n    , arrayJoin           = ArrayProto.join\n    , arraySort           = ArrayProto.sort\n    , arraySlice          = ArrayProto.slice\n    , arrayToString       = ArrayProto.toString\n    , arrayToLocaleString = ArrayProto.toLocaleString\n    , ITERATOR            = wks('iterator')\n    , TAG                 = wks('toStringTag')\n    , TYPED_CONSTRUCTOR   = uid('typed_constructor')\n    , DEF_CONSTRUCTOR     = uid('def_constructor')\n    , ALL_CONSTRUCTORS    = $typed.CONSTR\n    , TYPED_ARRAY         = $typed.TYPED\n    , VIEW                = $typed.VIEW\n    , WRONG_LENGTH        = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function(O, length){\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function(){\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){\n    new Uint8Array(1).set({});\n  });\n\n  var strictToLength = function(it, SAME){\n    if(it === undefined)throw TypeError(WRONG_LENGTH);\n    var number = +it\n      , length = toLength(it);\n    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);\n    return length;\n  };\n\n  var toOffset = function(it, BYTES){\n    var offset = toInteger(it);\n    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function(it){\n    if(isObject(it) && TYPED_ARRAY in it)return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function(C, length){\n    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function(O, list){\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function(C, list){\n    var index  = 0\n      , length = list.length\n      , result = allocate(C, length);\n    while(length > index)result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function(it, key, internal){\n    dP(it, key, {get: function(){ return this._d[internal]; }});\n  };\n\n  var $from = function from(source /*, mapfn, thisArg */){\n    var O       = toObject(source)\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , iterFn  = getIterFn(O)\n      , i, length, values, result, step, iterator;\n    if(iterFn != undefined && !isArrayIter(iterFn)){\n      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){\n        values.push(step.value);\n      } O = values;\n    }\n    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);\n    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/*...items*/){\n    var index  = 0\n      , length = arguments.length\n      , result = allocate(this, length);\n    while(length > index)result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString(){\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /*, end */){\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /*, thisArg */){\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /*, thisArg */){\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /*, thisArg */){\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /*, thisArg */){\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /*, thisArg */){\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /*, fromIndex */){\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /*, fromIndex */){\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator){ // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /*, thisArg */){\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse(){\n      var that   = this\n        , length = validate(that).length\n        , middle = Math.floor(length / 2)\n        , index  = 0\n        , value;\n      while(index < middle){\n        value         = that[index];\n        that[index++] = that[--length];\n        that[length]  = value;\n      } return that;\n    },\n    some: function some(callbackfn /*, thisArg */){\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn){\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end){\n      var O      = validate(this)\n        , length = O.length\n        , $begin = toIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end){\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /*, offset */){\n    validate(this);\n    var offset = toOffset(arguments[1], 1)\n      , length = this.length\n      , src    = toObject(arrayLike)\n      , len    = toLength(src.length)\n      , index  = 0;\n    if(len + offset > length)throw RangeError(WRONG_LENGTH);\n    while(index < len)this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries(){\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys(){\n      return arrayKeys.call(validate(this));\n    },\n    values: function values(){\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function(target, key){\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key){\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc){\n    if(isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ){\n      target[key] = desc.value;\n      return target;\n    } else return dP(target, key, desc);\n  };\n\n  if(!ALL_CONSTRUCTORS){\n    $GOPD.f = $getDesc;\n    $DP.f   = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty:           $setDesc\n  });\n\n  if(fails(function(){ arrayToString.call({}); })){\n    arrayToString = arrayToLocaleString = function toString(){\n      return arrayJoin.call(this);\n    }\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice:          $slice,\n    set:            $set,\n    constructor:    function(){ /* noop */ },\n    toString:       arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function(){ return this[TYPED_ARRAY]; }\n  });\n\n  module.exports = function(KEY, BYTES, wrapper, CLAMPED){\n    CLAMPED = !!CLAMPED;\n    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'\n      , ISNT_UINT8 = NAME != 'Uint8Array'\n      , GETTER     = 'get' + KEY\n      , SETTER     = 'set' + KEY\n      , TypedArray = global[NAME]\n      , Base       = TypedArray || {}\n      , TAC        = TypedArray && getPrototypeOf(TypedArray)\n      , FORCED     = !TypedArray || !$typed.ABV\n      , O          = {}\n      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function(that, index){\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function(that, index, value){\n      var data = that._d;\n      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function(that, index){\n      dP(that, index, {\n        get: function(){\n          return getter(this, index);\n        },\n        set: function(value){\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if(FORCED){\n      TypedArray = wrapper(function(that, data, $offset, $length){\n        anInstance(that, TypedArray, NAME, '_d');\n        var index  = 0\n          , offset = 0\n          , buffer, byteLength, length, klass;\n        if(!isObject(data)){\n          length     = strictToLength(data, true)\n          byteLength = length * BYTES;\n          buffer     = new $ArrayBuffer(byteLength);\n        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if($length === undefined){\n            if($len % BYTES)throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if(byteLength < 0)throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if(TYPED_ARRAY in data){\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while(index < length)addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if(!$iterDetect(function(iter){\n      // V8 works with iterators, but fails in many other cases\n      // https://code.google.com/p/v8/issues/detail?id=4552\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)){\n      TypedArray = wrapper(function(that, data, $offset, $length){\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));\n        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if(TYPED_ARRAY in data)return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){\n        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator   = TypedArrayPrototype[ITERATOR]\n      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)\n      , $iterator         = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){\n      dP(TypedArrayPrototype, TAG, {\n        get: function(){ return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES,\n      from: $from,\n      of: $of\n    });\n\n    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});\n\n    $export($export.P + $export.F * fails(function(){\n      new TypedArray(1).slice();\n    }), NAME, {slice: $slice});\n\n    $export($export.P + $export.F * (fails(function(){\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()\n    }) || !fails(function(){\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, {toLocaleString: $toLocaleString});\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function(){ /* empty */ };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_typed-array.js\n ** module id = 28\n ** module chunks = 0\n **/","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_meta.js\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_property-desc.js\n ** module id = 30\n ** module chunks = 0\n **/","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-integer.js\n ** module id = 31\n ** module chunks = 0\n **/","\n/*\n * Konva JavaScript Framework v1.2.1\n * http://konvajs.github.io/\n * Licensed under the MIT or GPL Version 2 licenses.\n * Date: Thu Sep 15 2016\n *\n * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n * Modified work Copyright (C) 2014 - 2015 by Anton Lavrenov (Konva)\n *\n * @license\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// runtime check for already included Konva\n(function(global){\n    'use strict';\n    /**\n     * @namespace Konva\n     */\n\n    var PI_OVER_180 = Math.PI / 180;\n\n    var Konva = {\n        // public\n        version: '1.2.1',\n\n        // private\n        stages: [],\n        idCounter: 0,\n        ids: {},\n        names: {},\n        shapes: {},\n        listenClickTap: false,\n        inDblClickWindow: false,\n\n        // configurations\n        enableTrace: false,\n        traceArrMax: 100,\n        dblClickWindow: 400,\n        /**\n         * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n         * But you may override such property, if you want to use your value.\n         * @property pixelRatio\n         * @default undefined\n         * @memberof Konva\n         * @example\n         * Konva.pixelRatio = 1;\n         */\n        pixelRatio: undefined,\n        /**\n         * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n         * only then start dragging.\n         * @property dragDistance\n         * @default 0\n         * @memberof Konva\n         * @example\n         * Konva.dragDistance = 10;\n         */\n        dragDistance: 0,\n        /**\n         * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n         * @property angleDeg\n         * @default true\n         * @memberof Konva\n         * @example\n         * node.rotation(45); // 45 degrees\n         * Konva.angleDeg = false;\n         * node.rotation(Math.PI / 2); // PI/2 radian\n         */\n        angleDeg: true,\n         /**\n         * Show different warnings about errors or wrong API usage\n         * @property showWarnings\n         * @default true\n         * @memberof Konva\n         * @example\n         * Konva.showWarnings = false;\n         */\n        showWarnings: true,\n\n\n\n        /**\n         * @namespace Filters\n         * @memberof Konva\n         */\n        Filters: {},\n\n        /**\n         * returns whether or not drag and drop is currently active\n         * @method\n         * @memberof Konva\n         */\n        isDragging: function() {\n            var dd = Konva.DD;\n\n            // if DD is not included with the build, then\n            // drag and drop is not even possible\n            if (dd) {\n                return dd.isDragging;\n            }\n            return false;\n        },\n        /**\n        * returns whether or not a drag and drop operation is ready, but may\n        *  not necessarily have started\n        * @method\n        * @memberof Konva\n        */\n        isDragReady: function() {\n            var dd = Konva.DD;\n\n            // if DD is not included with the build, then\n            // drag and drop is not even possible\n            if (dd) {\n                return !!dd.node;\n            }\n            return false;\n        },\n        _addId: function(node, id) {\n            if(id !== undefined) {\n                this.ids[id] = node;\n            }\n        },\n        _removeId: function(id) {\n            if(id !== undefined) {\n                delete this.ids[id];\n            }\n        },\n        _addName: function(node, name) {\n            if(name) {\n                if(!this.names[name]) {\n                    this.names[name] = [];\n                }\n                this.names[name].push(node);\n            }\n        },\n        _removeName: function(name, _id) {\n            if(!name) {\n                return;\n            }\n            var nodes = this.names[name];\n            if(!nodes) {\n                return;\n            }\n            for(var n = 0; n < nodes.length; n++) {\n                var no = nodes[n];\n                if(no._id === _id) {\n                    nodes.splice(n, 1);\n                }\n            }\n            if(nodes.length === 0) {\n                delete this.names[name];\n            }\n        },\n        getAngle: function(angle) {\n            return this.angleDeg ? angle * PI_OVER_180 : angle;\n        },\n        _detectIE: function(ua) {\n            var msie = ua.indexOf('msie ');\n            if (msie > 0) {\n                // IE 10 or older => return version number\n                return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n            }\n\n            var trident = ua.indexOf('trident/');\n            if (trident > 0) {\n                // IE 11 => return version number\n                var rv = ua.indexOf('rv:');\n                return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n            }\n\n            var edge = ua.indexOf('edge/');\n            if (edge > 0) {\n                // Edge (IE 12+) => return version number\n                return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n            }\n\n            // other browser\n            return false;\n        },\n        _parseUA: function(userAgent) {\n            var ua = userAgent.toLowerCase(),\n                // jQuery UA regex\n                match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\n                /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\n                /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\n                /(msie) ([\\w.]+)/.exec( ua ) ||\n                ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\n                [],\n\n                // adding mobile flag as well\n                mobile = !!(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i)),\n                ieMobile = !!(userAgent.match(/IEMobile/i));\n\n            return {\n                browser: match[ 1 ] || '',\n                version: match[ 2 ] || '0',\n                isIE: Konva._detectIE(ua),\n                // adding mobile flab\n                mobile: mobile,\n                ieMobile: ieMobile  // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n            };\n        },\n        // user agent\n        UA: undefined\n    };\n\n    var glob =\n        typeof window !== 'undefined' ? window :\n        typeof global !== 'undefined' ? global :\n        typeof WorkerGlobalScope !== 'undefined' ? self : {};\n\n\n    Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\n\n    if (glob.Konva) {\n        console.error(\n            'Konva instance is already exist in current eviroment. ' +\n            'Please use only one instance.'\n        );\n    }\n    glob.Konva = Konva;\n    Konva.global = glob;\n\n\n    if( typeof exports === 'object') {\n        // runtime-check for browserify and nw.js (node-webkit)\n        if(glob.window && glob.window.document) {\n            Konva.document = glob.window.document;\n            Konva.window = glob.window;\n        } else {\n            // Node. Does not work with strict CommonJS, but\n            // only CommonJS-like enviroments that support module.exports,\n            // like Node.\n            var Canvas = require('canvas');\n            var jsdom = require('jsdom').jsdom;\n\n            Konva.window = jsdom('<!DOCTYPE html><html><head></head><body></body></html>').defaultView;\n            Konva.document = Konva.window.document;\n            Konva.window.Image = Canvas.Image;\n            Konva._nodeCanvas = Canvas;\n        }\n        module.exports = Konva;\n        return;\n    }\n    else if( typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            return Konva;\n        });\n    }\n    Konva.document = document;\n    Konva.window = window;\n})(typeof window !== 'undefined' ? window : global);\n\n/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n(function() {\n    'use strict';\n    /**\n     * Collection constructor.  Collection extends\n     *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n     * @constructor\n     * @memberof Konva\n     */\n    Konva.Collection = function() {\n        var args = [].slice.call(arguments), length = args.length, i = 0;\n\n        this.length = length;\n        for(; i < length; i++) {\n            this[i] = args[i];\n        }\n        return this;\n    };\n    Konva.Collection.prototype = [];\n    /**\n     * iterate through node array and run a function for each node.\n     *  The node and index is passed into the function\n     * @method\n     * @memberof Konva.Collection.prototype\n     * @param {Function} func\n     * @example\n     * // get all nodes with name foo inside layer, and set x to 10 for each\n     * layer.get('.foo').each(function(shape, n) {\n     *   shape.setX(10);\n     * });\n     */\n    Konva.Collection.prototype.each = function(func) {\n        for(var n = 0; n < this.length; n++) {\n            func(this[n], n);\n        }\n    };\n    /**\n     * convert collection into an array\n     * @method\n     * @memberof Konva.Collection.prototype\n     */\n    Konva.Collection.prototype.toArray = function() {\n        var arr = [],\n            len = this.length,\n            n;\n\n        for(n = 0; n < len; n++) {\n            arr.push(this[n]);\n        }\n        return arr;\n    };\n    /**\n     * convert array into a collection\n     * @method\n     * @memberof Konva.Collection\n     * @param {Array} arr\n     */\n    Konva.Collection.toCollection = function(arr) {\n        var collection = new Konva.Collection(),\n            len = arr.length,\n            n;\n\n        for(n = 0; n < len; n++) {\n            collection.push(arr[n]);\n        }\n        return collection;\n    };\n\n    // map one method by it's name\n    Konva.Collection._mapMethod = function(methodName) {\n        Konva.Collection.prototype[methodName] = function() {\n            var len = this.length,\n                i;\n\n            var args = [].slice.call(arguments);\n            for(i = 0; i < len; i++) {\n                this[i][methodName].apply(this[i], args);\n            }\n\n            return this;\n        };\n    };\n\n    Konva.Collection.mapMethods = function(constructor) {\n        var prot = constructor.prototype;\n        for(var methodName in prot) {\n            Konva.Collection._mapMethod(methodName);\n        }\n    };\n\n    /*\n    * Last updated November 2011\n    * By Simon Sarris\n    * www.simonsarris.com\n    * sarris@acm.org\n    *\n    * Free to use and distribute at will\n    * So long as you are nice to people, etc\n    */\n\n    /*\n    * The usage of this class was inspired by some of the work done by a forked\n    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n    * class.  Modified by Eric Rowell\n    */\n\n    /**\n     * Transform constructor\n     * @constructor\n     * @param {Array} [m] Optional six-element matrix\n     * @memberof Konva\n     */\n    Konva.Transform = function(m) {\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    };\n\n    Konva.Transform.prototype = {\n        /**\n         * Copy Konva.Transform object\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Konva.Transform}\n         */\n        copy: function() {\n            return new Konva.Transform(this.m);\n        },\n        /**\n         * Transform point\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Object} point 2D point(x, y)\n         * @returns {Object} 2D point(x, y)\n         */\n        point: function(point) {\n            var m = this.m;\n            return {\n                x: m[0] * point.x + m[2] * point.y + m[4],\n                y: m[1] * point.x + m[3] * point.y + m[5]\n            };\n        },\n        /**\n         * Apply translation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} x\n         * @param {Number} y\n         * @returns {Konva.Transform}\n         */\n        translate: function(x, y) {\n            this.m[4] += this.m[0] * x + this.m[2] * y;\n            this.m[5] += this.m[1] * x + this.m[3] * y;\n            return this;\n        },\n        /**\n         * Apply scale\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} sx\n         * @param {Number} sy\n         * @returns {Konva.Transform}\n         */\n        scale: function(sx, sy) {\n            this.m[0] *= sx;\n            this.m[1] *= sx;\n            this.m[2] *= sy;\n            this.m[3] *= sy;\n            return this;\n        },\n        /**\n         * Apply rotation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} rad  Angle in radians\n         * @returns {Konva.Transform}\n         */\n        rotate: function(rad) {\n            var c = Math.cos(rad);\n            var s = Math.sin(rad);\n            var m11 = this.m[0] * c + this.m[2] * s;\n            var m12 = this.m[1] * c + this.m[3] * s;\n            var m21 = this.m[0] * -s + this.m[2] * c;\n            var m22 = this.m[1] * -s + this.m[3] * c;\n            this.m[0] = m11;\n            this.m[1] = m12;\n            this.m[2] = m21;\n            this.m[3] = m22;\n            return this;\n        },\n        /**\n         * Returns the translation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Object} 2D point(x, y)\n         */\n        getTranslation: function() {\n            return {\n                x: this.m[4],\n                y: this.m[5]\n            };\n        },\n        /**\n         * Apply skew\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} sx\n         * @param {Number} sy\n         * @returns {Konva.Transform}\n         */\n        skew: function(sx, sy) {\n            var m11 = this.m[0] + this.m[2] * sy;\n            var m12 = this.m[1] + this.m[3] * sy;\n            var m21 = this.m[2] + this.m[0] * sx;\n            var m22 = this.m[3] + this.m[1] * sx;\n            this.m[0] = m11;\n            this.m[1] = m12;\n            this.m[2] = m21;\n            this.m[3] = m22;\n            return this;\n         },\n        /**\n         * Transform multiplication\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Konva.Transform} matrix\n         * @returns {Konva.Transform}\n         */\n        multiply: function(matrix) {\n            var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n            var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n            var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n            var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n            var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n            var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n            this.m[0] = m11;\n            this.m[1] = m12;\n            this.m[2] = m21;\n            this.m[3] = m22;\n            this.m[4] = dx;\n            this.m[5] = dy;\n            return this;\n        },\n        /**\n         * Invert the matrix\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Konva.Transform}\n         */\n        invert: function() {\n            var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n            var m0 = this.m[3] * d;\n            var m1 = -this.m[1] * d;\n            var m2 = -this.m[2] * d;\n            var m3 = this.m[0] * d;\n            var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n            var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n            this.m[0] = m0;\n            this.m[1] = m1;\n            this.m[2] = m2;\n            this.m[3] = m3;\n            this.m[4] = m4;\n            this.m[5] = m5;\n            return this;\n        },\n        /**\n         * return matrix\n         * @method\n         * @memberof Konva.Transform.prototype\n         */\n        getMatrix: function() {\n            return this.m;\n        },\n        /**\n         * set to absolute position via translation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Konva.Transform}\n         * @author ericdrowell\n         */\n        setAbsolutePosition: function(x, y) {\n            var m0 = this.m[0],\n                m1 = this.m[1],\n                m2 = this.m[2],\n                m3 = this.m[3],\n                m4 = this.m[4],\n                m5 = this.m[5],\n                yt = ((m0 * (y - m5)) - (m1 * (x - m4))) / ((m0 * m3) - (m1 * m2)),\n                xt = (x - m4 - (m2 * yt)) / m0;\n\n            return this.translate(xt, yt);\n        }\n    };\n\n    // CONSTANTS\n    var CONTEXT_2D = '2d',\n        OBJECT_ARRAY = '[object Array]',\n        OBJECT_NUMBER = '[object Number]',\n        OBJECT_STRING = '[object String]',\n        PI_OVER_DEG180 = Math.PI / 180,\n        DEG180_OVER_PI = 180 / Math.PI,\n        HASH = '#',\n        EMPTY_STRING = '',\n        ZERO = '0',\n        KONVA_WARNING = 'Konva warning: ',\n        KONVA_ERROR = 'Konva error: ',\n        RGB_PAREN = 'rgb(',\n        COLORS = {\n            aliceblue: [240, 248, 255],\n            antiquewhite: [250, 235, 215],\n            aqua: [0, 255, 255],\n            aquamarine: [127, 255, 212],\n            azure: [240, 255, 255],\n            beige: [245, 245, 220],\n            bisque: [255, 228, 196],\n            black: [0, 0, 0],\n            blanchedalmond: [255, 235, 205],\n            blue: [0, 0, 255],\n            blueviolet: [138, 43, 226],\n            brown: [165, 42, 42],\n            burlywood: [222, 184, 135],\n            cadetblue: [95, 158, 160],\n            chartreuse: [127, 255, 0],\n            chocolate: [210, 105, 30],\n            coral: [255, 127, 80],\n            cornflowerblue: [100, 149, 237],\n            cornsilk: [255, 248, 220],\n            crimson: [220, 20, 60],\n            cyan: [0, 255, 255],\n            darkblue: [0, 0, 139],\n            darkcyan: [0, 139, 139],\n            darkgoldenrod: [184, 132, 11],\n            darkgray: [169, 169, 169],\n            darkgreen: [0, 100, 0],\n            darkgrey: [169, 169, 169],\n            darkkhaki: [189, 183, 107],\n            darkmagenta: [139, 0, 139],\n            darkolivegreen: [85, 107, 47],\n            darkorange: [255, 140, 0],\n            darkorchid: [153, 50, 204],\n            darkred: [139, 0, 0],\n            darksalmon: [233, 150, 122],\n            darkseagreen: [143, 188, 143],\n            darkslateblue: [72, 61, 139],\n            darkslategray: [47, 79, 79],\n            darkslategrey: [47, 79, 79],\n            darkturquoise: [0, 206, 209],\n            darkviolet: [148, 0, 211],\n            deeppink: [255, 20, 147],\n            deepskyblue: [0, 191, 255],\n            dimgray: [105, 105, 105],\n            dimgrey: [105, 105, 105],\n            dodgerblue: [30, 144, 255],\n            firebrick: [178, 34, 34],\n            floralwhite: [255, 255, 240],\n            forestgreen: [34, 139, 34],\n            fuchsia: [255, 0, 255],\n            gainsboro: [220, 220, 220],\n            ghostwhite: [248, 248, 255],\n            gold: [255, 215, 0],\n            goldenrod: [218, 165, 32],\n            gray: [128, 128, 128],\n            green: [0, 128, 0],\n            greenyellow: [173, 255, 47],\n            grey: [128, 128, 128],\n            honeydew: [240, 255, 240],\n            hotpink: [255, 105, 180],\n            indianred: [205, 92, 92],\n            indigo: [75, 0, 130],\n            ivory: [255, 255, 240],\n            khaki: [240, 230, 140],\n            lavender: [230, 230, 250],\n            lavenderblush: [255, 240, 245],\n            lawngreen: [124, 252, 0],\n            lemonchiffon: [255, 250, 205],\n            lightblue: [173, 216, 230],\n            lightcoral: [240, 128, 128],\n            lightcyan: [224, 255, 255],\n            lightgoldenrodyellow: [250, 250, 210],\n            lightgray: [211, 211, 211],\n            lightgreen: [144, 238, 144],\n            lightgrey: [211, 211, 211],\n            lightpink: [255, 182, 193],\n            lightsalmon: [255, 160, 122],\n            lightseagreen: [32, 178, 170],\n            lightskyblue: [135, 206, 250],\n            lightslategray: [119, 136, 153],\n            lightslategrey: [119, 136, 153],\n            lightsteelblue: [176, 196, 222],\n            lightyellow: [255, 255, 224],\n            lime: [0, 255, 0],\n            limegreen: [50, 205, 50],\n            linen: [250, 240, 230],\n            magenta: [255, 0, 255],\n            maroon: [128, 0, 0],\n            mediumaquamarine: [102, 205, 170],\n            mediumblue: [0, 0, 205],\n            mediumorchid: [186, 85, 211],\n            mediumpurple: [147, 112, 219],\n            mediumseagreen: [60, 179, 113],\n            mediumslateblue: [123, 104, 238],\n            mediumspringgreen: [0, 250, 154],\n            mediumturquoise: [72, 209, 204],\n            mediumvioletred: [199, 21, 133],\n            midnightblue: [25, 25, 112],\n            mintcream: [245, 255, 250],\n            mistyrose: [255, 228, 225],\n            moccasin: [255, 228, 181],\n            navajowhite: [255, 222, 173],\n            navy: [0, 0, 128],\n            oldlace: [253, 245, 230],\n            olive: [128, 128, 0],\n            olivedrab: [107, 142, 35],\n            orange: [255, 165, 0],\n            orangered: [255, 69, 0],\n            orchid: [218, 112, 214],\n            palegoldenrod: [238, 232, 170],\n            palegreen: [152, 251, 152],\n            paleturquoise: [175, 238, 238],\n            palevioletred: [219, 112, 147],\n            papayawhip: [255, 239, 213],\n            peachpuff: [255, 218, 185],\n            peru: [205, 133, 63],\n            pink: [255, 192, 203],\n            plum: [221, 160, 203],\n            powderblue: [176, 224, 230],\n            purple: [128, 0, 128],\n            rebeccapurple: [102, 51, 153],\n            red: [255, 0, 0],\n            rosybrown: [188, 143, 143],\n            royalblue: [65, 105, 225],\n            saddlebrown: [139, 69, 19],\n            salmon: [250, 128, 114],\n            sandybrown: [244, 164, 96],\n            seagreen: [46, 139, 87],\n            seashell: [255, 245, 238],\n            sienna: [160, 82, 45],\n            silver: [192, 192, 192],\n            skyblue: [135, 206, 235],\n            slateblue: [106, 90, 205],\n            slategray: [119, 128, 144],\n            slategrey: [119, 128, 144],\n            snow: [255, 255, 250],\n            springgreen: [0, 255, 127],\n            steelblue: [70, 130, 180],\n            tan: [210, 180, 140],\n            teal: [0, 128, 128],\n            thistle: [216, 191, 216],\n            transparent: [255, 255, 255, 0],\n            tomato: [255, 99, 71],\n            turquoise: [64, 224, 208],\n            violet: [238, 130, 238],\n            wheat: [245, 222, 179],\n            white: [255, 255, 255],\n            whitesmoke: [245, 245, 245],\n            yellow: [255, 255, 0],\n            yellowgreen: [154, 205, 5]\n        },\n\n        RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\n    /**\n     * @namespace Util\n     * @memberof Konva\n     */\n    Konva.Util = {\n        /*\n         * cherry-picked utilities from underscore.js\n         */\n        _isElement: function(obj) {\n            return !!(obj && obj.nodeType == 1);\n        },\n        _isFunction: function(obj) {\n            return !!(obj && obj.constructor && obj.call && obj.apply);\n        },\n        _isObject: function(obj) {\n            return (!!obj && obj.constructor === Object);\n        },\n        _isArray: function(obj) {\n            return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n        },\n        _isNumber: function(obj) {\n            return Object.prototype.toString.call(obj) === OBJECT_NUMBER;\n        },\n        _isString: function(obj) {\n            return Object.prototype.toString.call(obj) === OBJECT_STRING;\n        },\n        // Returns a function, that, when invoked, will only be triggered at most once\n        // during a given window of time. Normally, the throttled function will run\n        // as much as it can, without ever going more than once per `wait` duration;\n        // but if you'd like to disable the execution on the leading edge, pass\n        // `{leading: false}`. To disable execution on the trailing edge, ditto.\n        _throttle: function(func, wait, opts) {\n            var context, args, result;\n            var timeout = null;\n            var previous = 0;\n            var options = opts || {};\n            var later = function() {\n                previous = options.leading === false ? 0 : new Date().getTime();\n                timeout = null;\n                result = func.apply(context, args);\n                context = args = null;\n            };\n            return function() {\n                var now = new Date().getTime();\n                if (!previous && options.leading === false) {\n                    previous = now;\n                }\n                var remaining = wait - (now - previous);\n                context = this;\n                args = arguments;\n                if (remaining <= 0) {\n                  clearTimeout(timeout);\n                  timeout = null;\n                  previous = now;\n                  result = func.apply(context, args);\n                  context = args = null;\n                } else if (!timeout && options.trailing !== false) {\n                  timeout = setTimeout(later, remaining);\n                }\n                return result;\n            };\n        },\n        /*\n         * other utils\n         */\n        _hasMethods: function(obj) {\n            var names = [],\n                key;\n\n            for(key in obj) {\n                if (!obj.hasOwnProperty(key)) {\n                    continue;\n                }\n                if(this._isFunction(obj[key])) {\n                    names.push(key);\n                }\n            }\n            return names.length > 0;\n        },\n        isValidSelector: function(selector) {\n            if (typeof selector !== 'string') {\n                return false;\n            }\n            var firstChar = selector[0];\n            return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n        },\n        createCanvasElement: function() {\n            var canvas = Konva.document.createElement('canvas');\n            // on some environments canvas.style is readonly\n            try {\n                canvas.style = canvas.style || {};\n            } catch (e) {\n            }\n            return canvas;\n        },\n        isBrowser: function() {\n            return (typeof exports !== 'object');\n        },\n        _isInDocument: function(el) {\n            while(el = el.parentNode) {\n                if(el == Konva.document) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        _simplifyArray: function(arr) {\n            var retArr = [],\n                len = arr.length,\n                util = Konva.Util,\n                n, val;\n\n            for (n = 0; n < len; n++) {\n                val = arr[n];\n                if (util._isNumber(val)) {\n                    val = Math.round(val * 1000) / 1000;\n                }\n                else if (!util._isString(val)) {\n                    val = val.toString();\n                }\n\n                retArr.push(val);\n            }\n\n            return retArr;\n        },\n        /*\n         * arg can be an image object or image data\n         */\n        _getImage: function(arg, callback) {\n            var imageObj, canvas;\n\n            // if arg is null or undefined\n            if(!arg) {\n                callback(null);\n            }\n\n            // if arg is already an image object\n            else if(this._isElement(arg)) {\n                callback(arg);\n            }\n\n            // if arg is a string, then it's a data url\n            else if(this._isString(arg)) {\n                imageObj = new Konva.window.Image();\n                imageObj.onload = function() {\n                    callback(imageObj);\n                };\n                imageObj.src = arg;\n            }\n\n            //if arg is an object that contains the data property, it's an image object\n            else if(arg.data) {\n                canvas = Konva.Util.createCanvasElement();\n                canvas.width = arg.width;\n                canvas.height = arg.height;\n                var _context = canvas.getContext(CONTEXT_2D);\n                _context.putImageData(arg, 0, 0);\n                this._getImage(canvas.toDataURL(), callback);\n            }\n            else {\n                callback(null);\n            }\n        },\n        _getRGBAString: function(obj) {\n            var red = obj.red || 0,\n                green = obj.green || 0,\n                blue = obj.blue || 0,\n                alpha = obj.alpha || 1;\n\n            return [\n                'rgba(',\n                red,\n                ',',\n                green,\n                ',',\n                blue,\n                ',',\n                alpha,\n                ')'\n            ].join(EMPTY_STRING);\n        },\n        _rgbToHex: function(r, g, b) {\n            return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        },\n        _hexToRgb: function(hex) {\n            hex = hex.replace(HASH, EMPTY_STRING);\n            var bigint = parseInt(hex, 16);\n            return {\n                r: (bigint >> 16) & 255,\n                g: (bigint >> 8) & 255,\n                b: bigint & 255\n            };\n        },\n        /**\n         * return random hex color\n         * @method\n         * @memberof Konva.Util.prototype\n         */\n        getRandomColor: function() {\n            var randColor = (Math.random() * 0xFFFFFF << 0).toString(16);\n            while (randColor.length < 6) {\n                randColor = ZERO + randColor;\n            }\n            return HASH + randColor;\n        },\n        /**\n         * return value with default fallback\n         * @method\n         * @memberof Konva.Util.prototype\n         */\n        get: function(val, def) {\n            if (val === undefined) {\n                return def;\n            }\n            else {\n                return val;\n            }\n        },\n        /**\n         * get RGB components of a color\n         * @method\n         * @memberof Konva.Util.prototype\n         * @param {String} color\n         * @example\n         * // each of the following examples return {r:0, g:0, b:255}\n         * var rgb = Konva.Util.getRGB('blue');\n         * var rgb = Konva.Util.getRGB('#0000ff');\n         * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n         */\n        getRGB: function(color) {\n            var rgb;\n            // color string\n            if (color in COLORS) {\n                rgb = COLORS[color];\n                return {\n                    r: rgb[0],\n                    g: rgb[1],\n                    b: rgb[2]\n                };\n            }\n            // hex\n            else if (color[0] === HASH) {\n                return this._hexToRgb(color.substring(1));\n            }\n            // rgb string\n            else if (color.substr(0, 4) === RGB_PAREN) {\n                rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n                return {\n                    r: parseInt(rgb[1], 10),\n                    g: parseInt(rgb[2], 10),\n                    b: parseInt(rgb[3], 10)\n                };\n            }\n            // default\n            else {\n                return {\n                    r: 0,\n                    g: 0,\n                    b: 0\n                };\n            }\n        },\n        // convert any color string to RGBA object\n        // from https://github.com/component/color-parser\n        colorToRGBA: function(str) {\n            str = str || 'black';\n            return Konva.Util._namedColorToRBA(str)\n                || Konva.Util._hex3ColorToRGBA(str)\n                || Konva.Util._hex6ColorToRGBA(str)\n                || Konva.Util._rgbColorToRGBA(str)\n                || Konva.Util._rgbaColorToRGBA(str);\n        },\n        // Parse named css color. Like \"green\"\n        _namedColorToRBA: function(str) {\n            var c = COLORS[str.toLowerCase()];\n            if (!c) {\n                return null;\n            }\n            return {\n                r: c[0],\n                g: c[1],\n                b: c[2],\n                a: 1\n            };\n        },\n        // Parse rgb(n, n, n)\n        _rgbColorToRGBA: function(str) {\n            if (str.indexOf('rgb(') === 0) {\n                str = str.match(/rgb\\(([^)]+)\\)/)[1];\n                var parts = str.split(/ *, */).map(Number);\n                return {\n                    r: parts[0],\n                    g: parts[1],\n                    b: parts[2],\n                    a: 1\n                };\n            }\n        },\n        // Parse rgba(n, n, n, n)\n        _rgbaColorToRGBA: function(str) {\n            if (str.indexOf('rgba(') === 0) {\n                str = str.match(/rgba\\(([^)]+)\\)/)[1];\n                var parts = str.split(/ *, */).map(Number);\n                return {\n                    r: parts[0],\n                    g: parts[1],\n                    b: parts[2],\n                    a: parts[3]\n                };\n            }\n\n        },\n        // Parse #nnnnnn\n        _hex6ColorToRGBA: function(str) {\n            if ((str[0] === '#') && (str.length === 7)) {\n                return {\n                    r: parseInt(str.slice(1, 3), 16),\n                    g: parseInt(str.slice(3, 5), 16),\n                    b: parseInt(str.slice(5, 7), 16),\n                    a: 1\n                };\n            }\n        },\n        // Parse #nnn\n        _hex3ColorToRGBA: function(str) {\n            if ((str[0] === '#') && (str.length === 4)) {\n                return {\n                    r: parseInt(str[1] + str[1], 16),\n                    g: parseInt(str[2] + str[2], 16),\n                    b: parseInt(str[3] + str[3], 16),\n                    a: 1\n                };\n            }\n        },\n        // o1 takes precedence over o2\n        _merge: function(o1, o2) {\n            var retObj = this._clone(o2);\n            for(var key in o1) {\n                if(this._isObject(o1[key])) {\n                    retObj[key] = this._merge(o1[key], retObj[key]);\n                }\n                else {\n                    retObj[key] = o1[key];\n                }\n            }\n            return retObj;\n        },\n        cloneObject: function(obj) {\n            var retObj = {};\n            for(var key in obj) {\n                if(this._isObject(obj[key])) {\n                    retObj[key] = this.cloneObject(obj[key]);\n                }\n                else if (this._isArray(obj[key])) {\n                    retObj[key] = this.cloneArray(obj[key]);\n                } else {\n                    retObj[key] = obj[key];\n                }\n            }\n            return retObj;\n        },\n        cloneArray: function(arr) {\n            return arr.slice(0);\n        },\n        _degToRad: function(deg) {\n            return deg * PI_OVER_DEG180;\n        },\n        _radToDeg: function(rad) {\n            return rad * DEG180_OVER_PI;\n        },\n        _capitalize: function(str) {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        },\n        throw: function(str) {\n            throw new Error(KONVA_ERROR + str);\n        },\n        error: function(str) {\n          console.error(KONVA_ERROR + str);\n        },\n        warn: function(str) {\n            /*\n             * IE9 on Windows7 64bit will throw a JS error\n             * if we don't use window.console in the conditional\n             */\n            if(Konva.global.console && console.warn && Konva.showWarnings) {\n                console.warn(KONVA_WARNING + str);\n            }\n        },\n        extend: function(child, parent) {\n            function Ctor() {\n                this.constructor = child;\n            }\n            Ctor.prototype = parent.prototype;\n            var oldProto = child.prototype;\n            child.prototype = new Ctor();\n            for (var key in oldProto) {\n                if (oldProto.hasOwnProperty(key)) {\n                    child.prototype[key] = oldProto[key];\n                }\n            }\n            child.__super__ = parent.prototype;\n            // create reference to parent\n            child.super = parent;\n        },\n        /**\n         * adds methods to a constructor prototype\n         * @method\n         * @memberof Konva.Util.prototype\n         * @param {Function} constructor\n         * @param {Object} methods\n         */\n        addMethods: function(constructor, methods) {\n            var key;\n\n            for (key in methods) {\n                constructor.prototype[key] = methods[key];\n            }\n        },\n        _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n            var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n                d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n                fa = t * d01 / (d01 + d12),\n                fb = t * d12 / (d01 + d12),\n                p1x = x1 - fa * (x2 - x0),\n                p1y = y1 - fa * (y2 - y0),\n                p2x = x1 + fb * (x2 - x0),\n                p2y = y1 + fb * (y2 - y0);\n\n            return [p1x, p1y, p2x, p2y];\n        },\n        _expandPoints: function(p, tension) {\n            var len = p.length,\n                allPoints = [],\n                n, cp;\n\n            for (n = 2; n < len - 2; n += 2) {\n                cp = Konva.Util._getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n                allPoints.push(cp[0]);\n                allPoints.push(cp[1]);\n                allPoints.push(p[n]);\n                allPoints.push(p[n + 1]);\n                allPoints.push(cp[2]);\n                allPoints.push(cp[3]);\n            }\n\n            return allPoints;\n        },\n        _removeLastLetter: function(str) {\n            return str.substring(0, str.length - 1);\n        },\n        each: function(obj, func) {\n            for (var key in obj) {\n                func(key, obj[key]);\n            }\n        },\n        _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n            var x, y, dist;\n\n            var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n            if(pd2 == 0) {\n                x = x1;\n                y = y1;\n                dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n            } else {\n                var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n                if(u < 0) {\n                    x = x1;\n                    y = y1;\n                    dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n                } else if (u > 1.0) {\n                    x = x2;\n                    y = y2;\n                    dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n                } else {\n                    x = x1 + u * (x2 - x1);\n                    y = y1 + u * (y2 - y1);\n                    dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n                }\n            }\n            return [x, y, dist];\n        },\n        // line as array of points.\n        // line might be closed\n        _getProjectionToLine: function(pt, line, isClosed) {\n            var pc = Konva.Util.cloneObject(pt);\n            var dist = Number.MAX_VALUE;\n            line.forEach(function(p1, i) {\n                if (!isClosed && i === line.length - 1) {\n                    return;\n                }\n                var p2 = line[(i + 1) % line.length];\n                var proj = Konva.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n                var px = proj[0], py = proj[1], pdist = proj[2];\n                if (pdist < dist) {\n                    pc.x = px;\n                    pc.y = py;\n                    dist = pdist;\n                }\n            });\n            return pc;\n        },\n        _prepareArrayForTween: function(startArray, endArray, isClosed) {\n            var n, start = [], end = [];\n            if (startArray.length > endArray.length) {\n                var temp = endArray;\n                endArray = startArray;\n                startArray = temp;\n            }\n            for (n = 0; n < startArray.length; n += 2) {\n                start.push({\n                    x: startArray[n],\n                    y: startArray[n + 1]\n                });\n            }\n            for (n = 0; n < endArray.length; n += 2) {\n                end.push({\n                    x: endArray[n],\n                    y: endArray[n + 1]\n                });\n            }\n\n\n            var newStart = [];\n            end.forEach(function(point) {\n                var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n                newStart.push(pr.x);\n                newStart.push(pr.y);\n            });\n            return newStart;\n        },\n        _prepareToStringify: function(obj) {\n            var desc;\n\n            obj.visitedByCircularReferenceRemoval = true;\n\n            for(var key in obj) {\n                if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                    continue;\n                }\n                desc = Object.getOwnPropertyDescriptor(obj, key);\n                if (obj[key].visitedByCircularReferenceRemoval || Konva.Util._isElement(obj[key])) {\n                    if (desc.configurable) {\n                        delete obj[key];\n                    } else {\n                        return null;\n                    }\n                } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n                    if (desc.configurable) {\n                        delete obj[key];\n                    } else {\n                        return null;\n                    }\n                }\n            }\n\n            delete obj.visitedByCircularReferenceRemoval;\n\n            return obj;\n        }\n    };\n})();\n\n(function() {\n    'use strict';\n    // calculate pixel ratio\n    var canvas = Konva.Util.createCanvasElement(),\n        context = canvas.getContext('2d'),\n        _pixelRatio = (function(){\n            var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n            backingStoreRatio = context.webkitBackingStorePixelRatio\n                || context.mozBackingStorePixelRatio\n                || context.msBackingStorePixelRatio\n                || context.oBackingStorePixelRatio\n                || context.backingStorePixelRatio\n                || 1;\n            return devicePixelRatio / backingStoreRatio;\n        })();\n\n    /**\n     * Canvas Renderer constructor\n     * @constructor\n     * @abstract\n     * @memberof Konva\n     * @param {Object} config\n     * @param {Number} config.width\n     * @param {Number} config.height\n     * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n     */\n    Konva.Canvas = function(config) {\n        this.init(config);\n    };\n\n    Konva.Canvas.prototype = {\n        init: function(config) {\n            var conf = config || {};\n\n            var pixelRatio = conf.pixelRatio || Konva.pixelRatio || _pixelRatio;\n\n            this.pixelRatio = pixelRatio;\n            this._canvas = Konva.Util.createCanvasElement();\n\n            // set inline styles\n            this._canvas.style.padding = 0;\n            this._canvas.style.margin = 0;\n            this._canvas.style.border = 0;\n            this._canvas.style.background = 'transparent';\n            this._canvas.style.position = 'absolute';\n            this._canvas.style.top = 0;\n            this._canvas.style.left = 0;\n        },\n        /**\n         * get canvas context\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {CanvasContext} context\n         */\n        getContext: function() {\n            return this.context;\n        },\n        /**\n         * get pixel ratio\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} pixel ratio\n         */\n        getPixelRatio: function() {\n            return this.pixelRatio;\n        },\n        /**\n         * get pixel ratio\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n         *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n         */\n        setPixelRatio: function(pixelRatio) {\n            var previousRatio = this.pixelRatio;\n            this.pixelRatio = pixelRatio;\n            this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n        },\n        /**\n         * set width\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} width\n         */\n        setWidth: function(width) {\n            // take into account pixel ratio\n            this.width = this._canvas.width = width * this.pixelRatio;\n            this._canvas.style.width = width + 'px';\n\n            var pixelRatio = this.pixelRatio,\n                _context = this.getContext()._context;\n            _context.scale(pixelRatio, pixelRatio);\n        },\n        /**\n         * set height\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} height\n         */\n        setHeight: function(height) {\n            // take into account pixel ratio\n            this.height = this._canvas.height = height * this.pixelRatio;\n            this._canvas.style.height = height + 'px';\n            var pixelRatio = this.pixelRatio,\n                _context = this.getContext()._context;\n            _context.scale(pixelRatio, pixelRatio);\n        },\n        /**\n         * get width\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} width\n         */\n        getWidth: function() {\n            return this.width;\n        },\n        /**\n         * get height\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} height\n         */\n        getHeight: function() {\n            return this.height;\n        },\n        /**\n         * set size\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} width\n         * @param {Number} height\n         */\n        setSize: function(width, height) {\n            this.setWidth(width);\n            this.setHeight(height);\n        },\n        /**\n         * to data url\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {String} mimeType\n         * @param {Number} quality between 0 and 1 for jpg mime types\n         * @returns {String} data url string\n         */\n        toDataURL: function(mimeType, quality) {\n            try {\n                // If this call fails (due to browser bug, like in Firefox 3.6),\n                // then revert to previous no-parameter image/png behavior\n                return this._canvas.toDataURL(mimeType, quality);\n            }\n            catch(e) {\n                try {\n                    return this._canvas.toDataURL();\n                }\n                catch(err) {\n                    Konva.Util.warn('Unable to get data URL. ' + err.message);\n                    return '';\n                }\n            }\n        }\n    };\n\n    Konva.SceneCanvas = function(config) {\n        var conf = config || {};\n        var width = conf.width || 0,\n            height = conf.height || 0;\n\n        Konva.Canvas.call(this, conf);\n        this.context = new Konva.SceneContext(this);\n        this.setSize(width, height);\n    };\n\n    Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\n    Konva.HitCanvas = function(config) {\n        var conf = config || {};\n        var width = conf.width || 0,\n            height = conf.height || 0;\n\n        Konva.Canvas.call(this, conf);\n        this.context = new Konva.HitContext(this);\n        this.setSize(width, height);\n        this.hitCanvas = true;\n    };\n    Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n\n})();\n\n(function() {\n    'use strict';\n    var COMMA = ',',\n        OPEN_PAREN = '(',\n        CLOSE_PAREN = ')',\n        OPEN_PAREN_BRACKET = '([',\n        CLOSE_BRACKET_PAREN = '])',\n        SEMICOLON = ';',\n        DOUBLE_PAREN = '()',\n        // EMPTY_STRING = '',\n        EQUALS = '=',\n        // SET = 'set',\n        CONTEXT_METHODS = [\n            'arc',\n            'arcTo',\n            'beginPath',\n            'bezierCurveTo',\n            'clearRect',\n            'clip',\n            'closePath',\n            'createLinearGradient',\n            'createPattern',\n            'createRadialGradient',\n            'drawImage',\n            'fill',\n            'fillText',\n            'getImageData',\n            'createImageData',\n            'lineTo',\n            'moveTo',\n            'putImageData',\n            'quadraticCurveTo',\n            'rect',\n            'restore',\n            'rotate',\n            'save',\n            'scale',\n            'setLineDash',\n            'setTransform',\n            'stroke',\n            'strokeText',\n            'transform',\n            'translate'\n        ];\n\n    var CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX',\n        'shadowOffsetY', 'lineCap', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline',\n        'globalAlpha', 'globalCompositeOperation'];\n\n    /**\n     * Canvas Context constructor\n     * @constructor\n     * @abstract\n     * @memberof Konva\n     */\n    Konva.Context = function(canvas) {\n        this.init(canvas);\n    };\n\n    Konva.Context.prototype = {\n        init: function(canvas) {\n            this.canvas = canvas;\n            this._context = canvas._canvas.getContext('2d');\n\n            if (Konva.enableTrace) {\n                this.traceArr = [];\n                this._enableTrace();\n            }\n        },\n        /**\n         * fill shape\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Konva.Shape} shape\n         */\n        fillShape: function(shape) {\n            if(shape.getFillEnabled()) {\n                this._fill(shape);\n            }\n        },\n        /**\n         * stroke shape\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Konva.Shape} shape\n         */\n        strokeShape: function(shape) {\n            if(shape.getStrokeEnabled()) {\n                this._stroke(shape);\n            }\n        },\n        /**\n         * fill then stroke\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Konva.Shape} shape\n         */\n        fillStrokeShape: function(shape) {\n            var fillEnabled = shape.getFillEnabled();\n            if(fillEnabled) {\n                this._fill(shape);\n            }\n            if(shape.getStrokeEnabled()) {\n                this._stroke(shape);\n            }\n        },\n        /**\n         * get context trace if trace is enabled\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n         *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n         *  properites.\n         * @returns {String}\n         */\n        getTrace: function(relaxed) {\n            var traceArr = this.traceArr,\n                len = traceArr.length,\n                str = '',\n                n, trace, method, args;\n\n            for (n = 0; n < len; n++) {\n                trace = traceArr[n];\n                method = trace.method;\n\n                // methods\n                if (method) {\n                    args = trace.args;\n                    str += method;\n                    if (relaxed) {\n                        str += DOUBLE_PAREN;\n                    }\n                    else {\n                        if (Konva.Util._isArray(args[0])) {\n                            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                        }\n                        else {\n                            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                        }\n                    }\n                }\n                // properties\n                else {\n                    str += trace.property;\n                    if (!relaxed) {\n                        str += EQUALS + trace.val;\n                    }\n                }\n\n                str += SEMICOLON;\n            }\n\n            return str;\n        },\n        /**\n         * clear trace if trace is enabled\n         * @method\n         * @memberof Konva.Context.prototype\n         */\n        clearTrace: function() {\n            this.traceArr = [];\n        },\n        _trace: function(str) {\n            var traceArr = this.traceArr,\n                len;\n\n            traceArr.push(str);\n            len = traceArr.length;\n\n            if (len >= Konva.traceArrMax) {\n                traceArr.shift();\n            }\n        },\n        /**\n         * reset canvas context transform\n         * @method\n         * @memberof Konva.Context.prototype\n         */\n        reset: function() {\n            var pixelRatio = this.getCanvas().getPixelRatio();\n            this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n        },\n        /**\n         * get canvas\n         * @method\n         * @memberof Konva.Context.prototype\n         * @returns {Konva.Canvas}\n         */\n        getCanvas: function() {\n            return this.canvas;\n        },\n        /**\n         * clear canvas\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Object} [bounds]\n         * @param {Number} [bounds.x]\n         * @param {Number} [bounds.y]\n         * @param {Number} [bounds.width]\n         * @param {Number} [bounds.height]\n         */\n        clear: function(bounds) {\n            var canvas = this.getCanvas();\n\n            if (bounds) {\n                this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n            }\n            else {\n                this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n            }\n        },\n        _applyLineCap: function(shape) {\n            var lineCap = shape.getLineCap();\n            if(lineCap) {\n                this.setAttr('lineCap', lineCap);\n            }\n        },\n        _applyOpacity: function(shape) {\n            var absOpacity = shape.getAbsoluteOpacity();\n            if(absOpacity !== 1) {\n                this.setAttr('globalAlpha', absOpacity);\n            }\n        },\n        _applyLineJoin: function(shape) {\n            var lineJoin = shape.getLineJoin();\n            if(lineJoin) {\n                this.setAttr('lineJoin', lineJoin);\n            }\n        },\n        setAttr: function(attr, val) {\n            this._context[attr] = val;\n        },\n\n        // context pass through methods\n        arc: function() {\n            var a = arguments;\n            this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n        },\n        beginPath: function() {\n            this._context.beginPath();\n        },\n        bezierCurveTo: function() {\n            var a = arguments;\n            this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n        },\n        clearRect: function() {\n            var a = arguments;\n            this._context.clearRect(a[0], a[1], a[2], a[3]);\n        },\n        clip: function() {\n            this._context.clip();\n        },\n        closePath: function() {\n            this._context.closePath();\n        },\n        createImageData: function() {\n            var a = arguments;\n            if(a.length === 2) {\n                return this._context.createImageData(a[0], a[1]);\n            }\n            else if(a.length === 1) {\n                return this._context.createImageData(a[0]);\n            }\n        },\n        createLinearGradient: function() {\n            var a = arguments;\n            return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n        },\n        createPattern: function() {\n            var a = arguments;\n            return this._context.createPattern(a[0], a[1]);\n        },\n        createRadialGradient: function() {\n            var a = arguments;\n            return this._context.createRadialGradient(a[0], a[1], a[2], a[3], a[4], a[5]);\n        },\n        drawImage: function() {\n            var a = arguments,\n                _context = this._context;\n\n            if(a.length === 3) {\n                _context.drawImage(a[0], a[1], a[2]);\n            }\n            else if(a.length === 5) {\n                _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n            }\n            else if(a.length === 9) {\n                _context.drawImage(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n            }\n        },\n        isPointInPath: function(x, y) {\n            return this._context.isPointInPath(x, y);\n        },\n        fill: function() {\n            this._context.fill();\n        },\n        fillRect: function(x, y, width, height) {\n            this._context.fillRect(x, y, width, height);\n        },\n        strokeRect: function(x, y, width, height) {\n            this._context.strokeRect(x, y, width, height);\n        },\n        fillText: function() {\n            var a = arguments;\n            this._context.fillText(a[0], a[1], a[2]);\n        },\n        measureText: function(text) {\n            return this._context.measureText(text);\n        },\n        getImageData: function() {\n            var a = arguments;\n            return this._context.getImageData(a[0], a[1], a[2], a[3]);\n        },\n        lineTo: function() {\n            var a = arguments;\n            this._context.lineTo(a[0], a[1]);\n        },\n        moveTo: function() {\n            var a = arguments;\n            this._context.moveTo(a[0], a[1]);\n        },\n        rect: function() {\n            var a = arguments;\n            this._context.rect(a[0], a[1], a[2], a[3]);\n        },\n        putImageData: function() {\n            var a = arguments;\n            this._context.putImageData(a[0], a[1], a[2]);\n        },\n        quadraticCurveTo: function() {\n            var a = arguments;\n            this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n        },\n        restore: function() {\n            this._context.restore();\n        },\n        rotate: function() {\n            var a = arguments;\n            this._context.rotate(a[0]);\n        },\n        save: function() {\n            this._context.save();\n        },\n        scale: function() {\n            var a = arguments;\n            this._context.scale(a[0], a[1]);\n        },\n        setLineDash: function() {\n            var a = arguments,\n                _context = this._context;\n\n            // works for Chrome and IE11\n            if(this._context.setLineDash) {\n                _context.setLineDash(a[0]);\n            }\n            // verified that this works in firefox\n            else if('mozDash' in _context) {\n                _context.mozDash = a[0];\n            }\n            // does not currently work for Safari\n            else if('webkitLineDash' in _context) {\n                _context.webkitLineDash = a[0];\n            }\n\n            // no support for IE9 and IE10\n        },\n        getLineDash: function() {\n            return this._context.getLineDash();\n        },\n        setTransform: function() {\n            var a = arguments;\n            this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n        },\n        stroke: function() {\n            this._context.stroke();\n        },\n        strokeText: function() {\n            var a = arguments;\n            this._context.strokeText(a[0], a[1], a[2]);\n        },\n        transform: function() {\n            var a = arguments;\n            this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n        },\n        translate: function() {\n            var a = arguments;\n            this._context.translate(a[0], a[1]);\n        },\n        _enableTrace: function() {\n            var that = this,\n                len = CONTEXT_METHODS.length,\n                _simplifyArray = Konva.Util._simplifyArray,\n                origSetter = this.setAttr,\n                n, args;\n\n            // to prevent creating scope function at each loop\n            var func = function(methodName) {\n                    var origMethod = that[methodName],\n                        ret;\n\n                    that[methodName] = function() {\n                        args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n                        ret = origMethod.apply(that, arguments);\n\n                        that._trace({\n                            method: methodName,\n                            args: args\n                        });\n\n                        return ret;\n                    };\n            };\n            // methods\n            for (n = 0; n < len; n++) {\n                func(CONTEXT_METHODS[n]);\n            }\n\n            // attrs\n            that.setAttr = function() {\n                origSetter.apply(that, arguments);\n                that._trace({\n                    property: arguments[0],\n                    val: arguments[1]\n                });\n            };\n        }\n    };\n\n    CONTEXT_PROPERTIES.forEach(function(prop) {\n        Object.defineProperty(Konva.Context.prototype, prop, {\n            get: function () {\n                return this._context[prop];\n            },\n            set: function (val) {\n                this._context[prop] = val;\n            }\n        });\n    });\n\n    Konva.SceneContext = function(canvas) {\n        Konva.Context.call(this, canvas);\n    };\n\n    Konva.SceneContext.prototype = {\n        _fillColor: function(shape) {\n            var fill = shape.fill();\n\n            this.setAttr('fillStyle', fill);\n            shape._fillFunc(this);\n        },\n        _fillPattern: function(shape) {\n            var fillPatternX = shape.getFillPatternX(),\n                fillPatternY = shape.getFillPatternY(),\n                fillPatternScale = shape.getFillPatternScale(),\n                fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n                fillPatternOffset = shape.getFillPatternOffset();\n\n            if(fillPatternX || fillPatternY) {\n                this.translate(fillPatternX || 0, fillPatternY || 0);\n            }\n            if(fillPatternRotation) {\n                this.rotate(fillPatternRotation);\n            }\n            if(fillPatternScale) {\n                this.scale(fillPatternScale.x, fillPatternScale.y);\n            }\n            if(fillPatternOffset) {\n                this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n            }\n\n            this.setAttr('fillStyle', this.createPattern(shape.getFillPatternImage(), shape.getFillPatternRepeat() || 'repeat'));\n            this.fill();\n        },\n        _fillLinearGradient: function(shape) {\n            var start = shape.getFillLinearGradientStartPoint(),\n                end = shape.getFillLinearGradientEndPoint(),\n                colorStops = shape.getFillLinearGradientColorStops(),\n                grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n            if (colorStops) {\n                // build color stops\n                for(var n = 0; n < colorStops.length; n += 2) {\n                    grd.addColorStop(colorStops[n], colorStops[n + 1]);\n                }\n                this.setAttr('fillStyle', grd);\n                shape._fillFunc(this);\n            }\n        },\n        _fillRadialGradient: function(shape) {\n            var start = shape.getFillRadialGradientStartPoint(),\n                end = shape.getFillRadialGradientEndPoint(),\n                startRadius = shape.getFillRadialGradientStartRadius(),\n                endRadius = shape.getFillRadialGradientEndRadius(),\n                colorStops = shape.getFillRadialGradientColorStops(),\n                grd = this.createRadialGradient(start.x, start.y, startRadius, end.x, end.y, endRadius);\n\n            // build color stops\n            for(var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('fillStyle', grd);\n            this.fill();\n        },\n        _fill: function(shape) {\n            var hasColor = shape.fill(),\n                hasPattern = shape.getFillPatternImage(),\n                hasLinearGradient = shape.getFillLinearGradientColorStops(),\n                hasRadialGradient = shape.getFillRadialGradientColorStops(),\n                fillPriority = shape.getFillPriority();\n\n            // priority fills\n            if(hasColor && fillPriority === 'color') {\n                this._fillColor(shape);\n            }\n            else if(hasPattern && fillPriority === 'pattern') {\n                this._fillPattern(shape);\n            }\n            else if(hasLinearGradient && fillPriority === 'linear-gradient') {\n                this._fillLinearGradient(shape);\n            }\n            else if(hasRadialGradient && fillPriority === 'radial-gradient') {\n                this._fillRadialGradient(shape);\n            }\n            // now just try and fill with whatever is available\n            else if(hasColor) {\n                this._fillColor(shape);\n            }\n            else if(hasPattern) {\n                this._fillPattern(shape);\n            }\n            else if(hasLinearGradient) {\n                this._fillLinearGradient(shape);\n            }\n            else if(hasRadialGradient) {\n                this._fillRadialGradient(shape);\n            }\n        },\n        _stroke: function(shape) {\n            var dash = shape.dash(),\n                // ignore strokeScaleEnabled for Text\n                strokeScaleEnabled = (shape.getStrokeScaleEnabled() || (shape instanceof Konva.Text));\n\n            if(shape.hasStroke()) {\n                if (!strokeScaleEnabled) {\n                    this.save();\n                    this.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                this._applyLineCap(shape);\n                if(dash && shape.dashEnabled()) {\n                    this.setLineDash(dash);\n                }\n\n                this.setAttr('lineWidth', shape.strokeWidth());\n                this.setAttr('strokeStyle', shape.stroke());\n\n                if (!shape.getShadowForStrokeEnabled()) {\n                    this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n                }\n                shape._strokeFunc(this);\n\n                if (!strokeScaleEnabled) {\n                    this.restore();\n                }\n            }\n        },\n        _applyShadow: function(shape) {\n            var util = Konva.Util,\n                color = util.get(shape.getShadowRGBA(), 'black'),\n                blur = util.get(shape.getShadowBlur(), 5),\n                offset = util.get(shape.getShadowOffset(), {\n                    x: 0,\n                    y: 0\n                }),\n                // TODO: get this info from transform??\n                scale = shape.getAbsoluteScale(),\n                scaleX = scale.x,\n                scaleY = scale.y;\n\n            this.setAttr('shadowColor', color);\n            this.setAttr('shadowBlur', blur);\n            this.setAttr('shadowOffsetX', offset.x * scaleX);\n            this.setAttr('shadowOffsetY', offset.y * scaleY);\n        }\n    };\n    Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\n    Konva.HitContext = function(canvas) {\n        Konva.Context.call(this, canvas);\n    };\n\n    Konva.HitContext.prototype = {\n        _fill: function(shape) {\n            this.save();\n            this.setAttr('fillStyle', shape.colorKey);\n            shape._fillFuncHit(this);\n            this.restore();\n        },\n        _stroke: function(shape) {\n            if(shape.hasStroke() && shape.strokeHitEnabled()) {\n                // ignore strokeScaleEnabled for Text\n                var strokeScaleEnabled = (shape.getStrokeScaleEnabled() || (shape instanceof Konva.Text));\n                if (!strokeScaleEnabled) {\n                    this.save();\n                    this.setTransform(1, 0, 0, 1, 0, 0);\n                }\n                this._applyLineCap(shape);\n                this.setAttr('lineWidth', shape.strokeWidth());\n                this.setAttr('strokeStyle', shape.colorKey);\n                shape._strokeFuncHit(this);\n                if (!strokeScaleEnabled) {\n                    this.restore();\n                }\n            }\n        }\n    };\n    Konva.Util.extend(Konva.HitContext, Konva.Context);\n})();\n\n(function() {\n    'use strict';\n    // CONSTANTS\n    var GET = 'get',\n        SET = 'set';\n\n    Konva.Factory = {\n        addGetterSetter: function(constructor, attr, def, validator, after) {\n            this.addGetter(constructor, attr, def);\n            this.addSetter(constructor, attr, validator, after);\n            this.addOverloadedGetterSetter(constructor, attr);\n        },\n        addGetter: function(constructor, attr, def) {\n            var method = GET + Konva.Util._capitalize(attr);\n\n            constructor.prototype[method] = function() {\n                var val = this.attrs[attr];\n                return val === undefined ? def : val;\n            };\n        },\n        addSetter: function(constructor, attr, validator, after) {\n            var method = SET + Konva.Util._capitalize(attr);\n\n            constructor.prototype[method] = function(val) {\n                if (validator) {\n                    val = validator.call(this, val);\n                }\n\n                this._setAttr(attr, val);\n\n                if (after) {\n                    after.call(this);\n                }\n\n                return this;\n            };\n        },\n        addComponentsGetterSetter: function(constructor, attr, components, validator, after) {\n            var len = components.length,\n                capitalize = Konva.Util._capitalize,\n                getter = GET + capitalize(attr),\n                setter = SET + capitalize(attr),\n                n, component;\n\n            // getter\n            constructor.prototype[getter] = function() {\n                var ret = {};\n\n                for (n = 0; n < len; n++) {\n                    component = components[n];\n                    ret[component] = this.getAttr(attr + capitalize(component));\n                }\n\n                return ret;\n            };\n\n            // setter\n            constructor.prototype[setter] = function(val) {\n                var oldVal = this.attrs[attr],\n                    key;\n\n                if (validator) {\n                    val = validator.call(this, val);\n                }\n\n                for (key in val) {\n                    if (!val.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    this._setAttr(attr + capitalize(key), val[key]);\n                }\n\n                this._fireChangeEvent(attr, oldVal, val);\n\n                if (after) {\n                    after.call(this);\n                }\n\n                return this;\n            };\n\n            this.addOverloadedGetterSetter(constructor, attr);\n        },\n        addOverloadedGetterSetter: function(constructor, attr) {\n            var capitalizedAttr = Konva.Util._capitalize(attr),\n                setter = SET + capitalizedAttr,\n                getter = GET + capitalizedAttr;\n\n            constructor.prototype[attr] = function() {\n                // setting\n                if (arguments.length) {\n                    this[setter](arguments[0]);\n                    return this;\n                }\n                // getting\n                return this[getter]();\n            };\n        },\n        addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n            var method = GET + Konva.Util._capitalize(attr);\n            var message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n            constructor.prototype[method] = function() {\n                Konva.Util.error(message);\n                var val = this.attrs[attr];\n                return val === undefined ? def : val;\n            };\n            this.addSetter(constructor, attr, validator, function() {\n              Konva.Util.error(message);\n            });\n            this.addOverloadedGetterSetter(constructor, attr);\n        },\n        backCompat: function(constructor, methods) {\n            Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n                var method = constructor.prototype[newMethodName];\n                constructor.prototype[oldMethodName] = function(){\n                    method.apply(this, arguments);\n                    Konva.Util.error(oldMethodName + ' method is deprecated and will be removed soon. Use ' + newMethodName + ' instead');\n                };\n            });\n        },\n        afterSetFilter: function() {\n            this._filterUpToDate = false;\n        }\n    };\n\n    Konva.Validators = {\n        /**\n         * @return {number}\n         */\n        RGBComponent: function(val) {\n            if (val > 255) {\n                return 255;\n            } else if (val < 0) {\n                return 0;\n            }\n            return Math.round(val);\n        },\n        alphaComponent: function(val) {\n            if (val > 1) {\n                return 1;\n            }\n            // chrome does not honor alpha values of 0\n            else if (val < 0.0001) {\n                return 0.0001;\n            }\n\n            return val;\n        }\n    };\n})();\n\n(function(Konva) {\n    'use strict';\n    // CONSTANTS\n    var ABSOLUTE_OPACITY = 'absoluteOpacity',\n        ABSOLUTE_TRANSFORM = 'absoluteTransform',\n        ABSOLUTE_SCALE = 'absoluteScale',\n        CHANGE = 'Change',\n        CHILDREN = 'children',\n        DOT = '.',\n        EMPTY_STRING = '',\n        GET = 'get',\n        ID = 'id',\n        KONVA = 'konva',\n        LISTENING = 'listening',\n        MOUSEENTER = 'mouseenter',\n        MOUSELEAVE = 'mouseleave',\n        NAME = 'name',\n        SET = 'set',\n        SHAPE = 'Shape',\n        SPACE = ' ',\n        STAGE = 'stage',\n        TRANSFORM = 'transform',\n        UPPER_STAGE = 'Stage',\n        VISIBLE = 'visible',\n        CLONE_BLACK_LIST = ['id'],\n\n        TRANSFORM_CHANGE_STR = [\n            'xChange.konva',\n            'yChange.konva',\n            'scaleXChange.konva',\n            'scaleYChange.konva',\n            'skewXChange.konva',\n            'skewYChange.konva',\n            'rotationChange.konva',\n            'offsetXChange.konva',\n            'offsetYChange.konva',\n            'transformsEnabledChange.konva'\n        ].join(SPACE),\n\n        SCALE_CHANGE_STR = [\n            'scaleXChange.konva',\n            'scaleYChange.konva'\n        ].join(SPACE);\n\n    /**\n     * Node constructor. Nodes are entities that can be transformed, layered,\n     * and have bound events. The stage, layers, groups, and shapes all extend Node.\n     * @constructor\n     * @memberof Konva\n     * @abstract\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     */\n    Konva.Node = function(config) {\n        this._init(config);\n    };\n\n    Konva.Util.addMethods(Konva.Node, {\n        _init: function(config) {\n            var that = this;\n            this._id = Konva.idCounter++;\n            this.eventListeners = {};\n            this.attrs = {};\n            this._cache = {};\n            this._filterUpToDate = false;\n            this.setAttrs(config);\n\n            // event bindings for cache handling\n            this.on(TRANSFORM_CHANGE_STR, function() {\n                this._clearCache(TRANSFORM);\n                that._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n            });\n\n            this.on(SCALE_CHANGE_STR, function() {\n                that._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n            });\n\n            this.on('visibleChange.konva', function() {\n                that._clearSelfAndDescendantCache(VISIBLE);\n            });\n            this.on('listeningChange.konva', function() {\n                that._clearSelfAndDescendantCache(LISTENING);\n            });\n            this.on('opacityChange.konva', function() {\n                that._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n            });\n        },\n        _clearCache: function(attr){\n            if (attr) {\n                delete this._cache[attr];\n            }\n            else {\n                this._cache = {};\n            }\n        },\n        _getCache: function(attr, privateGetter){\n            var cache = this._cache[attr];\n\n            // if not cached, we need to set it using the private getter method.\n            if (cache === undefined) {\n                this._cache[attr] = privateGetter.call(this);\n            }\n\n            return this._cache[attr];\n        },\n        /*\n         * when the logic for a cached result depends on ancestor propagation, use this\n         * method to clear self and children cache\n         */\n        _clearSelfAndDescendantCache: function(attr) {\n            this._clearCache(attr);\n\n            if (this.children) {\n                this.getChildren().each(function(node) {\n                    node._clearSelfAndDescendantCache(attr);\n                });\n            }\n        },\n        /**\n        * clear cached canvas\n        * @method\n        * @memberof Konva.Node.prototype\n        * @returns {Konva.Node}\n        * @example\n        * node.clearCache();\n        */\n        clearCache: function() {\n            delete this._cache.canvas;\n            this._filterUpToDate = false;\n            return this;\n        },\n        /**\n        *  cache node to improve drawing performance, apply filters, or create more accurate\n        *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n        *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n        *  properties. Look at [link to demo page](link to demo page) for more information.\n        * @method\n        * @memberof Konva.Node.prototype\n        * @param {Object} [config]\n        * @param {Number} [config.x]\n        * @param {Number} [config.y]\n        * @param {Number} [config.width]\n        * @param {Number} [config.height]\n        * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n        * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n        *  region for debugging purposes\n        * @returns {Konva.Node}\n        * @example\n        * // cache a shape with the x,y position of the bounding box at the center and\n        * // the width and height of the bounding box equal to the width and height of\n        * // the shape obtained from shape.width() and shape.height()\n        * image.cache();\n        *\n        * // cache a node and define the bounding box position and size\n        * node.cache({\n        *   x: -30,\n        *   y: -30,\n        *   width: 100,\n        *   height: 200\n        * });\n        *\n        * // cache a node and draw a red border around the bounding box\n        * // for debugging purposes\n        * node.cache({\n        *   x: -30,\n        *   y: -30,\n        *   width: 100,\n        *   height: 200,\n        *   offset : 10,\n        *   drawBorder: true\n        * });\n        */\n        cache: function(config) {\n            var conf = config || {},\n                rect = this.getClientRect(true),\n                width = conf.width || rect.width,\n                height = conf.height || rect.height,\n                x = conf.x || rect.x,\n                y = conf.y || rect.y,\n                offset = conf.offset || 0,\n                drawBorder = conf.drawBorder || false;\n\n            if (!width || !height) {\n                throw new Error('Width or height of caching configuration equals 0.');\n            }\n\n            width += offset * 2;\n            height += offset * 2;\n\n            x -= offset;\n            y -= offset;\n\n\n            var cachedSceneCanvas = new Konva.SceneCanvas({\n                width: width,\n                height: height\n            }),\n            cachedFilterCanvas = new Konva.SceneCanvas({\n                width: width,\n                height: height\n            }),\n            cachedHitCanvas = new Konva.HitCanvas({\n                pixelRatio: 1,\n                width: width,\n                height: height\n            }),\n            sceneContext = cachedSceneCanvas.getContext(),\n            hitContext = cachedHitCanvas.getContext();\n\n            cachedHitCanvas.isCache = true;\n\n            this.clearCache();\n\n            sceneContext.save();\n            hitContext.save();\n\n            sceneContext.translate(-x, -y);\n            hitContext.translate(-x, -y);\n\n            this.drawScene(cachedSceneCanvas, this, true);\n            this.drawHit(cachedHitCanvas, this, true);\n\n            sceneContext.restore();\n            hitContext.restore();\n\n            // this will draw a red border around the cached box for\n            // debugging purposes\n            if (drawBorder) {\n                sceneContext.save();\n                sceneContext.beginPath();\n                sceneContext.rect(0, 0, width, height);\n                sceneContext.closePath();\n                sceneContext.setAttr('strokeStyle', 'red');\n                sceneContext.setAttr('lineWidth', 5);\n                sceneContext.stroke();\n                sceneContext.restore();\n            }\n\n            this._cache.canvas = {\n                scene: cachedSceneCanvas,\n                filter: cachedFilterCanvas,\n                hit: cachedHitCanvas,\n                x: x,\n                y: y\n            };\n\n            return this;\n        },\n        /**\n         * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n         * The rectangle position is relative to parent container.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Boolean} [skipTransform] flag should we skip transformation to rectangle\n         * @returns {Object} rect with {x, y, width, height} properties\n         * @example\n         * var rect = new Konva.Rect({\n         *      width : 100,\n         *      height : 100,\n         *      x : 50,\n         *      y : 50,\n         *      strokeWidth : 4,\n         *      stroke : 'black',\n         *      offsetX : 50,\n         *      scaleY : 2\n         * });\n         *\n         * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n         * rect.getClientRect(true);\n         * // returns {\n         * //     x : -2,   // two pixels for stroke / 2\n         * //     y : -2,\n         * //     width : 104, // increased by 4 for stroke\n         * //     height : 104\n         * //}\n         *\n         * // get client rect with transformation applied\n         * rect.getClientRect();\n         * // returns Object {x: -2, y: 46, width: 104, height: 208}\n         */\n        getClientRect: function() {\n            // abstract method\n            // redefine in Container and Shape\n            throw new Error('abstract \"getClientRect\" method call');\n        },\n        _transformedRect: function(rect) {\n            var points = [\n                {x: rect.x, y: rect.y},\n                {x: rect.x + rect.width, y: rect.y},\n                {x: rect.x + rect.width, y: rect.y + rect.height},\n                {x: rect.x, y: rect.y + rect.height}\n            ];\n            var minX, minY, maxX, maxY;\n            var trans = this.getTransform();\n            points.forEach(function(point) {\n                var transformed = trans.point(point);\n                if (minX === undefined) {\n                    minX = maxX = transformed.x;\n                    minY = maxY = transformed.y;\n                }\n                minX = Math.min(minX, transformed.x);\n                minY = Math.min(minY, transformed.y);\n                maxX = Math.max(maxX, transformed.x);\n                maxY = Math.max(maxY, transformed.y);\n            });\n            return {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY\n            };\n        },\n        _drawCachedSceneCanvas: function(context) {\n            context.save();\n            context._applyOpacity(this);\n            context.translate(\n                this._cache.canvas.x,\n                this._cache.canvas.y\n            );\n\n            var cacheCanvas = this._getCachedSceneCanvas();\n            var ratio = cacheCanvas.pixelRatio;\n\n            context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n            context.restore();\n        },\n        _drawCachedHitCanvas: function(context) {\n            var cachedCanvas = this._cache.canvas,\n                hitCanvas = cachedCanvas.hit;\n            context.save();\n            context.translate(\n                this._cache.canvas.x,\n                this._cache.canvas.y\n            );\n            context.drawImage(hitCanvas._canvas, 0, 0);\n            context.restore();\n        },\n        _getCachedSceneCanvas: function() {\n            var filters = this.filters(),\n                cachedCanvas = this._cache.canvas,\n                sceneCanvas = cachedCanvas.scene,\n                filterCanvas = cachedCanvas.filter,\n                filterContext = filterCanvas.getContext(),\n                len, imageData, n, filter;\n\n            if (filters) {\n                if (!this._filterUpToDate) {\n                    var ratio = sceneCanvas.pixelRatio;\n\n                    try {\n                        len = filters.length;\n                        filterContext.clear();\n\n                        // copy cached canvas onto filter context\n                        filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                        imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n\n                        // apply filters to filter context\n                        for (n = 0; n < len; n++) {\n                            filter = filters[n];\n                            if (typeof filter !== 'function') {\n                                Konva.Util.error(\n                                  'Filter should be type of function, but got ' +\n                                  (typeof filter) + ' insted. Please check correct filters'\n                                );\n                                continue;\n                            }\n                            filter.call(this, imageData);\n                            filterContext.putImageData(imageData, 0, 0);\n                        }\n                    }\n                    catch(e) {\n                        Konva.Util.error('Unable to apply filter. ' + e.message);\n                    }\n\n                    this._filterUpToDate = true;\n                }\n\n                return filterCanvas;\n            }\n            return sceneCanvas;\n        },\n        /**\n         * bind events to the node. KonvaJS supports mouseover, mousemove,\n         *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, click, dblclick, touchstart, touchmove,\n         *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n         *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel\n         *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n         *  and contentDblTap.  Pass in a string of events delimmited by a space to bind multiple events at once\n         *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n         *  event by name such as 'click.foobar'.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n         * @param {Function} handler The handler function is passed an event object\n         * @returns {Konva.Node}\n         * @example\n         * // add click listener\n         * node.on('click', function() {\n         *   console.log('you clicked me!');\n         * });\n         *\n         * // get the target node\n         * node.on('click', function(evt) {\n         *   console.log(evt.target);\n         * });\n         *\n         * // stop event propagation\n         * node.on('click', function(evt) {\n         *   evt.cancelBubble = true;\n         * });\n         *\n         * // bind multiple listeners\n         * node.on('click touchstart', function() {\n         *   console.log('you clicked/touched me!');\n         * });\n         *\n         * // namespace listener\n         * node.on('click.foo', function() {\n         *   console.log('you clicked/touched me!');\n         * });\n         *\n         * // get the event type\n         * node.on('click tap', function(evt) {\n         *   var eventType = evt.type;\n         * });\n         *\n         * // get native event object\n         * node.on('click tap', function(evt) {\n         *   var nativeEvent = evt.evt;\n         * });\n         *\n         * // for change events, get the old and new val\n         * node.on('xChange', function(evt) {\n         *   var oldVal = evt.oldVal;\n         *   var newVal = evt.newVal;\n         * });\n         *\n         * // get event targets\n         * // with event delegations\n         * layer.on('click', 'Group', function(evt) {\n         *   var shape = evt.target;\n         *   var group = evtn.currentTarger;\n         * });\n         */\n        on: function(evtStr, handler) {\n            if (arguments.length === 3) {\n                return this._delegate.apply(this, arguments);\n            }\n            var events = evtStr.split(SPACE),\n                len = events.length,\n                n, event, parts, baseEvent, name;\n\n             /*\n             * loop through types and attach event listeners to\n             * each one.  eg. 'click mouseover.namespace mouseout'\n             * will create three event bindings\n             */\n            for(n = 0; n < len; n++) {\n                event = events[n];\n                parts = event.split(DOT);\n                baseEvent = parts[0];\n                name = parts[1] || EMPTY_STRING;\n\n                // create events array if it doesn't exist\n                if(!this.eventListeners[baseEvent]) {\n                    this.eventListeners[baseEvent] = [];\n                }\n\n                this.eventListeners[baseEvent].push({\n                    name: name,\n                    handler: handler\n                });\n            }\n\n            return this;\n        },\n        /**\n         * remove event bindings from the node. Pass in a string of\n         *  event types delimmited by a space to remove multiple event\n         *  bindings at once such as 'mousedown mouseup mousemove'.\n         *  include a namespace to remove an event binding by name\n         *  such as 'click.foobar'. If you only give a name like '.foobar',\n         *  all events in that namespace will be removed.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n         * @returns {Konva.Node}\n         * @example\n         * // remove listener\n         * node.off('click');\n         *\n         * // remove multiple listeners\n         * node.off('click touchstart');\n         *\n         * // remove listener by name\n         * node.off('click.foo');\n         */\n        off: function(evtStr) {\n            var events = (evtStr || '').split(SPACE),\n                len = events.length,\n                n, t, event, parts, baseEvent, name;\n\n            if (!evtStr) {\n                // remove all events\n                for(t in this.eventListeners) {\n                    this._off(t);\n                }\n            }\n            for(n = 0; n < len; n++) {\n                event = events[n];\n                parts = event.split(DOT);\n                baseEvent = parts[0];\n                name = parts[1];\n\n                if(baseEvent) {\n                    if(this.eventListeners[baseEvent]) {\n                        this._off(baseEvent, name);\n                    }\n                }\n                else {\n                    for(t in this.eventListeners) {\n                        this._off(t, name);\n                    }\n                }\n            }\n            return this;\n        },\n        // some event aliases for third party integration like HammerJS\n        dispatchEvent: function(evt) {\n            var e = {\n              target: this,\n              type: evt.type,\n              evt: evt\n            };\n            this.fire(evt.type, e);\n            return this;\n        },\n        addEventListener: function(type, handler) {\n            // we have to pass native event to handler\n            this.on(type, function(evt){\n                handler.call(this, evt.evt);\n            });\n            return this;\n        },\n        removeEventListener: function(type) {\n            this.off(type);\n            return this;\n        },\n        // like node.on\n        _delegate: function(event, selector, handler) {\n            var stopNode = this;\n            this.on(event, function(evt) {\n                var targets = evt.target.findAncestors(selector, true, stopNode);\n                for(var i = 0; i < targets.length; i++) {\n                    evt = Konva.Util.cloneObject(evt);\n                    evt.currentTarget = targets[i];\n                    handler.call(targets[i], evt);\n                }\n            });\n        },\n        /**\n         * remove self from parent, but don't destroy\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         * @example\n         * node.remove();\n         */\n        remove: function() {\n            var parent = this.getParent();\n\n            if(parent && parent.children) {\n                parent.children.splice(this.index, 1);\n                parent._setChildrenIndices();\n                delete this.parent;\n            }\n\n            // every cached attr that is calculated via node tree\n            // traversal must be cleared when removing a node\n            this._clearSelfAndDescendantCache(STAGE);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n            this._clearSelfAndDescendantCache(VISIBLE);\n            this._clearSelfAndDescendantCache(LISTENING);\n            this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n            return this;\n        },\n        /**\n         * remove and destroy self\n         * @method\n         * @memberof Konva.Node.prototype\n         * @example\n         * node.destroy();\n         */\n        destroy: function() {\n            // remove from ids and names hashes\n            Konva._removeId(this.getId());\n            Konva._removeName(this.getName(), this._id);\n\n            this.remove();\n            return this;\n        },\n        /**\n         * get attr\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} attr\n         * @returns {Integer|String|Object|Array}\n         * @example\n         * var x = node.getAttr('x');\n         */\n        getAttr: function(attr) {\n            var method = GET + Konva.Util._capitalize(attr);\n            if(Konva.Util._isFunction(this[method])) {\n                return this[method]();\n            }\n            // otherwise get directly\n            return this.attrs[attr];\n        },\n        /**\n        * get ancestors\n        * @method\n        * @memberof Konva.Node.prototype\n        * @returns {Konva.Collection}\n        * @example\n        * shape.getAncestors().each(function(node) {\n        *   console.log(node.getId());\n        * })\n        */\n        getAncestors: function() {\n            var parent = this.getParent(),\n                ancestors = new Konva.Collection();\n\n            while (parent) {\n                ancestors.push(parent);\n                parent = parent.getParent();\n            }\n\n            return ancestors;\n        },\n        /**\n         * get attrs object literal\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Object}\n         */\n        getAttrs: function() {\n            return this.attrs || {};\n        },\n        /**\n         * set multiple attrs at once using an object literal\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config object containing key value pairs\n         * @returns {Konva.Node}\n         * @example\n         * node.setAttrs({\n         *   x: 5,\n         *   fill: 'red'\n         * });\n         */\n        setAttrs: function(config) {\n            var key, method;\n\n            if(!config) {\n                return this;\n            }\n            for(key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Konva.Util._capitalize(key);\n                // use setter if available\n                if(Konva.Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                // otherwise set directly\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n            return this;\n        },\n        /**\n         * determine if node is listening for events by taking into account ancestors.\n         *\n         * Parent    | Self      | isListening\n         * listening | listening |\n         * ----------+-----------+------------\n         * T         | T         | T\n         * T         | F         | F\n         * F         | T         | T\n         * F         | F         | F\n         * ----------+-----------+------------\n         * T         | I         | T\n         * F         | I         | F\n         * I         | I         | T\n         *\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n        isListening: function() {\n            return this._getCache(LISTENING, this._isListening);\n        },\n        _isListening: function() {\n            var listening = this.getListening(),\n                parent = this.getParent();\n\n            // the following conditions are a simplification of the truth table above.\n            // please modify carefully\n            if (listening === 'inherit') {\n                if (parent) {\n                    return parent.isListening();\n                }\n                else {\n                    return true;\n                }\n            }\n            else {\n                return listening;\n            }\n        },\n        /**\n         * determine if node is visible by taking into account ancestors.\n         *\n         * Parent    | Self      | isVisible\n         * visible   | visible   |\n         * ----------+-----------+------------\n         * T         | T         | T\n         * T         | F         | F\n         * F         | T         | T\n         * F         | F         | F\n         * ----------+-----------+------------\n         * T         | I         | T\n         * F         | I         | F\n         * I         | I         | T\n\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n        isVisible: function() {\n            return this._getCache(VISIBLE, this._isVisible);\n        },\n        _isVisible: function() {\n            var visible = this.getVisible(),\n                parent = this.getParent();\n\n            // the following conditions are a simplification of the truth table above.\n            // please modify carefully\n            if (visible === 'inherit') {\n                if (parent) {\n                    return parent.isVisible();\n                }\n                else {\n                    return true;\n                }\n            }\n            else {\n                return visible;\n            }\n        },\n        /**\n         * determine if listening is enabled by taking into account descendants.  If self or any children\n         * have _isListeningEnabled set to true, then self also has listening enabled.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n        shouldDrawHit: function(canvas) {\n            var layer = this.getLayer();\n            return (canvas && canvas.isCache) || (layer && layer.hitGraphEnabled())\n                && this.isListening() && this.isVisible();\n        },\n        /**\n         * show node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n        show: function() {\n            this.setVisible(true);\n            return this;\n        },\n        /**\n         * hide node.  Hidden nodes are no longer detectable\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n        hide: function() {\n            this.setVisible(false);\n            return this;\n        },\n        /**\n         * get zIndex relative to the node's siblings who share the same parent\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Integer}\n         */\n        getZIndex: function() {\n            return this.index || 0;\n        },\n        /**\n         * get absolute z-index which takes into account sibling\n         *  and ancestor indices\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Integer}\n         */\n        getAbsoluteZIndex: function() {\n            var depth = this.getDepth(),\n                that = this,\n                index = 0,\n                nodes, len, n, child;\n\n            function addChildren(children) {\n                nodes = [];\n                len = children.length;\n                for(n = 0; n < len; n++) {\n                    child = children[n];\n                    index++;\n\n                    if(child.nodeType !== SHAPE) {\n                        nodes = nodes.concat(child.getChildren().toArray());\n                    }\n\n                    if(child._id === that._id) {\n                        n = len;\n                    }\n                }\n\n                if(nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                    addChildren(nodes);\n                }\n            }\n            if(that.nodeType !== UPPER_STAGE) {\n                addChildren(that.getStage().getChildren());\n            }\n\n            return index;\n        },\n        /**\n         * get node depth in node tree.  Returns an integer.\n         *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n         *  be >= 2\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Integer}\n         */\n        getDepth: function() {\n            var depth = 0,\n                parent = this.parent;\n\n            while(parent) {\n                depth++;\n                parent = parent.parent;\n            }\n            return depth;\n        },\n        setPosition: function(pos) {\n            this.setX(pos.x);\n            this.setY(pos.y);\n            return this;\n        },\n        getPosition: function() {\n            return {\n                x: this.getX(),\n                y: this.getY()\n            };\n        },\n        /**\n         * get absolute position relative to the top left corner of the stage container div\n         * or relative to passed node\n         * @method\n         * @param {Object} [top] optional parent node\n         * @memberof Konva.Node.prototype\n         * @returns {Object}\n         */\n        getAbsolutePosition: function(top) {\n            var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n                absoluteTransform = new Konva.Transform(),\n                offset = this.offset();\n\n            // clone the matrix array\n            absoluteTransform.m = absoluteMatrix.slice();\n            absoluteTransform.translate(offset.x, offset.y);\n\n            return absoluteTransform.getTranslation();\n        },\n        /**\n         * set absolute position\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @returns {Konva.Node}\n         */\n        setAbsolutePosition: function(pos) {\n            var origTrans = this._clearTransform(),\n                it;\n\n            // don't clear translation\n            this.attrs.x = origTrans.x;\n            this.attrs.y = origTrans.y;\n            delete origTrans.x;\n            delete origTrans.y;\n\n            // unravel transform\n            it = this.getAbsoluteTransform();\n\n            it.invert();\n            it.translate(pos.x, pos.y);\n            pos = {\n                x: this.attrs.x + it.getTranslation().x,\n                y: this.attrs.y + it.getTranslation().y\n            };\n\n            this.setPosition({x: pos.x, y: pos.y});\n            this._setTransform(origTrans);\n\n            return this;\n        },\n        _setTransform: function(trans) {\n            var key;\n\n            for(key in trans) {\n                this.attrs[key] = trans[key];\n            }\n\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        },\n        _clearTransform: function() {\n            var trans = {\n                x: this.getX(),\n                y: this.getY(),\n                rotation: this.getRotation(),\n                scaleX: this.getScaleX(),\n                scaleY: this.getScaleY(),\n                offsetX: this.getOffsetX(),\n                offsetY: this.getOffsetY(),\n                skewX: this.getSkewX(),\n                skewY: this.getSkewY()\n            };\n\n            this.attrs.x = 0;\n            this.attrs.y = 0;\n            this.attrs.rotation = 0;\n            this.attrs.scaleX = 1;\n            this.attrs.scaleY = 1;\n            this.attrs.offsetX = 0;\n            this.attrs.offsetY = 0;\n            this.attrs.skewX = 0;\n            this.attrs.skewY = 0;\n\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n            // return original transform\n            return trans;\n        },\n        /**\n         * move node by an amount relative to its current position\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} change\n         * @param {Number} change.x\n         * @param {Number} change.y\n         * @returns {Konva.Node}\n         * @example\n         * // move node in x direction by 1px and y direction by 2px\n         * node.move({\n         *   x: 1,\n         *   y: 2)\n         * });\n         */\n        move: function(change) {\n            var changeX = change.x,\n                changeY = change.y,\n                x = this.getX(),\n                y = this.getY();\n\n            if(changeX !== undefined) {\n                x += changeX;\n            }\n\n            if(changeY !== undefined) {\n                y += changeY;\n            }\n\n            this.setPosition({x: x, y: y});\n            return this;\n        },\n        _eachAncestorReverse: function(func, top) {\n            var family = [],\n                parent = this.getParent(),\n                len, n;\n\n            // if top node is defined, and this node is top node,\n            // there's no need to build a family tree.  just execute\n            // func with this because it will be the only node\n            if (top && top._id === this._id) {\n                func(this);\n                return true;\n            }\n\n            family.unshift(this);\n\n            while(parent && (!top || parent._id !== top._id)) {\n                family.unshift(parent);\n                parent = parent.parent;\n            }\n\n            len = family.length;\n            for(n = 0; n < len; n++) {\n                func(family[n]);\n            }\n        },\n        /**\n         * rotate node by an amount in degrees relative to its current rotation\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Number} theta\n         * @returns {Konva.Node}\n         */\n        rotate: function(theta) {\n            this.setRotation(this.getRotation() + theta);\n            return this;\n        },\n        /**\n         * move node to the top of its siblings\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n        moveToTop: function() {\n            if (!this.parent) {\n                Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n                return false;\n            }\n            var index = this.index;\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        },\n        /**\n         * move node up\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean} flag is moved or not\n         */\n        moveUp: function() {\n            if (!this.parent) {\n                Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n                return false;\n            }\n            var index = this.index,\n                len = this.parent.getChildren().length;\n            if(index < len - 1) {\n                this.parent.children.splice(index, 1);\n                this.parent.children.splice(index + 1, 0, this);\n                this.parent._setChildrenIndices();\n                return true;\n            }\n            return false;\n        },\n        /**\n         * move node down\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n        moveDown: function() {\n            if (!this.parent) {\n                Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n                return false;\n            }\n            var index = this.index;\n            if(index > 0) {\n                this.parent.children.splice(index, 1);\n                this.parent.children.splice(index - 1, 0, this);\n                this.parent._setChildrenIndices();\n                return true;\n            }\n            return false;\n        },\n        /**\n         * move node to the bottom of its siblings\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n        moveToBottom: function() {\n            if (!this.parent) {\n                Konva.Util.warn('Node has no parent. moveToBottom function is ignored.');\n                return false;\n            }\n            var index = this.index;\n            if(index > 0) {\n                this.parent.children.splice(index, 1);\n                this.parent.children.unshift(this);\n                this.parent._setChildrenIndices();\n                return true;\n            }\n            return false;\n        },\n        /**\n         * set zIndex relative to siblings\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Integer} zIndex\n         * @returns {Konva.Node}\n         */\n        setZIndex: function(zIndex) {\n            if (!this.parent) {\n                Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n                return false;\n            }\n            var index = this.index;\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(zIndex, 0, this);\n            this.parent._setChildrenIndices();\n            return this;\n        },\n        /**\n         * get absolute opacity\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Number}\n         */\n        getAbsoluteOpacity: function() {\n            return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n        },\n        _getAbsoluteOpacity: function() {\n            var absOpacity = this.getOpacity();\n            if(this.getParent()) {\n                absOpacity *= this.getParent().getAbsoluteOpacity();\n            }\n            return absOpacity;\n        },\n        /**\n         * move node to another container\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Container} newContainer\n         * @returns {Konva.Node}\n         * @example\n         * // move node from current layer into layer2\n         * node.moveTo(layer2);\n         */\n        moveTo: function(newContainer) {\n            // do nothing if new container is already parent\n            if (this.getParent() !== newContainer) {\n                this.remove();\n                newContainer.add(this);\n            }\n            return this;\n        },\n        /**\n         * convert Node into an object for serialization.  Returns an object.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Object}\n         */\n        toObject: function() {\n            var obj = {},\n                attrs = this.getAttrs(),\n                key, val, getter, defaultValue;\n\n            obj.attrs = {};\n\n            for(key in attrs) {\n                val = attrs[key];\n                getter = this[key];\n                // remove attr value so that we can extract the default value from the getter\n                delete attrs[key];\n                defaultValue = getter ? getter.call(this) : null;\n                // restore attr value\n                attrs[key] = val;\n                if (defaultValue !== val) {\n                    obj.attrs[key] = val;\n                }\n            }\n\n            obj.className = this.getClassName();\n            return Konva.Util._prepareToStringify(obj);\n        },\n        /**\n         * convert Node into a JSON string.  Returns a JSON string.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {String}}\n         */\n        toJSON: function() {\n            return JSON.stringify(this.toObject());\n        },\n        /**\n         * get parent container\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n        getParent: function() {\n            return this.parent;\n        },\n        /**\n         * get all ancestros (parent then parent of the parent, etc) of the node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} [selector] selector for search\n         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n         * @returns {Array} [ancestors]\n         * @example\n         * // get one of the parent group\n         * var parentGroups = node.findAncestors('Group');\n         */\n        findAncestors: function(selector, includeSelf, stopNode) {\n            var res = [];\n\n            if (includeSelf && this._isMatch(selector)) {\n                res.push(this);\n            }\n            var ancestor = this.parent;\n            while(ancestor) {\n                if (ancestor === stopNode) {\n                    return res;\n                }\n                if (ancestor._isMatch(selector)) {\n                    res.push(ancestor);\n                }\n                ancestor = ancestor.parent;\n            }\n            return res;\n        },\n        /**\n         * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} [selector] selector for search\n         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n         * @returns {Konva.Node} ancestor\n         * @example\n         * // get one of the parent group\n         * var group = node.findAncestors('.mygroup');\n         */\n        findAncestor: function(selector, includeSelf, stopNode) {\n            return this.findAncestors(selector, includeSelf, stopNode)[0];\n        },\n        // is current node match passed selector?\n        _isMatch: function(selector) {\n            if (!selector) {\n                return false;\n            }\n            var selectorArr = selector.replace(/ /g, '').split(','),\n                len = selectorArr.length,\n                n, sel;\n\n            for (n = 0; n < len; n++) {\n                sel = selectorArr[n];\n                if (!Konva.Util.isValidSelector(sel)) {\n                    Konva.Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                    Konva.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                    Konva.Util.warn('Konva is awesome, right?');\n                }\n                // id selector\n                if(sel.charAt(0) === '#') {\n                    if (this.id() === sel.slice(1)) {\n                        return true;\n                    }\n                }\n                // name selector\n                else if(sel.charAt(0) === '.') {\n                    if (this.hasName(sel.slice(1))) {\n                        return true;\n                    }\n                } else if (this._get(sel).length !== 0) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        /**\n         * get layer ancestor\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Layer}\n         */\n        getLayer: function() {\n            var parent = this.getParent();\n            return parent ? parent.getLayer() : null;\n        },\n        /**\n         * get stage ancestor\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Stage}\n         */\n        getStage: function() {\n            return this._getCache(STAGE, this._getStage);\n        },\n        _getStage: function() {\n            var parent = this.getParent();\n            if(parent) {\n                return parent.getStage();\n            }\n            else {\n                return undefined;\n            }\n        },\n        /**\n         * fire event\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n         * @param {Event} [evt] event object\n         * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n         *  not bubbling.  Setting the value to true will result in the event bubbling.\n         * @returns {Konva.Node}\n         * @example\n         * // manually fire click event\n         * node.fire('click');\n         *\n         * // fire custom event\n         * node.fire('foo');\n         *\n         * // fire custom event with custom event object\n         * node.fire('foo', {\n         *   bar: 10\n         * });\n         *\n         * // fire click event that bubbles\n         * node.fire('click', null, true);\n         */\n        fire: function(eventType, evt, bubble) {\n            evt = evt || {};\n            evt.target = evt.target || this;\n            // bubble\n            if (bubble) {\n                this._fireAndBubble(eventType, evt);\n            }\n            // no bubble\n            else {\n                this._fire(eventType, evt);\n            }\n            return this;\n        },\n        /**\n         * get absolute transform of the node which takes into\n         *  account its ancestor transforms\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Transform}\n         */\n        getAbsoluteTransform: function(top) {\n            // if using an argument, we can't cache the result.\n            if (top) {\n                return this._getAbsoluteTransform(top);\n            }\n            // if no argument, we can cache the result\n            else {\n                return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n            }\n        },\n        _getAbsoluteTransform: function(top) {\n            var at = new Konva.Transform(),\n                transformsEnabled, trans;\n\n            // start with stage and traverse downwards to self\n            this._eachAncestorReverse(function(node) {\n                transformsEnabled = node.transformsEnabled();\n                trans = node.getTransform();\n\n                if (transformsEnabled === 'all') {\n                    at.multiply(trans);\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x(), node.y());\n                }\n            }, top);\n            return at;\n        },\n        /**\n         * get absolute scale of the node which takes into\n         *  account its ancestor scales\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Transform}\n         */\n        getAbsoluteScale: function(top) {\n            // if using an argument, we can't cache the result.\n            if (top) {\n                return this._getAbsoluteTransform(top);\n            }\n            // if no argument, we can cache the result\n            else {\n                return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n            }\n        },\n        _getAbsoluteScale: function(top) {\n            var scaleX = 1, scaleY = 1;\n\n            // start with stage and traverse downwards to self\n            this._eachAncestorReverse(function(node) {\n                scaleX *= node.scaleX();\n                scaleY *= node.scaleY();\n            }, top);\n            return {\n                x: scaleX,\n                y: scaleY\n            };\n        },\n        /**\n         * get transform of the node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Transform}\n         */\n        getTransform: function() {\n            return this._getCache(TRANSFORM, this._getTransform);\n        },\n        _getTransform: function() {\n            var m = new Konva.Transform(),\n                x = this.getX(),\n                y = this.getY(),\n                rotation = Konva.getAngle(this.getRotation()),\n                scaleX = this.getScaleX(),\n                scaleY = this.getScaleY(),\n                skewX = this.getSkewX(),\n                skewY = this.getSkewY(),\n                offsetX = this.getOffsetX(),\n                offsetY = this.getOffsetY();\n\n            if(x !== 0 || y !== 0) {\n                m.translate(x, y);\n            }\n            if(rotation !== 0) {\n                m.rotate(rotation);\n            }\n            if(skewX !== 0 || skewY !== 0) {\n                m.skew(skewX, skewY);\n            }\n            if(scaleX !== 1 || scaleY !== 1) {\n                m.scale(scaleX, scaleY);\n            }\n            if(offsetX !== 0 || offsetY !== 0) {\n                m.translate(-1 * offsetX, -1 * offsetY);\n            }\n\n            return m;\n        },\n        /**\n         * clone node.  Returns a new Node instance with identical attributes.  You can also override\n         *  the node properties with an object literal, enabling you to use an existing node as a template\n         *  for another node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} obj override attrs\n         * @returns {Konva.Node}\n         * @example\n         * // simple clone\n         * var clone = node.clone();\n         *\n         * // clone a node and override the x position\n         * var clone = rect.clone({\n         *   x: 5\n         * });\n         */\n        clone: function(obj) {\n            // instantiate new node\n            var attrs = Konva.Util.cloneObject(this.attrs),\n                key, allListeners, len, n, listener;\n            // filter black attrs\n            for (var i in CLONE_BLACK_LIST) {\n                var blockAttr = CLONE_BLACK_LIST[i];\n                delete attrs[blockAttr];\n            }\n            // apply attr overrides\n            for (key in obj) {\n                attrs[key] = obj[key];\n            }\n\n            var node = new this.constructor(attrs);\n            // copy over listeners\n            for(key in this.eventListeners) {\n                allListeners = this.eventListeners[key];\n                len = allListeners.length;\n                for(n = 0; n < len; n++) {\n                    listener = allListeners[n];\n                    /*\n                     * don't include konva namespaced listeners because\n                     *  these are generated by the constructors\n                     */\n                    if(listener.name.indexOf(KONVA) < 0) {\n                        // if listeners array doesn't exist, then create it\n                        if(!node.eventListeners[key]) {\n                            node.eventListeners[key] = [];\n                        }\n                        node.eventListeners[key].push(listener);\n                    }\n                }\n            }\n            return node;\n        },\n        /**\n         * Creates a composite data URL. If MIME type is not\n         * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n         * level as quality (range 0.0 - 1.0)\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image url. Default is 1\n         * @returns {String}\n         */\n        toDataURL: function(config) {\n            config = config || {};\n\n            var mimeType = config.mimeType || null,\n                quality = config.quality || null,\n                stage = this.getStage(),\n                x = config.x || 0,\n                y = config.y || 0,\n                pixelRatio = config.pixelRatio || 1,\n                canvas = new Konva.SceneCanvas({\n                    width: config.width || this.getWidth() || (stage ? stage.getWidth() : 0),\n                    height: config.height || this.getHeight() || (stage ? stage.getHeight() : 0),\n                    pixelRatio: pixelRatio\n                }),\n                context = canvas.getContext();\n\n            context.save();\n\n            if(x || y) {\n                context.translate(-1 * x, -1 * y);\n            }\n\n            this.drawScene(canvas);\n            context.restore();\n\n            return canvas.toDataURL(mimeType, quality);\n        },\n        /**\n         * converts node into an image.  Since the toImage\n         *  method is asynchronous, a callback is required.  toImage is most commonly used\n         *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config\n         * @param {Function} config.callback function executed when the composite has completed\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n         * @example\n         * var image = node.toImage({\n         *   callback: function(img) {\n         *     // do stuff with img\n         *   }\n         * });\n         */\n        toImage: function(config) {\n            if (!config || !config.callback) {\n                throw 'callback required for toImage method config argument';\n            }\n            Konva.Util._getImage(this.toDataURL(config), function(img) {\n                config.callback(img);\n            });\n        },\n        setSize: function(size) {\n            this.setWidth(size.width);\n            this.setHeight(size.height);\n            return this;\n        },\n        getSize: function() {\n            return {\n                width: this.getWidth(),\n                height: this.getHeight()\n            };\n        },\n        getWidth: function() {\n            return this.attrs.width || 0;\n        },\n        getHeight: function() {\n            return this.attrs.height || 0;\n        },\n        /**\n         * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {String}\n         */\n        getClassName: function() {\n            return this.className || this.nodeType;\n        },\n        /**\n         * get the node type, which may return Stage, Layer, Group, or Node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {String}\n         */\n        getType: function() {\n            return this.nodeType;\n        },\n        getDragDistance: function() {\n            // compare with undefined because we need to track 0 value\n            if (this.attrs.dragDistance !== undefined) {\n                return this.attrs.dragDistance;\n            } else if (this.parent) {\n                return this.parent.getDragDistance();\n            } else {\n                return Konva.dragDistance;\n            }\n        },\n        _get: function(selector) {\n            return this.className === selector || this.nodeType === selector ? [this] : [];\n        },\n        _off: function(type, name) {\n            var evtListeners = this.eventListeners[type],\n                i, evtName;\n\n            for(i = 0; i < evtListeners.length; i++) {\n                evtName = evtListeners[i].name;\n                // the following two conditions must be true in order to remove a handler:\n                // 1) the current event name cannot be konva unless the event name is konva\n                //    this enables developers to force remove a konva specific listener for whatever reason\n                // 2) an event name is not specified, or if one is specified, it matches the current event name\n                if((evtName !== 'konva' || name === 'konva') && (!name || evtName === name)) {\n                    evtListeners.splice(i, 1);\n                    if(evtListeners.length === 0) {\n                        delete this.eventListeners[type];\n                        break;\n                    }\n                    i--;\n                }\n            }\n        },\n        _fireChangeEvent: function(attr, oldVal, newVal) {\n            this._fire(attr + CHANGE, {\n                oldVal: oldVal,\n                newVal: newVal\n            });\n        },\n        setId: function(id) {\n            var oldId = this.getId();\n\n            Konva._removeId(oldId);\n            Konva._addId(this, id);\n            this._setAttr(ID, id);\n            return this;\n        },\n        setName: function(name) {\n            var oldNames = (this.getName() || '').split(/\\s/g);\n            var newNames = (name || '').split(/\\s/g);\n            var subname, i;\n            // remove all subnames\n            for(i = 0; i < oldNames.length; i++) {\n                subname = oldNames[i];\n                if ((newNames.indexOf(subname)) === -1 && subname) {\n                    Konva._removeName(subname, this._id);\n                }\n            }\n\n            // add new names\n            for(i = 0; i < newNames.length; i++) {\n                subname = newNames[i];\n                if ((oldNames.indexOf(subname) === -1) && subname) {\n                    Konva._addName(this, subname);\n                }\n            }\n\n            this._setAttr(NAME, name);\n            return this;\n        },\n        // naming methods\n        /**\n         * add name to node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} name\n         * @returns {Konva.Node}\n         * @example\n         * node.name('red');\n         * node.addName('selected');\n         * node.name(); // return 'red selected'\n         */\n        addName: function(name) {\n            if (!this.hasName(name)) {\n                var oldName = this.name();\n                var newName = oldName ? (oldName + ' ' + name) : name;\n                this.setName(newName);\n            }\n            return this;\n        },\n        /**\n         * check is node has name\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} name\n         * @returns {Boolean}\n         * @example\n         * node.name('red');\n         * node.hasName('red');   // return true\n         * node.hasName('selected'); // return false\n         */\n        hasName: function(name) {\n            var names = (this.name() || '').split(/\\s/g);\n            return names.indexOf(name) !== -1;\n        },\n        /**\n         * remove name from node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} name\n         * @returns {Konva.Node}\n         * @example\n         * node.name('red selected');\n         * node.removeName('selected');\n         * node.hasName('selected'); // return false\n         * node.name(); // return 'red'\n         */\n        removeName: function(name) {\n            var names = (this.name() || '').split(/\\s/g);\n            var index = names.indexOf(name);\n            if (index !== -1) {\n                names.splice(index, 1);\n                this.setName(names.join(' '));\n            }\n            return this;\n        },\n        /**\n         * set attr\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} attr\n         * @param {*} val\n         * @returns {Konva.Node}\n         * @example\n         * node.setAttr('x', 5);\n         */\n        setAttr: function(attr, val) {\n            var method = SET + Konva.Util._capitalize(attr),\n                func = this[method];\n\n            if(Konva.Util._isFunction(func)) {\n                func.call(this, val);\n            }\n            // otherwise set directly\n            else {\n                this._setAttr(attr, val);\n            }\n            return this;\n        },\n        _setAttr: function(key, val) {\n            var oldVal;\n            oldVal = this.attrs[key];\n            if (oldVal === val) {\n                return;\n            }\n            if (val === undefined || val === null) {\n              delete this.attrs[key];\n            } else {\n              this.attrs[key] = val;\n            }\n            this._fireChangeEvent(key, oldVal, val);\n        },\n        _setComponentAttr: function(key, component, val) {\n            var oldVal;\n            if(val !== undefined) {\n                oldVal = this.attrs[key];\n\n                if (!oldVal) {\n                    // set value to default value using getAttr\n                    this.attrs[key] = this.getAttr(key);\n                }\n\n                this.attrs[key][component] = val;\n                this._fireChangeEvent(key, oldVal, val);\n            }\n        },\n        _fireAndBubble: function(eventType, evt, compareShape) {\n            var okayToRun = true;\n\n            if(evt && this.nodeType === SHAPE) {\n                evt.target = this;\n            }\n\n            if(eventType === MOUSEENTER && compareShape && (this._id === compareShape._id || (this.isAncestorOf && this.isAncestorOf(compareShape)))) {\n                okayToRun = false;\n            }\n            else if(eventType === MOUSELEAVE && compareShape && (this._id === compareShape._id || (this.isAncestorOf && this.isAncestorOf(compareShape)))) {\n                okayToRun = false;\n            }\n            if(okayToRun) {\n                this._fire(eventType, evt);\n\n                // simulate event bubbling\n                var stopBubble =\n                    (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                    ((compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent)));\n                if((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && (!stopBubble)) {\n                    if (compareShape && compareShape.parent) {\n                        this._fireAndBubble.call(this.parent, eventType, evt, compareShape.parent);\n                    }\n                    else {\n                        this._fireAndBubble.call(this.parent, eventType, evt);\n                    }\n                }\n            }\n        },\n        _fire: function(eventType, evt) {\n            var events = this.eventListeners[eventType],\n                i;\n\n            evt = evt || {};\n            evt.currentTarget = this;\n            evt.type = eventType;\n\n            if (events) {\n                for(i = 0; i < events.length; i++) {\n                    events[i].handler.call(this, evt);\n                }\n            }\n        },\n        /**\n         * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n        draw: function() {\n            this.drawScene();\n            this.drawHit();\n            return this;\n        }\n    });\n\n    /**\n     * create node with JSON string or an Object.  De-serializtion does not generate custom\n     *  shape drawing functions, images, or event handlers (this would make the\n     *  serialized object huge).  If your app uses custom shapes, images, and\n     *  event handlers (it probably does), then you need to select the appropriate\n     *  shapes after loading the stage and set these properties via on(), setDrawFunc(),\n     *  and setImage() methods\n     * @method\n     * @memberof Konva.Node\n     * @param {String|Object} json string or object\n     * @param {Element} [container] optional container dom element used only if you're\n     *  creating a stage node\n     */\n    Konva.Node.create = function(data, container) {\n        if (Konva.Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    };\n    Konva.Node._createNode = function(obj, container) {\n        var className = Konva.Node.prototype.getClassName.call(obj),\n            children = obj.children,\n            no, len, n;\n\n        // if container was passed in, add it to attrs\n        if(container) {\n            obj.attrs.container = container;\n        }\n\n        no = new Konva[className](obj.attrs);\n        if(children) {\n            len = children.length;\n            for(n = 0; n < len; n++) {\n                no.add(this._createNode(children[n]));\n            }\n        }\n\n        return no;\n    };\n\n\n    // =========================== add getters setters ===========================\n\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n    /**\n     * get/set node position relative to parent\n     * @name position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Object}\n     * @example\n     * // get position\n     * var position = node.position();\n     *\n     * // set position\n     * node.position({\n     *   x: 5\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'x', 0);\n\n    /**\n     * get/set x position\n     * @name x\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} x\n     * @returns {Object}\n     * @example\n     * // get x\n     * var x = node.x();\n     *\n     * // set x\n     * node.x(5);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'y', 0);\n\n    /**\n     * get/set y position\n     * @name y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} y\n     * @returns {Integer}\n     * @example\n     * // get y\n     * var y = node.y();\n     *\n     * // set y\n     * node.y(5);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'opacity', 1);\n\n    /**\n     * get/set opacity.  Opacity values range from 0 to 1.\n     *  A node with an opacity of 0 is fully transparent, and a node\n     *  with an opacity of 1 is fully opaque\n     * @name opacity\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} opacity\n     * @returns {Number}\n     * @example\n     * // get opacity\n     * var opacity = node.opacity();\n     *\n     * // set opacity\n     * node.opacity(0.5);\n     */\n\n    Konva.Factory.addGetter(Konva.Node, 'name');\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\n    /**\n     * get/set name\n     * @name name\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {String}\n     * @example\n     * // get name\n     * var name = node.name();\n     *\n     * // set name\n     * node.name('foo');\n     *\n     * // also node may have multiple names (as css classes)\n     * node.name('foo bar');\n     */\n\n    Konva.Factory.addGetter(Konva.Node, 'id');\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\n    /**\n     * get/set id. Id is global for whole page.\n     * @name id\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} id\n     * @returns {String}\n     * @example\n     * // get id\n     * var name = node.id();\n     *\n     * // set id\n     * node.id('foo');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'rotation', 0);\n\n    /**\n     * get/set rotation in degrees\n     * @name rotation\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} rotation\n     * @returns {Number}\n     * @example\n     * // get rotation in degrees\n     * var rotation = node.rotation();\n     *\n     * // set rotation in degrees\n     * node.rotation(45);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\n    /**\n     * get/set scale\n     * @name scale\n     * @param {Object} scale\n     * @param {Number} scale.x\n     * @param {Number} scale.y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     * @example\n     * // get scale\n     * var scale = node.scale();\n     *\n     * // set scale\n     * shape.scale({\n     *   x: 2\n     *   y: 3\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'scaleX', 1);\n\n    /**\n     * get/set scale x\n     * @name scaleX\n     * @param {Number} x\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get scale x\n     * var scaleX = node.scaleX();\n     *\n     * // set scale x\n     * node.scaleX(2);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'scaleY', 1);\n\n    /**\n     * get/set scale y\n     * @name scaleY\n     * @param {Number} y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get scale y\n     * var scaleY = node.scaleY();\n     *\n     * // set scale y\n     * node.scaleY(2);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\n    /**\n     * get/set skew\n     * @name skew\n     * @param {Object} skew\n     * @param {Number} skew.x\n     * @param {Number} skew.y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     * @example\n     * // get skew\n     * var skew = node.skew();\n     *\n     * // set skew\n     * node.skew({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'skewX', 0);\n\n    /**\n     * get/set skew x\n     * @name skewX\n     * @param {Number} x\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get skew x\n     * var skewX = node.skewX();\n     *\n     * // set skew x\n     * node.skewX(3);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'skewY', 0);\n\n    /**\n     * get/set skew y\n     * @name skewY\n     * @param {Number} y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get skew y\n     * var skewY = node.skewY();\n     *\n     * // set skew y\n     * node.skewY(3);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\n    /**\n     * get/set offset.  Offsets the default position and rotation point\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} offset\n     * @param {Number} offset.x\n     * @param {Number} offset.y\n     * @returns {Object}\n     * @example\n     * // get offset\n     * var offset = node.offset();\n     *\n     * // set offset\n     * node.offset({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'offsetX', 0);\n\n    /**\n     * get/set offset x\n     * @name offsetX\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get offset x\n     * var offsetX = node.offsetX();\n     *\n     * // set offset x\n     * node.offsetX(3);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'offsetY', 0);\n\n    /**\n     * get/set offset y\n     * @name offsetY\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get offset y\n     * var offsetY = node.offsetY();\n     *\n     * // set offset y\n     * node.offsetY(3);\n     */\n\n    Konva.Factory.addSetter(Konva.Node, 'dragDistance');\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\n    /**\n     * get/set drag distance\n     * @name dragDistance\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} distance\n     * @returns {Number}\n     * @example\n     * // get drag distance\n     * var dragDistance = node.dragDistance();\n     *\n     * // set distance\n     * // node starts dragging only if pointer moved more then 3 pixels\n     * node.dragDistance(3);\n     * // or set globally\n     * Konva.dragDistance = 3;\n     */\n\n\n    Konva.Factory.addSetter(Konva.Node, 'width', 0);\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n    /**\n     * get/set width\n     * @name width\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get width\n     * var width = node.width();\n     *\n     * // set width\n     * node.width(100);\n     */\n\n    Konva.Factory.addSetter(Konva.Node, 'height', 0);\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n    /**\n     * get/set height\n     * @name height\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get height\n     * var height = node.height();\n     *\n     * // set height\n     * node.height(100);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit');\n    /**\n     * get/set listenig attr.  If you need to determine if a node is listening or not\n     *   by taking into account its parents, use the isListening() method\n     * @name listening\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n     * @returns {Boolean|String}\n     * @example\n     * // get listening attr\n     * var listening = node.listening();\n     *\n     * // stop listening for events\n     * node.listening(false);\n     *\n     * // listen for events\n     * node.listening(true);\n     *\n     * // listen to events according to the parent\n     * node.listening('inherit');\n     */\n\n\n\n     /**\n      * get/set preventDefault\n      * By default all shapes will prevent default behaviour\n      * of a browser on a pointer move or tap.\n      * that will prevent native scrolling when you are trying to drag&drop a node\n      * but sometimes you may need to enable default actions\n      * in that case you can set the property to false\n      * @name preventDefault\n      * @method\n      * @memberof Konva.Node.prototype\n      * @param {Number} preventDefault\n      * @returns {Number}\n      * @example\n      * // get preventDefault\n      * var shouldPrevent = shape.preventDefault();\n      *\n      * // set preventDefault\n      * shape.preventDefault(false);\n      */\n\n     Konva.Factory.addGetterSetter(Konva.Node, 'preventDefault', true);\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'filters', undefined, function(val) {this._filterUpToDate = false; return val; });\n    /**\n     * get/set filters.  Filters are applied to cached canvases\n     * @name filters\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Array} filters array of filters\n     * @returns {Array}\n     * @example\n     * // get filters\n     * var filters = node.filters();\n     *\n     * // set a single filter\n     * node.cache();\n     * node.filters([Konva.Filters.Blur]);\n     *\n     * // set multiple filters\n     * node.cache();\n     * node.filters([\n     *   Konva.Filters.Blur,\n     *   Konva.Filters.Sepia,\n     *   Konva.Filters.Invert\n     * ]);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit');\n    /**\n     * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n     *   If you need to determine if a node is visible or not\n     *   by taking into account its parents, use the isVisible() method\n     * @name visible\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Boolean|String} visible\n     * @returns {Boolean|String}\n     * @example\n     * // get visible attr\n     * var visible = node.visible();\n     *\n     * // make invisible\n     * node.visible(false);\n     *\n     * // make visible\n     * node.visible(true);\n     *\n     * // make visible according to the parent\n     * node.visible('inherit');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'transformsEnabled', 'all');\n\n    /**\n     * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n     *  is \"all\"\n     * @name transformsEnabled\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} enabled\n     * @returns {String}\n     * @example\n     * // enable position transform only to improve draw performance\n     * node.transformsEnabled('position');\n     *\n     * // enable all transforms\n     * node.transformsEnabled('all');\n     */\n\n\n\n    /**\n     * get/set node size\n     * @name size\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} size\n     * @param {Number} size.width\n     * @param {Number} size.height\n     * @returns {Object}\n     * @example\n     * // get node size\n     * var size = node.size();\n     * var x = size.x;\n     * var y = size.y;\n     *\n     * // set size\n     * node.size({\n     *   width: 100,\n     *   height: 200\n     * });\n     */\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\n    Konva.Factory.backCompat(Konva.Node, {\n        rotateDeg: 'rotate',\n        setRotationDeg: 'setRotation',\n        getRotationDeg: 'getRotation'\n    });\n\n    Konva.Collection.mapMethods(Konva.Node);\n})(Konva);\n\n(function() {\r\n    'use strict';\r\n    /**\r\n    * Grayscale Filter\r\n    * @function\r\n    * @memberof Konva.Filters\r\n    * @param {Object} imageData\r\n    * @example\r\n    * node.cache();\r\n    * node.filters([Konva.Filters.Grayscale]);\r\n    */\r\n    Konva.Filters.Grayscale = function(imageData) {\r\n        var data = imageData.data,\r\n            len = data.length,\r\n            i, brightness;\r\n\r\n        for(i = 0; i < len; i += 4) {\r\n            brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n            // red\r\n            data[i] = brightness;\r\n            // green\r\n            data[i + 1] = brightness;\r\n            // blue\r\n            data[i + 2] = brightness;\r\n        }\r\n    };\r\n})();\r\n\n(function() {\n    'use strict';\n    /**\n     * Brighten Filter.\n     * @function\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Brighten]);\n     * node.brightness(0.8);\n     */\n    Konva.Filters.Brighten = function(imageData) {\n        var brightness = this.brightness() * 255,\n            data = imageData.data,\n            len = data.length,\n            i;\n\n        for(i = 0; i < len; i += 4) {\n            // red\n            data[i] += brightness;\n            // green\n            data[i + 1] += brightness;\n            // blue\n            data[i + 2] += brightness;\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'brightness', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n    *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n    * @name brightness\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} brightness value between -1 and 1\n    * @returns {Number}\n    */\n\n})();\n\n(function() {\r\n    'use strict';\r\n    /**\r\n    * Invert Filter\r\n    * @function\r\n    * @memberof Konva.Filters\r\n    * @param {Object} imageData\r\n    * @example\r\n    * node.cache();\r\n    * node.filters([Konva.Filters.Invert]);\r\n    */\r\n    Konva.Filters.Invert = function(imageData) {\r\n        var data = imageData.data,\r\n            len = data.length,\r\n            i;\r\n\r\n        for(i = 0; i < len; i += 4) {\r\n            // red\r\n            data[i] = 255 - data[i];\r\n            // green\r\n            data[i + 1] = 255 - data[i + 1];\r\n            // blue\r\n            data[i + 2] = 255 - data[i + 2];\r\n        }\r\n    };\r\n})();\r\n\n/*\n the Gauss filter\n master repo: https://github.com/pavelpower/kineticjsGaussFilter\n*/\n(function() {\n    'use strict';\n    /*\n\n     StackBlur - a fast almost Gaussian Blur For Canvas\n\n     Version:   0.5\n     Author:    Mario Klingemann\n     Contact:   mario@quasimondo.com\n     Website:   http://www.quasimondo.com/StackBlurForCanvas\n     Twitter:   @quasimondo\n\n     In case you find this class useful - especially in commercial projects -\n     I am not totally unhappy for a small donation to my PayPal account\n     mario@quasimondo.de\n\n     Or support me on flattr:\n     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n     Copyright (c) 2010 Mario Klingemann\n\n     Permission is hereby granted, free of charge, to any person\n     obtaining a copy of this software and associated documentation\n     files (the \"Software\"), to deal in the Software without\n     restriction, including without limitation the rights to use,\n     copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the\n     Software is furnished to do so, subject to the following\n     conditions:\n\n     The above copyright notice and this permission notice shall be\n     included in all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n     OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n    function BlurStack() {\n        this.r = 0;\n        this.g = 0;\n        this.b = 0;\n        this.a = 0;\n        this.next = null;\n    }\n\n    var mul_table = [\n        512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512,\n        454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512,\n        482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456,\n        437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512,\n        497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328,\n        320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456,\n        446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335,\n        329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512,\n        505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405,\n        399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328,\n        324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271,\n        268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456,\n        451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388,\n        385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335,\n        332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292,\n        289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259\n    ];\n\n    var shg_table = [\n        9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\n        17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n        19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\n        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n        23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24\n    ];\n\n    function filterGaussBlurRGBA( imageData, radius) {\n\n        var pixels = imageData.data,\n            width = imageData.width,\n            height = imageData.height;\n\n        var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\n            r_out_sum, g_out_sum, b_out_sum, a_out_sum,\n            r_in_sum, g_in_sum, b_in_sum, a_in_sum,\n            pr, pg, pb, pa, rbs;\n\n        var div = radius + radius + 1,\n            widthMinus1 = width - 1,\n            heightMinus1 = height - 1,\n            radiusPlus1 = radius + 1,\n            sumFactor = radiusPlus1 * ( radiusPlus1 + 1 ) / 2,\n            stackStart = new BlurStack(),\n            stackEnd = null,\n            stack = stackStart,\n            stackIn = null,\n            stackOut = null,\n            mul_sum = mul_table[radius],\n            shg_sum = shg_table[radius];\n\n        for ( i = 1; i < div; i++ ) {\n            stack = stack.next = new BlurStack();\n            if ( i === radiusPlus1 ){\n                stackEnd = stack;\n            }\n        }\n\n        stack.next = stackStart;\n\n        yw = yi = 0;\n\n        for ( y = 0; y < height; y++ )\n        {\n            r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n            r_out_sum = radiusPlus1 * ( pr = pixels[yi] );\n            g_out_sum = radiusPlus1 * ( pg = pixels[yi + 1] );\n            b_out_sum = radiusPlus1 * ( pb = pixels[yi + 2] );\n            a_out_sum = radiusPlus1 * ( pa = pixels[yi + 3] );\n\n            r_sum += sumFactor * pr;\n            g_sum += sumFactor * pg;\n            b_sum += sumFactor * pb;\n            a_sum += sumFactor * pa;\n\n            stack = stackStart;\n\n            for( i = 0; i < radiusPlus1; i++ )\n            {\n                stack.r = pr;\n                stack.g = pg;\n                stack.b = pb;\n                stack.a = pa;\n                stack = stack.next;\n            }\n\n            for( i = 1; i < radiusPlus1; i++ )\n            {\n                p = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n                r_sum += ( stack.r = ( pr = pixels[p])) * ( rbs = radiusPlus1 - i );\n                g_sum += ( stack.g = ( pg = pixels[p + 1])) * rbs;\n                b_sum += ( stack.b = ( pb = pixels[p + 2])) * rbs;\n                a_sum += ( stack.a = ( pa = pixels[p + 3])) * rbs;\n\n                r_in_sum += pr;\n                g_in_sum += pg;\n                b_in_sum += pb;\n                a_in_sum += pa;\n\n                stack = stack.next;\n            }\n\n\n            stackIn = stackStart;\n            stackOut = stackEnd;\n            for ( x = 0; x < width; x++ )\n            {\n                pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n                if ( pa !== 0 )\n                {\n                    pa = 255 / pa;\n                    pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                    pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                    pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n                } else {\n                    pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n                }\n\n                r_sum -= r_out_sum;\n                g_sum -= g_out_sum;\n                b_sum -= b_out_sum;\n                a_sum -= a_out_sum;\n\n                r_out_sum -= stackIn.r;\n                g_out_sum -= stackIn.g;\n                b_out_sum -= stackIn.b;\n                a_out_sum -= stackIn.a;\n\n                p = (yw + ( ( p = x + radius + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\n                r_in_sum += ( stackIn.r = pixels[p]);\n                g_in_sum += ( stackIn.g = pixels[p + 1]);\n                b_in_sum += ( stackIn.b = pixels[p + 2]);\n                a_in_sum += ( stackIn.a = pixels[p + 3]);\n\n                r_sum += r_in_sum;\n                g_sum += g_in_sum;\n                b_sum += b_in_sum;\n                a_sum += a_in_sum;\n\n                stackIn = stackIn.next;\n\n                r_out_sum += ( pr = stackOut.r );\n                g_out_sum += ( pg = stackOut.g );\n                b_out_sum += ( pb = stackOut.b );\n                a_out_sum += ( pa = stackOut.a );\n\n                r_in_sum -= pr;\n                g_in_sum -= pg;\n                b_in_sum -= pb;\n                a_in_sum -= pa;\n\n                stackOut = stackOut.next;\n\n                yi += 4;\n            }\n            yw += width;\n        }\n\n\n        for ( x = 0; x < width; x++ )\n        {\n            g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n            yi = x << 2;\n            r_out_sum = radiusPlus1 * ( pr = pixels[yi]);\n            g_out_sum = radiusPlus1 * ( pg = pixels[yi + 1]);\n            b_out_sum = radiusPlus1 * ( pb = pixels[yi + 2]);\n            a_out_sum = radiusPlus1 * ( pa = pixels[yi + 3]);\n\n            r_sum += sumFactor * pr;\n            g_sum += sumFactor * pg;\n            b_sum += sumFactor * pb;\n            a_sum += sumFactor * pa;\n\n            stack = stackStart;\n\n            for( i = 0; i < radiusPlus1; i++ )\n            {\n                stack.r = pr;\n                stack.g = pg;\n                stack.b = pb;\n                stack.a = pa;\n                stack = stack.next;\n            }\n\n            yp = width;\n\n            for( i = 1; i <= radius; i++ )\n            {\n                yi = ( yp + x ) << 2;\n\n                r_sum += ( stack.r = ( pr = pixels[yi])) * ( rbs = radiusPlus1 - i );\n                g_sum += ( stack.g = ( pg = pixels[yi + 1])) * rbs;\n                b_sum += ( stack.b = ( pb = pixels[yi + 2])) * rbs;\n                a_sum += ( stack.a = ( pa = pixels[yi + 3])) * rbs;\n\n                r_in_sum += pr;\n                g_in_sum += pg;\n                b_in_sum += pb;\n                a_in_sum += pa;\n\n                stack = stack.next;\n\n                if( i < heightMinus1 )\n                {\n                    yp += width;\n                }\n            }\n\n            yi = x;\n            stackIn = stackStart;\n            stackOut = stackEnd;\n            for ( y = 0; y < height; y++ )\n            {\n                p = yi << 2;\n                pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n                if ( pa > 0 )\n                {\n                    pa = 255 / pa;\n                    pixels[p] = ((r_sum * mul_sum) >> shg_sum ) * pa;\n                    pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum ) * pa;\n                    pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum ) * pa;\n                } else {\n                    pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n                }\n\n                r_sum -= r_out_sum;\n                g_sum -= g_out_sum;\n                b_sum -= b_out_sum;\n                a_sum -= a_out_sum;\n\n                r_out_sum -= stackIn.r;\n                g_out_sum -= stackIn.g;\n                b_out_sum -= stackIn.b;\n                a_out_sum -= stackIn.a;\n\n                p = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\n                r_sum += ( r_in_sum += ( stackIn.r = pixels[p]));\n                g_sum += ( g_in_sum += ( stackIn.g = pixels[p + 1]));\n                b_sum += ( b_in_sum += ( stackIn.b = pixels[p + 2]));\n                a_sum += ( a_in_sum += ( stackIn.a = pixels[p + 3]));\n\n                stackIn = stackIn.next;\n\n                r_out_sum += ( pr = stackOut.r );\n                g_out_sum += ( pg = stackOut.g );\n                b_out_sum += ( pb = stackOut.b );\n                a_out_sum += ( pa = stackOut.a );\n\n                r_in_sum -= pr;\n                g_in_sum -= pg;\n                b_in_sum -= pb;\n                a_in_sum -= pa;\n\n                stackOut = stackOut.next;\n\n                yi += width;\n            }\n        }\n    }\n\n    /**\n     * Blur Filter\n     * @function\n     * @name Blur\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Blur]);\n     * node.blurRadius(10);\n     */\n    Konva.Filters.Blur = function Blur(imageData) {\n        var radius = Math.round(this.blurRadius());\n\n        if (radius > 0) {\n            filterGaussBlurRGBA(imageData, radius);\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'blurRadius', 0, null, Konva.Factory.afterSetFilter);\n\n    /**\n    * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n    * @name blurRadius\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} radius\n    * @returns {Integer}\n    */\n})();\n\n/*eslint-disable  max-depth */\n(function() {\n\t'use strict';\n\tfunction pixelAt(idata, x, y) {\n\t\tvar idx = (y * idata.width + x) * 4;\n\t\tvar d = [];\n\t\td.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n\t\treturn d;\n\t}\n\n\tfunction rgbDistance(p1, p2) {\n\t\treturn Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));\n\t}\n\n\tfunction rgbMean(pTab) {\n\t\tvar m = [0, 0, 0];\n\n\t\tfor (var i = 0; i < pTab.length; i++) {\n\t\t\tm[0] += pTab[i][0];\n\t\t\tm[1] += pTab[i][1];\n\t\t\tm[2] += pTab[i][2];\n\t\t}\n\n\t\tm[0] /= pTab.length;\n\t\tm[1] /= pTab.length;\n\t\tm[2] /= pTab.length;\n\n\t\treturn m;\n\t}\n\n\tfunction backgroundMask(idata, threshold) {\n\t\tvar rgbv_no = pixelAt(idata, 0, 0);\n\t\tvar rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n\t\tvar rgbv_so = pixelAt(idata, 0, idata.height - 1);\n\t\tvar rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\n\n\t\tvar thres = threshold || 10;\n\t\tif (rgbDistance(rgbv_no, rgbv_ne) < thres && rgbDistance(rgbv_ne, rgbv_se) < thres && rgbDistance(rgbv_se, rgbv_so) < thres && rgbDistance(rgbv_so, rgbv_no) < thres) {\n\n\t\t\t// Mean color\n\t\t\tvar mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\n\t\t\t// Mask based on color distance\n\t\t\tvar mask = [];\n\t\t\tfor (var i = 0; i < idata.width * idata.height; i++) {\n\t\t\t\tvar d = rgbDistance(mean, [idata.data[i * 4], idata.data[i * 4 + 1], idata.data[i * 4 + 2]]);\n\t\t\t\tmask[i] = (d < thres) ? 0 : 255;\n\t\t\t}\n\n\t\t\treturn mask;\n\t\t}\n\t}\n\n\tfunction applyMask(idata, mask) {\n\t\tfor (var i = 0; i < idata.width * idata.height; i++) {\n\t\t\tidata.data[4 * i + 3] = mask[i];\n\t\t}\n\t}\n\n\tfunction erodeMask(mask, sw, sh) {\n\n\t\tvar weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n\t\tvar side = Math.round(Math.sqrt(weights.length));\n\t\tvar halfSide = Math.floor(side / 2);\n\n\t\tvar maskResult = [];\n\t\tfor (var y = 0; y < sh; y++) {\n\t\t\tfor (var x = 0; x < sw; x++) {\n\n\t\t\t\tvar so = y * sw + x;\n\t\t\t\tvar a = 0;\n\t\t\t\tfor (var cy = 0; cy < side; cy++) {\n\t\t\t\t\tfor (var cx = 0; cx < side; cx++) {\n\t\t\t\t\t\tvar scy = y + cy - halfSide;\n\t\t\t\t\t\tvar scx = x + cx - halfSide;\n\n\t\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\n\t\t\t\t\t\t\tvar srcOff = scy * sw + scx;\n\t\t\t\t\t\t\tvar wt = weights[cy * side + cx];\n\n\t\t\t\t\t\t\ta += mask[srcOff] * wt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaskResult[so] = (a === 255 * 8) ? 255 : 0;\n\t\t\t}\n\t\t}\n\n\t\treturn maskResult;\n\t}\n\n\tfunction dilateMask(mask, sw, sh) {\n\n\t\tvar weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n\t\tvar side = Math.round(Math.sqrt(weights.length));\n\t\tvar halfSide = Math.floor(side / 2);\n\n\t\tvar maskResult = [];\n\t\tfor (var y = 0; y < sh; y++) {\n\t\t\tfor (var x = 0; x < sw; x++) {\n\n\t\t\t\tvar so = y * sw + x;\n\t\t\t\tvar a = 0;\n\t\t\t\tfor (var cy = 0; cy < side; cy++) {\n\t\t\t\t\tfor (var cx = 0; cx < side; cx++) {\n\t\t\t\t\t\tvar scy = y + cy - halfSide;\n\t\t\t\t\t\tvar scx = x + cx - halfSide;\n\n\t\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\n\t\t\t\t\t\t\tvar srcOff = scy * sw + scx;\n\t\t\t\t\t\t\tvar wt = weights[cy * side + cx];\n\n\t\t\t\t\t\t\ta += mask[srcOff] * wt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaskResult[so] = (a >= 255 * 4) ? 255 : 0;\n\t\t\t}\n\t\t}\n\n\t\treturn maskResult;\n\t}\n\n\tfunction smoothEdgeMask(mask, sw, sh) {\n\n\t\tvar weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n\t\tvar side = Math.round(Math.sqrt(weights.length));\n\t\tvar halfSide = Math.floor(side / 2);\n\n\t\tvar maskResult = [];\n\t\tfor (var y = 0; y < sh; y++) {\n\t\t\tfor (var x = 0; x < sw; x++) {\n\n\t\t\t\tvar so = y * sw + x;\n\t\t\t\tvar a = 0;\n\t\t\t\tfor (var cy = 0; cy < side; cy++) {\n\t\t\t\t\tfor (var cx = 0; cx < side; cx++) {\n\t\t\t\t\t\tvar scy = y + cy - halfSide;\n\t\t\t\t\t\tvar scx = x + cx - halfSide;\n\n\t\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\n\t\t\t\t\t\t\tvar srcOff = scy * sw + scx;\n\t\t\t\t\t\t\tvar wt = weights[cy * side + cx];\n\n\t\t\t\t\t\t\ta += mask[srcOff] * wt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaskResult[so] = a;\n\t\t\t}\n\t\t}\n\n\t\treturn maskResult;\n\t}\n\n\t/**\n\t * Mask Filter\n\t * @function\n\t * @name Mask\n\t * @memberof Konva.Filters\n\t * @param {Object} imageData\n\t * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Mask]);\n     * node.threshold(200);\n\t */\n\tKonva.Filters.Mask = function(imageData) {\n\t\t// Detect pixels close to the background color\n\t\tvar threshold = this.threshold(),\n        mask = backgroundMask(imageData, threshold);\n\t\tif (mask) {\n\t\t\t// Erode\n\t\t\tmask = erodeMask(mask, imageData.width, imageData.height);\n\n\t\t\t// Dilate\n\t\t\tmask = dilateMask(mask, imageData.width, imageData.height);\n\n\t\t\t// Gradient\n\t\t\tmask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\n\t\t\t// Apply mask\n\t\t\tapplyMask(imageData, mask);\n\n\t\t\t// todo : Update hit region function according to mask\n\t\t}\n\n\t\treturn imageData;\n\t};\n\n\tKonva.Factory.addGetterSetter(Konva.Node, 'threshold', 0, null, Konva.Factory.afterSetFilter);\n})();\n\n(function () {\n    'use strict';\n    /**\n     * RGB Filter\n     * @function\n     * @name RGB\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author ippo615\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.RGB]);\n     * node.blue(120);\n     * node.green(200);\n     */\n    Konva.Filters.RGB = function (imageData) {\n        var data = imageData.data,\n            nPixels = data.length,\n            red = this.red(),\n            green = this.green(),\n            blue = this.blue(),\n            i, brightness;\n\n        for (i = 0; i < nPixels; i += 4) {\n            brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n            data[i] = brightness * red; // r\n            data[i + 1] = brightness * green; // g\n            data[i + 2] = brightness * blue; // b\n            data[i + 3] = data[i + 3]; // alpha\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n        this._filterUpToDate = false;\n        if (val > 255) {\n            return 255;\n        }\n        else if (val < 0) {\n            return 0;\n        }\n        else {\n            return Math.round(val);\n        }\n    });\n    /**\n    * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n    * @name red\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} red value between 0 and 255\n    * @returns {Integer}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n        this._filterUpToDate = false;\n        if (val > 255) {\n            return 255;\n        }\n        else if (val < 0) {\n            return 0;\n        }\n        else {\n            return Math.round(val);\n        }\n    });\n    /**\n    * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n    * @name green\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} green value between 0 and 255\n    * @returns {Integer}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'blue', 0, Konva.Validators.RGBComponent, Konva.Factory.afterSetFilter);\n    /**\n    * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n    * @name blue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} blue value between 0 and 255\n    * @returns {Integer}\n    */\n})();\n\n(function () {\n    'use strict';\n    /**\n     * RGBA Filter\n     * @function\n     * @name RGBA\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author codefo\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.RGBA]);\n     * node.blue(120);\n     * node.green(200);\n     * node.alpha(0.3);\n     */\n    Konva.Filters.RGBA = function (imageData) {\n        var data = imageData.data,\n            nPixels = data.length,\n            red = this.red(),\n            green = this.green(),\n            blue = this.blue(),\n            alpha = this.alpha(),\n            i, ia;\n\n        for (i = 0; i < nPixels; i += 4) {\n            ia = 1 - alpha;\n\n            data[i] = red * alpha + data[i] * ia; // r\n            data[i + 1] = green * alpha + data[i + 1] * ia; // g\n            data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n        this._filterUpToDate = false;\n        if (val > 255) {\n            return 255;\n        }\n        else if (val < 0) {\n            return 0;\n        }\n        else {\n            return Math.round(val);\n        }\n    });\n    /**\n    * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name red\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} red value between 0 and 255\n    * @returns {Integer}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n        this._filterUpToDate = false;\n        if (val > 255) {\n            return 255;\n        }\n        else if (val < 0) {\n            return 0;\n        }\n        else {\n            return Math.round(val);\n        }\n    });\n    /**\n    * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name green\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} green value between 0 and 255\n    * @returns {Integer}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'blue', 0, Konva.Validators.RGBComponent, Konva.Factory.afterSetFilter);\n    /**\n    * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name blue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} blue value between 0 and 255\n    * @returns {Integer}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n        this._filterUpToDate = false;\n        if (val > 1) {\n            return 1;\n        }\n        else if (val < 0) {\n            return 0;\n        }\n        else {\n            return val;\n        }\n    });\n    /**\n     * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n     * @name alpha\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Float} alpha value between 0 and 1\n     * @returns {Float}\n     */\n})();\n\n(function () {\n    'use strict';\n    /**\n    * HSV Filter. Adjusts the hue, saturation and value\n    * @function\n    * @name HSV\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * image.filters([Konva.Filters.HSV]);\n    * image.value(200);\n    */\n\n    Konva.Filters.HSV = function (imageData) {\n        var data = imageData.data,\n            nPixels = data.length,\n            v = Math.pow(2, this.value()),\n            s = Math.pow(2, this.saturation()),\n            h = Math.abs((this.hue()) + 360) % 360,\n            i;\n\n        // Basis for the technique used:\n        // http://beesbuzz.biz/code/hsv_color_transforms.php\n        // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n        // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n        // H is the hue shift in degrees (0 to 360)\n        // vsu = V*S*cos(H*PI/180);\n        // vsw = V*S*sin(H*PI/180);\n        //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n        //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n        //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n        // Precompute the values in the matrix:\n        var vsu = v * s * Math.cos(h * Math.PI / 180),\n            vsw = v * s * Math.sin(h * Math.PI / 180);\n        // (result spot)(source spot)\n        var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n            rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n            rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n        var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n            gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n            gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n        var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n            bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n            bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\n        var r, g, b, a;\n\n        for (i = 0; i < nPixels; i += 4) {\n            r = data[i + 0];\n            g = data[i + 1];\n            b = data[i + 2];\n            a = data[i + 3];\n\n            data[i + 0] = rr * r + rg * g + rb * b;\n            data[i + 1] = gr * r + gg * g + gb * b;\n            data[i + 2] = br * r + bg * g + bb * b;\n            data[i + 3] = a; // alpha\n        }\n\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'hue', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name hue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} hue value between 0 and 359\n    * @returns {Number}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'saturation', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name saturation\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'value', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n    * @name value\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n})();\n\n(function () {\n    'use strict';\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'hue', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name hue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} hue value between 0 and 359\n    * @returns {Number}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'saturation', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name saturation\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'luminance', 0, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n    * @name value\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n    /**\n    * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n    * @function\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * image.filters([Konva.Filters.HSL]);\n    * image.luminance(200);\n    */\n\n    Konva.Filters.HSL = function (imageData) {\n        var data = imageData.data,\n            nPixels = data.length,\n            v = 1,\n            s = Math.pow(2, this.saturation()),\n            h = Math.abs((this.hue()) + 360) % 360,\n            l = this.luminance() * 127,\n            i;\n\n        // Basis for the technique used:\n        // http://beesbuzz.biz/code/hsv_color_transforms.php\n        // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n        // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n        // H is the hue shift in degrees (0 to 360)\n        // vsu = V*S*cos(H*PI/180);\n        // vsw = V*S*sin(H*PI/180);\n        //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n        //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n        //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n        // Precompute the values in the matrix:\n        var vsu = v * s * Math.cos(h * Math.PI / 180),\n            vsw = v * s * Math.sin(h * Math.PI / 180);\n        // (result spot)(source spot)\n        var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n            rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n            rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n        var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n            gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n            gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n        var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n            bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n            bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\n        var r, g, b, a;\n\n        for (i = 0; i < nPixels; i += 4) {\n            r = data[i + 0];\n            g = data[i + 1];\n            b = data[i + 2];\n            a = data[i + 3];\n\n            data[i + 0] = rr * r + rg * g + rb * b + l;\n            data[i + 1] = gr * r + gg * g + gb * b + l;\n            data[i + 2] = br * r + bg * g + bb * b + l;\n            data[i + 3] = a; // alpha\n        }\n    };\n})();\n\n(function () {\n    'use strict';\n    /**\n     * Emboss Filter.\n     * Pixastic Lib - Emboss filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * License: [http://www.pixastic.com/lib/license.txt]\n     * @function\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Emboss]);\n     * node.embossStrength(0.8);\n     * node.embossWhiteLevel(0.3);\n     * node.embossDirection('right');\n     * node.embossBlend(true);\n     */\n    Konva.Filters.Emboss = function (imageData) {\n\n        // pixastic strength is between 0 and 10.  I want it between 0 and 1\n        // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n        // a max value of greyLevel yields a white emboss, and the min value yields a black\n        // emboss.  Therefore, I changed greyLevel to whiteLevel\n        var strength = this.embossStrength() * 10,\n            greyLevel = this.embossWhiteLevel() * 255,\n            direction = this.embossDirection(),\n            blend = this.embossBlend(),\n            dirY = 0,\n            dirX = 0,\n            data = imageData.data,\n            w = imageData.width,\n            h = imageData.height,\n            w4 = w * 4,\n            y = h;\n\n        switch (direction) {\n            case 'top-left':\n                dirY = -1;\n                dirX = -1;\n                break;\n            case 'top':\n                dirY = -1;\n                dirX = 0;\n                break;\n            case 'top-right':\n                dirY = -1;\n                dirX = 1;\n                break;\n            case 'right':\n                dirY = 0;\n                dirX = 1;\n                break;\n            case 'bottom-right':\n                dirY = 1;\n                dirX = 1;\n                break;\n            case 'bottom':\n                dirY = 1;\n                dirX = 0;\n                break;\n            case 'bottom-left':\n                dirY = 1;\n                dirX = -1;\n                break;\n            case 'left':\n                dirY = 0;\n                dirX = -1;\n                break;\n            default:\n                Konva.Util.error('Unknwo emboss direction: ' + direction);\n        }\n\n        do {\n            var offsetY = (y - 1) * w4;\n\n            var otherY = dirY;\n            if (y + otherY < 1){\n                otherY = 0;\n            }\n            if (y + otherY > h) {\n                otherY = 0;\n            }\n\n            var offsetYOther = (y - 1 + otherY) * w * 4;\n\n            var x = w;\n            do {\n                var offset = offsetY + (x - 1) * 4;\n\n                var otherX = dirX;\n                if (x + otherX < 1){\n                    otherX = 0;\n                }\n                if (x + otherX > w) {\n                    otherX = 0;\n                }\n\n                var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\n                var dR = data[offset] - data[offsetOther];\n                var dG = data[offset + 1] - data[offsetOther + 1];\n                var dB = data[offset + 2] - data[offsetOther + 2];\n\n                var dif = dR;\n                var absDif = dif > 0 ? dif : -dif;\n\n                var absG = dG > 0 ? dG : -dG;\n                var absB = dB > 0 ? dB : -dB;\n\n                if (absG > absDif) {\n                    dif = dG;\n                }\n                if (absB > absDif) {\n                    dif = dB;\n                }\n\n                dif *= strength;\n\n                if (blend) {\n                    var r = data[offset] + dif;\n                    var g = data[offset + 1] + dif;\n                    var b = data[offset + 2] + dif;\n\n                    data[offset] = (r > 255) ? 255 : (r < 0 ? 0 : r);\n                    data[offset + 1] = (g > 255) ? 255 : (g < 0 ? 0 : g);\n                    data[offset + 2] = (b > 255) ? 255 : (b < 0 ? 0 : b);\n                } else {\n                    var grey = greyLevel - dif;\n                    if (grey < 0) {\n                        grey = 0;\n                    } else if (grey > 255) {\n                        grey = 255;\n                    }\n\n                    data[offset] = data[offset + 1] = data[offset + 2] = grey;\n                }\n\n            } while (--x);\n        } while (--y);\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'embossStrength', 0.5, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossStrength\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} level between 0 and 1.  Default is 0.5\n    * @returns {Number}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'embossWhiteLevel', 0.5, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossWhiteLevel\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n    * @returns {Number}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'embossDirection', 'top-left', null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossDirection\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n    *   The default is top-left\n    * @returns {String}\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'embossBlend', false, null, Konva.Factory.afterSetFilter);\n    /**\n    * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossBlend\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Boolean} embossBlend\n    * @returns {Boolean}\n    */\n})();\n\n(function () {\n    'use strict';\n    function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n        // Compute the range of the data\n        var fromRange = fromMax - fromMin,\n          toRange = toMax - toMin,\n          toValue;\n\n        // If either range is 0, then the value can only be mapped to 1 value\n        if (fromRange === 0) {\n            return toMin + toRange / 2;\n        }\n        if (toRange === 0) {\n            return toMin;\n        }\n\n        // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n        toValue = (fromValue - fromMin) / fromRange;\n        toValue = (toRange * toValue) + toMin;\n\n        return toValue;\n    }\n\n\n    /**\n    * Enhance Filter. Adjusts the colors so that they span the widest\n    *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n    *  writes.\n    * @function\n    * @name Enhance\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * node.cache();\n    * node.filters([Konva.Filters.Enhance]);\n    * node.enhance(0.4);\n    */\n    Konva.Filters.Enhance = function (imageData) {\n        var data = imageData.data,\n            nSubPixels = data.length,\n            rMin = data[0], rMax = rMin, r,\n            gMin = data[1], gMax = gMin, g,\n            bMin = data[2], bMax = bMin, b,\n            i;\n\n        // If we are not enhancing anything - don't do any computation\n        var enhanceAmount = this.enhance();\n        if( enhanceAmount === 0 ){ return; }\n\n        // 1st Pass - find the min and max for each channel:\n        for (i = 0; i < nSubPixels; i += 4) {\n            r = data[i + 0];\n            if (r < rMin) { rMin = r; }\n            else if (r > rMax) { rMax = r; }\n            g = data[i + 1];\n            if (g < gMin) { gMin = g; } else\n            if (g > gMax) { gMax = g; }\n            b = data[i + 2];\n            if (b < bMin) { bMin = b; } else\n            if (b > bMax) { bMax = b; }\n            //a = data[i + 3];\n            //if (a < aMin) { aMin = a; } else\n            //if (a > aMax) { aMax = a; }\n        }\n\n        // If there is only 1 level - don't remap\n        if( rMax === rMin ){ rMax = 255; rMin = 0; }\n        if( gMax === gMin ){ gMax = 255; gMin = 0; }\n        if( bMax === bMin ){ bMax = 255; bMin = 0; }\n\n        var rMid, rGoalMax, rGoalMin,\n            gMid, gGoalMax, gGoalMin,\n            bMid, bGoalMax, bGoalMin;\n\n        // If the enhancement is positive - stretch the histogram\n        if ( enhanceAmount > 0 ){\n            rGoalMax = rMax + enhanceAmount * (255 - rMax);\n            rGoalMin = rMin - enhanceAmount * (rMin - 0);\n            gGoalMax = gMax + enhanceAmount * (255 - gMax);\n            gGoalMin = gMin - enhanceAmount * (gMin - 0);\n            bGoalMax = bMax + enhanceAmount * (255 - bMax);\n            bGoalMin = bMin - enhanceAmount * (bMin - 0);\n        // If the enhancement is negative -   compress the histogram\n        } else {\n            rMid = (rMax + rMin) * 0.5;\n            rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n            rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n            gMid = (gMax + gMin) * 0.5;\n            gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n            gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n            bMid = (bMax + bMin) * 0.5;\n            bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n            bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n        }\n\n        // Pass 2 - remap everything, except the alpha\n        for (i = 0; i < nSubPixels; i += 4) {\n            data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n            data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n            data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n            //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'enhance', 0, null, Konva.Factory.afterSetFilter);\n\n    /**\n    * get/set enhance. Use with {@link Konva.Filters.Enhance} filter.\n    * @name enhance\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Float} amount\n    * @returns {Float}\n    */\n})();\n\n(function () {\n    'use strict';\n    /**\n     * Posterize Filter. Adjusts the channels so that there are no more\n     *  than n different values for that channel. This is also applied\n     *  to the alpha channel.\n     * @function\n     * @name Posterize\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Posterize]);\n     * node.levels(0.8); // between 0 and 1\n     */\n\n    Konva.Filters.Posterize = function (imageData) {\n        // level must be between 1 and 255\n        var levels = Math.round(this.levels() * 254) + 1,\n            data = imageData.data,\n            len = data.length,\n            scale = (255 / levels),\n            i;\n\n        for (i = 0; i < len; i += 1) {\n            data[i] = Math.floor(data[i] / scale) * scale;\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'levels', 0.5, null, Konva.Factory.afterSetFilter);\n\n    /**\n    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n    * @name levels\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} level between 0 and 1\n    * @returns {Number}\n    */\n})();\n\n(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Noise Filter. Randomly adds or substracts to the color channels\r\n     * @function\r\n     * @name Noise\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Noise]);\r\n     * node.noise(0.8);\r\n     */\r\n    Konva.Filters.Noise = function (imageData) {\r\n        var amount = this.noise() * 255,\r\n            data = imageData.data,\r\n            nPixels = data.length,\r\n            half = amount / 2,\r\n            i;\r\n\r\n        for (i = 0; i < nPixels; i += 4) {\r\n            data[i + 0] += half - 2 * half * Math.random();\r\n            data[i + 1] += half - 2 * half * Math.random();\r\n            data[i + 2] += half - 2 * half * Math.random();\r\n        }\r\n    };\r\n\r\n    Konva.Factory.addGetterSetter(Konva.Node, 'noise', 0.2, null, Konva.Factory.afterSetFilter);\r\n\r\n    /**\r\n    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\r\n    * @name noise\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Number} noise\r\n    * @returns {Number}\r\n    */\r\n})();\r\n\n/*eslint-disable max-depth */\r\n(function () {\r\n    'use strict';\r\n    /**\r\n     * Pixelate Filter. Averages groups of pixels and redraws\r\n     *  them as larger pixels\r\n     * @function\r\n     * @name Pixelate\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Pixelate]);\r\n     * node.pixelSize(10);\r\n     */\r\n\r\n    Konva.Filters.Pixelate = function (imageData) {\r\n\r\n        var pixelSize = Math.ceil(this.pixelSize()),\r\n            width = imageData.width,\r\n            height = imageData.height,\r\n            x, y, i,\r\n            //pixelsPerBin = pixelSize * pixelSize,\r\n            red, green, blue, alpha,\r\n            nBinsX = Math.ceil(width / pixelSize),\r\n            nBinsY = Math.ceil(height / pixelSize),\r\n            xBinStart, xBinEnd, yBinStart, yBinEnd,\r\n            xBin, yBin, pixelsInBin;\r\n        imageData = imageData.data;\r\n\r\n        if (pixelSize <= 0) {\r\n            Konva.Util.error('pixelSize value can not be <= 0');\r\n            return;\r\n        }\r\n\r\n        for (xBin = 0; xBin < nBinsX; xBin += 1) {\r\n            for (yBin = 0; yBin < nBinsY; yBin += 1) {\r\n\r\n                // Initialize the color accumlators to 0\r\n                red = 0;\r\n                green = 0;\r\n                blue = 0;\r\n                alpha = 0;\r\n\r\n                // Determine which pixels are included in this bin\r\n                xBinStart = xBin * pixelSize;\r\n                xBinEnd = xBinStart + pixelSize;\r\n                yBinStart = yBin * pixelSize;\r\n                yBinEnd = yBinStart + pixelSize;\r\n\r\n                // Add all of the pixels to this bin!\r\n                pixelsInBin = 0;\r\n                for (x = xBinStart; x < xBinEnd; x += 1) {\r\n                    if( x >= width ){ continue; }\r\n                    for (y = yBinStart; y < yBinEnd; y += 1) {\r\n                        if( y >= height ){ continue; }\r\n                        i = (width * y + x) * 4;\r\n                        red += imageData[i + 0];\r\n                        green += imageData[i + 1];\r\n                        blue += imageData[i + 2];\r\n                        alpha += imageData[i + 3];\r\n                        pixelsInBin += 1;\r\n                    }\r\n                }\r\n\r\n                // Make sure the channels are between 0-255\r\n                red = red / pixelsInBin;\r\n                green = green / pixelsInBin;\r\n                blue = blue / pixelsInBin;\r\n\r\n                // Draw this bin\r\n                for (x = xBinStart; x < xBinEnd; x += 1) {\r\n                    if( x >= width ){ continue; }\r\n                    for (y = yBinStart; y < yBinEnd; y += 1) {\r\n                        if( y >= height ){ continue; }\r\n                        i = (width * y + x) * 4;\r\n                        imageData[i + 0] = red;\r\n                        imageData[i + 1] = green;\r\n                        imageData[i + 2] = blue;\r\n                        imageData[i + 3] = alpha;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    Konva.Factory.addGetterSetter(Konva.Node, 'pixelSize', 8, null, Konva.Factory.afterSetFilter);\r\n\r\n    /**\r\n    * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\r\n    * @name pixelSize\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Integer} pixelSize\r\n    * @returns {Integer}\r\n    */\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n    /**\r\n     * Threshold Filter. Pushes any value above the mid point to\r\n     *  the max and any value below the mid point to the min.\r\n     *  This affects the alpha channel.\r\n     * @function\r\n     * @name Threshold\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Threshold]);\r\n     * node.threshold(0.1);\r\n     */\r\n\r\n    Konva.Filters.Threshold = function (imageData) {\r\n        var level = this.threshold() * 255,\r\n            data = imageData.data,\r\n            len = data.length,\r\n            i;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            data[i] = data[i] < level ? 0 : 255;\r\n        }\r\n    };\r\n\r\n    Konva.Factory.addGetterSetter(Konva.Node, 'threshold', 0.5, null, Konva.Factory.afterSetFilter);\r\n\r\n    /**\r\n    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\r\n    * @name threshold\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Number} threshold\r\n    * @returns {Number}\r\n    */\r\n})();\r\n\n(function() {\n    'use strict';\n    /**\n     * Sepia Filter\n     * Based on: Pixastic Lib - Sepia filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * @function\n     * @name Sepia\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Sepia]);\n     */\n    Konva.Filters.Sepia = function (imageData) {\n        var data = imageData.data,\n            w = imageData.width,\n            y = imageData.height,\n            w4 = w * 4,\n            offsetY, x, offset, or, og, ob, r, g, b;\n\n        do {\n            offsetY = (y - 1) * w4;\n            x = w;\n            do {\n                offset = offsetY + (x - 1) * 4;\n\n                or = data[offset];\n                og = data[offset + 1];\n                ob = data[offset + 2];\n\n                r = or * 0.393 + og * 0.769 + ob * 0.189;\n                g = or * 0.349 + og * 0.686 + ob * 0.168;\n                b = or * 0.272 + og * 0.534 + ob * 0.131;\n\n                data[offset] = r > 255 ? 255 : r;\n                data[offset + 1] = g > 255 ? 255 : g;\n                data[offset + 2] = b > 255 ? 255 : b;\n                data[offset + 3] = data[offset + 3];\n            } while (--x);\n        } while (--y);\n    };\n})();\n\n(function () {\n    'use strict';\n    /**\n     * Solarize Filter\n     * Pixastic Lib - Solarize filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * License: [http://www.pixastic.com/lib/license.txt]\n     * @function\n     * @name Solarize\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Solarize]);\n     */\n    Konva.Filters.Solarize = function (imageData) {\n        var data = imageData.data,\n            w = imageData.width,\n            h = imageData.height,\n            w4 = w * 4,\n            y = h;\n\n        do {\n            var offsetY = (y - 1) * w4;\n            var x = w;\n            do {\n                var offset = offsetY + (x - 1) * 4;\n                var r = data[offset];\n                var g = data[offset + 1];\n                var b = data[offset + 2];\n\n                if (r > 127) {\n                    r = 255 - r;\n                }\n                if (g > 127) {\n                    g = 255 - g;\n                }\n                if (b > 127) {\n                    b = 255 - b;\n                }\n\n                data[offset] = r;\n                data[offset + 1] = g;\n                data[offset + 2] = b;\n            } while (--x);\n        } while (--y);\n    };\n})();\n\n\n\n(function () {\n    'use strict';\n\n  /*\n   * ToPolar Filter. Converts image data to polar coordinates. Performs\n   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n   *  what would be the y axis and the theta axis along the x axis.\n   * @function\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {ImageData} src, the source image data (what will be transformed)\n   * @param {ImageData} dst, the destination image data (where it will be saved)\n   * @param {Object} opt\n   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n   *  default is in the middle\n   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n   *  default is in the middle\n   */\n\n    var ToPolar = function(src, dst, opt){\n\n        var srcPixels = src.data,\n            dstPixels = dst.data,\n            xSize = src.width,\n            ySize = src.height,\n            xMid = opt.polarCenterX || xSize / 2,\n            yMid = opt.polarCenterY || ySize / 2,\n            i, x, y, r = 0, g = 0, b = 0, a = 0;\n\n        // Find the largest radius\n        var rad, rMax = Math.sqrt( xMid * xMid + yMid * yMid );\n        x = xSize - xMid;\n        y = ySize - yMid;\n        rad = Math.sqrt( x * x + y * y );\n        rMax = (rad > rMax) ? rad : rMax;\n\n        // We'll be uisng y as the radius, and x as the angle (theta=t)\n        var rSize = ySize,\n            tSize = xSize,\n            radius, theta;\n\n        // We want to cover all angles (0-360) and we need to convert to\n        // radians (*PI/180)\n        var conversion = 360 / tSize * Math.PI / 180, sin, cos;\n\n        // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\n        for( theta = 0; theta < tSize; theta += 1 ){\n            sin = Math.sin(theta * conversion);\n            cos = Math.cos(theta * conversion);\n            for( radius = 0; radius < rSize; radius += 1 ){\n                x = Math.floor(xMid + rMax * radius / rSize * cos);\n                y = Math.floor(yMid + rMax * radius / rSize * sin);\n                i = (y * xSize + x) * 4;\n                r = srcPixels[i + 0];\n                g = srcPixels[i + 1];\n                b = srcPixels[i + 2];\n                a = srcPixels[i + 3];\n\n                // Store it\n                //i = (theta * xSize  +  radius) * 4;\n                i = (theta + radius * xSize) * 4;\n                dstPixels[i + 0] = r;\n                dstPixels[i + 1] = g;\n                dstPixels[i + 2] = b;\n                dstPixels[i + 3] = a;\n\n            }\n        }\n    };\n\n    /*\n     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n     *  Performs w*h*4 pixel reads and w*h pixel writes.\n     * @function\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {ImageData} src, the source image data (what will be transformed)\n     * @param {ImageData} dst, the destination image data (where it will be saved)\n     * @param {Object} opt\n     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n     *  0 is no rotation, 360 degrees is a full rotation\n     */\n\n    var FromPolar = function(src, dst, opt){\n\n        var srcPixels = src.data,\n            dstPixels = dst.data,\n            xSize = src.width,\n            ySize = src.height,\n            xMid = opt.polarCenterX || xSize / 2,\n            yMid = opt.polarCenterY || ySize / 2,\n            i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n\n\n        // Find the largest radius\n        var rad, rMax = Math.sqrt( xMid * xMid + yMid * yMid );\n        x = xSize - xMid;\n        y = ySize - yMid;\n        rad = Math.sqrt( x * x + y * y );\n        rMax = (rad > rMax) ? rad : rMax;\n\n        // We'll be uisng x as the radius, and y as the angle (theta=t)\n        var rSize = ySize,\n        tSize = xSize,\n        radius, theta,\n        phaseShift = opt.polarRotation || 0;\n\n        // We need to convert to degrees and we need to make sure\n        // it's between (0-360)\n        // var conversion = tSize/360*180/Math.PI;\n        //var conversion = tSize/360*180/Math.PI;\n\n        var x1, y1;\n\n        for( x = 0; x < xSize; x += 1 ){\n            for( y = 0; y < ySize; y += 1 ){\n                dx = x - xMid;\n                dy = y - yMid;\n                radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n                theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n                theta = theta * tSize / 360;\n                x1 = Math.floor(theta);\n                y1 = Math.floor(radius);\n                i = (y1 * xSize + x1) * 4;\n                r = srcPixels[i + 0];\n                g = srcPixels[i + 1];\n                b = srcPixels[i + 2];\n                a = srcPixels[i + 3];\n\n                // Store it\n                i = (y * xSize + x) * 4;\n                dstPixels[i + 0] = r;\n                dstPixels[i + 1] = g;\n                dstPixels[i + 2] = b;\n                dstPixels[i + 3] = a;\n            }\n        }\n\n    };\n\n    //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n    //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\n    // create a temporary canvas for working - shared between multiple calls\n    var tempCanvas = Konva.Util.createCanvasElement();\n\n    /*\n     * Kaleidoscope Filter.\n     * @function\n     * @name Kaleidoscope\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Kaleidoscope]);\n     * node.kaleidoscopePower(3);\n     * node.kaleidoscopeAngle(45);\n     */\n    Konva.Filters.Kaleidoscope = function(imageData){\n        var xSize = imageData.width,\n            ySize = imageData.height;\n\n        var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n        var power = Math.round( this.kaleidoscopePower() );\n        var angle = Math.round( this.kaleidoscopeAngle() );\n        var offset = Math.floor(xSize * (angle % 360) / 360);\n\n        if( power < 1 ){return; }\n\n        // Work with our shared buffer canvas\n        tempCanvas.width = xSize;\n        tempCanvas.height = ySize;\n        var scratchData = tempCanvas.getContext('2d').getImageData(0, 0, xSize, ySize);\n\n        // Convert thhe original to polar coordinates\n        ToPolar( imageData, scratchData, {\n            polarCenterX: xSize / 2,\n            polarCenterY: ySize / 2\n        });\n\n        // Determine how big each section will be, if it's too small\n        // make it bigger\n        var minSectionSize = xSize / Math.pow(2, power);\n        while( minSectionSize <= 8){\n            minSectionSize = minSectionSize * 2;\n            power -= 1;\n        }\n        minSectionSize = Math.ceil(minSectionSize);\n        var sectionSize = minSectionSize;\n\n        // Copy the offset region to 0\n        // Depending on the size of filter and location of the offset we may need\n        // to copy the section backwards to prevent it from rewriting itself\n        var xStart = 0,\n          xEnd = sectionSize,\n          xDelta = 1;\n        if( offset + minSectionSize > xSize ){\n            xStart = sectionSize;\n            xEnd = 0;\n            xDelta = -1;\n        }\n        for( y = 0; y < ySize; y += 1 ){\n            for( x = xStart; x !== xEnd; x += xDelta ){\n                xoff = Math.round(x + offset) % xSize;\n                srcPos = (xSize * y + xoff) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + x) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n        }\n\n        // Perform the actual effect\n        for( y = 0; y < ySize; y += 1 ){\n            sectionSize = Math.floor( minSectionSize );\n            for( i = 0; i < power; i += 1 ){\n                for( x = 0; x < sectionSize + 1; x += 1 ){\n                    srcPos = (xSize * y + x) * 4;\n                    r = scratchData.data[srcPos + 0];\n                    g = scratchData.data[srcPos + 1];\n                    b = scratchData.data[srcPos + 2];\n                    a = scratchData.data[srcPos + 3];\n                    dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                    scratchData.data[dstPos + 0] = r;\n                    scratchData.data[dstPos + 1] = g;\n                    scratchData.data[dstPos + 2] = b;\n                    scratchData.data[dstPos + 3] = a;\n                }\n                sectionSize *= 2;\n            }\n        }\n\n        // Convert back from polar coordinates\n        FromPolar(scratchData, imageData, {polarRotation: 0});\n    };\n\n    /**\n    * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n    * @name kaleidoscopePower\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} power of kaleidoscope\n    * @returns {Integer}\n    */\n    Konva.Factory.addGetterSetter(Konva.Node, 'kaleidoscopePower', 2, null, Konva.Factory.afterSetFilter);\n\n    /**\n    * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n    * @name kaleidoscopeAngle\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} degrees\n    * @returns {Integer}\n    */\n    Konva.Factory.addGetterSetter(Konva.Node, 'kaleidoscopeAngle', 0, null, Konva.Factory.afterSetFilter);\n\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Node\n     * @abstract\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     */\n    Konva.Container = function(config) {\n        this.__init(config);\n    };\n\n    Konva.Util.addMethods(Konva.Container, {\n        __init: function(config) {\n            this.children = new Konva.Collection();\n            Konva.Node.call(this, config);\n        },\n        /**\n         * returns a {@link Konva.Collection} of direct descendant nodes\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {Function} [filterFunc] filter function\n         * @returns {Konva.Collection}\n         * @example\n         * // get all children\n         * var children = layer.getChildren();\n         *\n         * // get only circles\n         * var circles = layer.getChildren(function(node){\n         *    return node.getClassName() === 'Circle';\n         * });\n         */\n        getChildren: function(filterFunc) {\n            if (!filterFunc) {\n                return this.children;\n            }\n\n            var results = new Konva.Collection();\n            this.children.each(function(child){\n                if (filterFunc(child)) {\n                    results.push(child);\n                }\n            });\n            return results;\n        },\n        /**\n         * determine if node has children\n         * @method\n         * @memberof Konva.Container.prototype\n         * @returns {Boolean}\n         */\n        hasChildren: function() {\n            return this.getChildren().length > 0;\n        },\n        /**\n         * remove all children\n         * @method\n         * @memberof Konva.Container.prototype\n         */\n        removeChildren: function() {\n            var children = Konva.Collection.toCollection(this.children);\n            var child;\n            for (var i = 0; i < children.length; i++) {\n                child = children[i];\n                // reset parent to prevent many _setChildrenIndices calls\n                delete child.parent;\n                child.index = 0;\n                child.remove();\n            }\n            children = null;\n            this.children = new Konva.Collection();\n            return this;\n        },\n        /**\n         * destroy all children\n         * @method\n         * @memberof Konva.Container.prototype\n         */\n        destroyChildren: function() {\n           var children = Konva.Collection.toCollection(this.children);\n            var child;\n            for (var i = 0; i < children.length; i++) {\n                child = children[i];\n                // reset parent to prevent many _setChildrenIndices calls\n                delete child.parent;\n                child.index = 0;\n                child.destroy();\n            }\n            children = null;\n            this.children = new Konva.Collection();\n            return this;\n        },\n        /**\n         * Add node or nodes to container.\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {...Konva.Node} child\n         * @returns {Container}\n         * @example\n         * layer.add(shape1, shape2, shape3);\n         */\n        add: function(child) {\n            if (arguments.length > 1) {\n                for (var i = 0; i < arguments.length; i++) {\n                    this.add(arguments[i]);\n                }\n                return this;\n            }\n            if (child.getParent()) {\n                child.moveTo(this);\n                return this;\n            }\n            var children = this.children;\n            this._validateAdd(child);\n            child.index = children.length;\n            child.parent = this;\n            children.push(child);\n            this._fire('add', {\n                child: child\n            });\n\n            // if node under drag we need to update drag animation\n            if (Konva.DD && child.isDragging()) {\n                Konva.DD.anim.setLayers(child.getLayer());\n            }\n\n            // chainable\n            return this;\n        },\n        destroy: function() {\n            // destroy children\n            if (this.hasChildren()) {\n                this.destroyChildren();\n            }\n            // then destroy self\n            Konva.Node.prototype.destroy.call(this);\n            return this;\n        },\n        /**\n         * return a {@link Konva.Collection} of nodes that match the selector.  Use '#' for id selections\n         * and '.' for name selections.  You can also select by type or class name. Pass multiple selectors\n         * separated by a space.\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {String} selector\n         * @returns {Collection}\n         * @example\n         * // select node with id foo\n         * var node = stage.find('#foo');\n         *\n         * // select nodes with name bar inside layer\n         * var nodes = layer.find('.bar');\n         *\n         * // select all groups inside layer\n         * var nodes = layer.find('Group');\n         *\n         * // select all rectangles inside layer\n         * var nodes = layer.find('Rect');\n         *\n         * // select node with an id of foo or a name of bar inside layer\n         * var nodes = layer.find('#foo, .bar');\n         */\n        find: function(selector) {\n            var retArr = [],\n                selectorArr = selector.replace(/ /g, '').split(','),\n                len = selectorArr.length,\n                n, i, sel, arr, node, children, clen;\n\n            for (n = 0; n < len; n++) {\n                sel = selectorArr[n];\n                if (!Konva.Util.isValidSelector(sel)) {\n                    Konva.Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                    Konva.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                    Konva.Util.warn('Konva is awesome, right?');\n                }\n                // id selector\n                if(sel.charAt(0) === '#') {\n                    node = this._getNodeById(sel.slice(1));\n                    if(node) {\n                        retArr.push(node);\n                    }\n                }\n                // name selector\n                else if(sel.charAt(0) === '.') {\n                    arr = this._getNodesByName(sel.slice(1));\n                    retArr = retArr.concat(arr);\n                }\n                // unrecognized selector, pass to children\n                else {\n                    children = this.getChildren();\n                    clen = children.length;\n                    for(i = 0; i < clen; i++) {\n                        retArr = retArr.concat(children[i]._get(sel));\n                    }\n                }\n            }\n\n            return Konva.Collection.toCollection(retArr);\n        },\n        /**\n         * return a first node from `find` method\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {String} selector\n         * @returns {Konva.Node}\n         * @example\n         * // select node with id foo\n         * var node = stage.findOne('#foo');\n         *\n         * // select node with name bar inside layer\n         * var nodes = layer.findOne('.bar');\n         */\n        findOne: function(selector) {\n            return this.find(selector)[0];\n        },\n        _getNodeById: function(key) {\n            var node = Konva.ids[key];\n\n            if(node !== undefined && this.isAncestorOf(node)) {\n                return node;\n            }\n            return null;\n        },\n        _getNodesByName: function(key) {\n            var arr = Konva.names[key] || [];\n            return this._getDescendants(arr);\n        },\n        _get: function(selector) {\n            var retArr = Konva.Node.prototype._get.call(this, selector);\n            var children = this.getChildren();\n            var len = children.length;\n            for(var n = 0; n < len; n++) {\n                retArr = retArr.concat(children[n]._get(selector));\n            }\n            return retArr;\n        },\n        // extenders\n        toObject: function() {\n            var obj = Konva.Node.prototype.toObject.call(this);\n\n            obj.children = [];\n\n            var children = this.getChildren();\n            var len = children.length;\n            for(var n = 0; n < len; n++) {\n                var child = children[n];\n                obj.children.push(child.toObject());\n            }\n\n            return obj;\n        },\n        _getDescendants: function(arr) {\n            var retArr = [];\n            var len = arr.length;\n            for(var n = 0; n < len; n++) {\n                var node = arr[n];\n                if(this.isAncestorOf(node)) {\n                    retArr.push(node);\n                }\n            }\n\n            return retArr;\n        },\n        /**\n         * determine if node is an ancestor\n         * of descendant\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {Konva.Node} node\n         */\n        isAncestorOf: function(node) {\n            var parent = node.getParent();\n            while(parent) {\n                if(parent._id === this._id) {\n                    return true;\n                }\n                parent = parent.getParent();\n            }\n\n            return false;\n        },\n        clone: function(obj) {\n            // call super method\n            var node = Konva.Node.prototype.clone.call(this, obj);\n\n            this.getChildren().each(function(no) {\n                node.add(no.clone());\n            });\n            return node;\n        },\n        /**\n         * get all shapes that intersect a point.  Note: because this method must clear a temporary\n         * canvas and redraw every shape inside the container, it should only be used for special sitations\n         * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n         * because it performs much better\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @returns {Array} array of shapes\n         */\n        getAllIntersections: function(pos) {\n            var arr = [];\n\n            this.find('Shape').each(function(shape) {\n                if(shape.isVisible() && shape.intersects(pos)) {\n                    arr.push(shape);\n                }\n            });\n\n            return arr;\n        },\n        _setChildrenIndices: function() {\n            this.children.each(function(child, n) {\n                child.index = n;\n            });\n        },\n        drawScene: function(can, top, caching) {\n            var layer = this.getLayer(),\n                canvas = can || (layer && layer.getCanvas()),\n                context = canvas && canvas.getContext(),\n                cachedCanvas = this._cache.canvas,\n                cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n            if (this.isVisible()) {\n                if (!caching && cachedSceneCanvas) {\n                    context.save();\n                    layer._applyTransform(this, context, top);\n                    this._drawCachedSceneCanvas(context);\n                    context.restore();\n                }\n                else {\n                    this._drawChildren(canvas, 'drawScene', top, false, caching);\n                }\n            }\n            return this;\n        },\n        drawHit: function(can, top, caching) {\n            var layer = this.getLayer(),\n                canvas = can || (layer && layer.hitCanvas),\n                context = canvas && canvas.getContext(),\n                cachedCanvas = this._cache.canvas,\n                cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n            if (this.shouldDrawHit(canvas)) {\n                if (layer) {\n                    layer.clearHitCache();\n                }\n                if (!caching && cachedHitCanvas) {\n                    context.save();\n                    layer._applyTransform(this, context, top);\n                    this._drawCachedHitCanvas(context);\n                    context.restore();\n                }\n                else {\n                    this._drawChildren(canvas, 'drawHit', top);\n                }\n            }\n            return this;\n        },\n        _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n            var layer = this.getLayer(),\n                context = canvas && canvas.getContext(),\n                clipWidth = this.getClipWidth(),\n                clipHeight = this.getClipHeight(),\n                clipFunc = this.getClipFunc(),\n                hasClip = clipWidth && clipHeight || clipFunc,\n                clipX, clipY;\n\n            if (hasClip && layer) {\n                context.save();\n                layer._applyTransform(this, context);\n                context.beginPath();\n                if (clipFunc) {\n                  clipFunc.call(this, context, this);\n                } else {\n                  clipX = this.getClipX();\n                  clipY = this.getClipY();\n                  context.rect(clipX, clipY, clipWidth, clipHeight);\n                }\n                context.clip();\n                context.reset();\n            }\n\n            this.children.each(function(child) {\n                child[drawMethod](canvas, top, caching, skipBuffer);\n            });\n\n            if (hasClip) {\n                context.restore();\n            }\n        },\n        shouldDrawHit: function(canvas) {\n            var layer = this.getLayer();\n            var dd = Konva.DD;\n            var layerUnderDrag = dd && Konva.isDragging() && (Konva.DD.anim.getLayers().indexOf(layer) !== -1);\n            return (canvas && canvas.isCache) || (layer && layer.hitGraphEnabled())\n                && this.isVisible() && !layerUnderDrag;\n        },\n        getClientRect: function(skipTransform) {\n            var minX, minY, maxX, maxY;\n            var selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0\n            };\n            this.children.each(function(child) {\n                var rect = child.getClientRect();\n\n                // skip invisible children (like empty groups)\n                // or don't skip... hmmm...\n                // if (rect.width === 0 && rect.height === 0) {\n                //     return;\n                // }\n\n                if (minX === undefined) { // initial value for first child\n                    minX = rect.x;\n                    minY = rect.y;\n                    maxX = rect.x + rect.width;\n                    maxY = rect.y + rect.height;\n                } else {\n                    minX = Math.min(minX, rect.x);\n                    minY = Math.min(minY, rect.y);\n                    maxX = Math.max(maxX, rect.x + rect.width);\n                    maxY = Math.max(maxY, rect.y + rect.height);\n                }\n\n            });\n\n            if (this.children.length !== 0) {\n                selfRect = {\n                    x: minX,\n                    y: minY,\n                    width: maxX - minX,\n                    height: maxY - minY\n                };\n            }\n\n            if (!skipTransform) {\n                return this._transformedRect(selfRect);\n            }\n            return selfRect;\n        }\n    });\n\n    Konva.Util.extend(Konva.Container, Konva.Node);\n    // deprecated methods\n    Konva.Container.prototype.get = Konva.Container.prototype.find;\n\n    // add getters setters\n    Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', ['x', 'y', 'width', 'height']);\n    /**\n     * get/set clip\n     * @method\n     * @name clip\n     * @memberof Konva.Container.prototype\n     * @param {Object} clip\n     * @param {Number} clip.x\n     * @param {Number} clip.y\n     * @param {Number} clip.width\n     * @param {Number} clip.height\n     * @returns {Object}\n     * @example\n     * // get clip\n     * var clip = container.clip();\n     *\n     * // set clip\n     * container.setClip({\n     *   x: 20,\n     *   y: 20,\n     *   width: 20,\n     *   height: 20\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Container, 'clipX');\n    /**\n     * get/set clip x\n     * @name clipX\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get clip x\n     * var clipX = container.clipX();\n     *\n     * // set clip x\n     * container.clipX(10);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Container, 'clipY');\n    /**\n     * get/set clip y\n     * @name clipY\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get clip y\n     * var clipY = container.clipY();\n     *\n     * // set clip y\n     * container.clipY(10);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Container, 'clipWidth');\n    /**\n     * get/set clip width\n     * @name clipWidth\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get clip width\n     * var clipWidth = container.clipWidth();\n     *\n     * // set clip width\n     * container.clipWidth(100);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Container, 'clipHeight');\n    /**\n     * get/set clip height\n     * @name clipHeight\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get clip height\n     * var clipHeight = container.clipHeight();\n     *\n     * // set clip height\n     * container.clipHeight(100);\n     */\n\n     Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n     /**\n      * get/set clip function\n      * @name clipFunc\n      * @method\n      * @memberof Konva.Container.prototype\n      * @param {Function} function\n      * @returns {Function}\n      * @example\n      * // get clip function\n      * var clipFunction = container.clipFunc();\n      *\n      * // set clip height\n      * container.clipFunc(function(ctx) {\n      *   ctx.rect(0, 0, 100, 100);\n      * });\n      */\n\n    Konva.Collection.mapMethods(Konva.Container);\n})();\n\n(function(Konva) {\n    'use strict';\n    var HAS_SHADOW = 'hasShadow';\n    var SHADOW_RGBA = 'shadowRGBA';\n\n    function _fillFunc(context) {\n        context.fill();\n    }\n    function _strokeFunc(context) {\n        context.stroke();\n    }\n    function _fillFuncHit(context) {\n        context.fill();\n    }\n    function _strokeFuncHit(context) {\n        context.stroke();\n    }\n\n    function _clearHasShadowCache() {\n        this._clearCache(HAS_SHADOW);\n    }\n\n    function _clearGetShadowRGBACache() {\n        this._clearCache(SHADOW_RGBA);\n    }\n\n    /**\n     * Shape constructor.  Shapes are primitive objects such as rectangles,\n     *  circles, text, lines, etc.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Node\n     * @param {Object} config\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var customShape = new Konva.Shape({\n         *   x: 5,\n         *   y: 10,\n         *   fill: 'red',\n         *   // a Konva.Canvas renderer is passed into the drawFunc function\n         *   drawFunc: function(context) {\n         *     context.beginPath();\n         *     context.moveTo(200, 50);\n         *     context.lineTo(420, 80);\n         *     context.quadraticCurveTo(300, 100, 260, 170);\n         *     context.closePath();\n         *     context.fillStrokeShape(this);\n         *   }\n         *});\n     */\n    Konva.Shape = function(config) {\n        this.__init(config);\n    };\n\n    Konva.Util.addMethods(Konva.Shape, {\n        __init: function(config) {\n            this.nodeType = 'Shape';\n            this._fillFunc = _fillFunc;\n            this._strokeFunc = _strokeFunc;\n            this._fillFuncHit = _fillFuncHit;\n            this._strokeFuncHit = _strokeFuncHit;\n\n            // set colorKey\n            var shapes = Konva.shapes;\n            var key;\n\n            while(true) {\n                key = Konva.Util.getRandomColor();\n                if(key && !( key in shapes)) {\n                    break;\n                }\n            }\n\n            this.colorKey = key;\n            shapes[key] = this;\n\n            // call super constructor\n            Konva.Node.call(this, config);\n\n            this.on('shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\n\n            this.on('shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\n        },\n        hasChildren: function() {\n            return false;\n        },\n        getChildren: function() {\n            return [];\n        },\n        /**\n         * get canvas context tied to the layer\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Konva.Context}\n         */\n        getContext: function() {\n            return this.getLayer().getContext();\n        },\n        /**\n         * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Konva.Canvas}\n         */\n        getCanvas: function() {\n            return this.getLayer().getCanvas();\n        },\n        /**\n         * returns whether or not a shadow will be rendered\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Boolean}\n         */\n        hasShadow: function() {\n            return this._getCache(HAS_SHADOW, this._hasShadow);\n        },\n        _hasShadow: function() {\n            return this.getShadowEnabled() && (this.getShadowOpacity() !== 0 && !!(this.getShadowColor() || this.getShadowBlur() || this.getShadowOffsetX() || this.getShadowOffsetY()));\n        },\n        getShadowRGBA: function() {\n            return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n        },\n        _getShadowRGBA: function() {\n            if (this.hasShadow()) {\n                var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n                return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + (rgba.a * (this.getShadowOpacity() || 1)) + ')';\n            }\n        },\n        /**\n         * returns whether or not the shape will be filled\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Boolean}\n         */\n        hasFill: function() {\n            return !!(this.getFill() || this.getFillPatternImage() || this.getFillLinearGradientColorStops() || this.getFillRadialGradientColorStops());\n        },\n        /**\n         * returns whether or not the shape will be stroked\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Boolean}\n         */\n        hasStroke: function() {\n            return !!(this.stroke());\n        },\n        /**\n         * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n         *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n         *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n         *  because it performs much better\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @param {Object} point\n         * @param {Number} point.x\n         * @param {Number} point.y\n         * @returns {Boolean}\n         */\n        intersects: function(point) {\n            var stage = this.getStage(),\n                bufferHitCanvas = stage.bufferHitCanvas,\n                p;\n\n            bufferHitCanvas.getContext().clear();\n            this.drawScene(bufferHitCanvas);\n            p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n            return p[3] > 0;\n        },\n        // extends Node.prototype.destroy\n        destroy: function() {\n            Konva.Node.prototype.destroy.call(this);\n            delete Konva.shapes[this.colorKey];\n            return this;\n        },\n        _useBufferCanvas: function(caching) {\n            return !caching && (this.perfectDrawEnabled() && (this.getAbsoluteOpacity() !== 1) && this.hasFill() && this.hasStroke() && this.getStage()) ||\n                   (this.perfectDrawEnabled() && this.hasShadow() && (this.getAbsoluteOpacity() !== 1) && this.hasFill() && this.hasStroke() && this.getStage());\n        },\n        /**\n         * return self rectangle (x, y, width, height) of shape.\n         * This method are not taken into account transformation and styles.\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Object} rect with {x, y, width, height} properties\n         * @example\n         *\n         * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n         * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n         *\n         */\n        getSelfRect: function() {\n            var size = this.getSize();\n            return {\n                x: this._centroid ? Math.round(-size.width / 2) : 0,\n                y: this._centroid ? Math.round(-size.height / 2) : 0,\n                width: size.width,\n                height: size.height\n            };\n        },\n        getClientRect: function(skipTransform) {\n            var fillRect = this.getSelfRect();\n\n            var strokeWidth = (this.hasStroke() && this.strokeWidth()) || 0;\n            var fillAndStrokeWidth = fillRect.width + strokeWidth;\n            var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\n            var shadowOffsetX = this.shadowOffsetX();\n            var shadowOffsetY = this.shadowOffsetY();\n\n            var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n            var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\n            var blurRadius = (this.hasShadow() && this.shadowBlur() || 0);\n\n            var width = preWidth + blurRadius * 2;\n            var height = preHeight + blurRadius * 2;\n\n            // if stroke, for example = 3\n            // we need to set x to 1.5, but after Math.round it will be 2\n            // as we have additional offset we need to increase width and height by 1 pixel\n            var roundingOffset = 0;\n            if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n                roundingOffset = 1;\n            }\n            var rect = {\n                width: width + roundingOffset,\n                height: height + roundingOffset,\n                x: -Math.round(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetX, 0) + fillRect.x,\n                y: -Math.round(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetY, 0) + fillRect.y\n            };\n            if (!skipTransform) {\n                return this._transformedRect(rect);\n            }\n            return rect;\n        },\n        drawScene: function(can, top, caching, skipBuffer) {\n            var layer = this.getLayer(),\n                canvas = can || layer.getCanvas(),\n                context = canvas.getContext(),\n                cachedCanvas = this._cache.canvas,\n                drawFunc = this.sceneFunc(),\n                hasShadow = this.hasShadow(),\n                hasStroke = this.hasStroke(),\n                stage, bufferCanvas, bufferContext;\n\n            if(!this.isVisible()) {\n                return this;\n            }\n            if (cachedCanvas) {\n                context.save();\n                layer._applyTransform(this, context, top);\n                this._drawCachedSceneCanvas(context);\n                context.restore();\n                return this;\n            }\n            if (!drawFunc) {\n                return this;\n            }\n            context.save();\n            // if buffer canvas is needed\n            if (this._useBufferCanvas(caching) && !skipBuffer) {\n                stage = this.getStage();\n                bufferCanvas = stage.bufferCanvas;\n                bufferContext = bufferCanvas.getContext();\n                bufferContext.clear();\n                bufferContext.save();\n                bufferContext._applyLineJoin(this);\n                // layer might be undefined if we are using cache before adding to layer\n                if (!caching) {\n                    if (layer) {\n                        layer._applyTransform(this, bufferContext, top);\n                    } else {\n                        var m = this.getAbsoluteTransform(top).getMatrix();\n                        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n                    }\n                }\n\n                drawFunc.call(this, bufferContext);\n                bufferContext.restore();\n\n                var ratio = bufferCanvas.pixelRatio;\n                if (hasShadow && !canvas.hitCanvas) {\n                        context.save();\n                        context._applyShadow(this);\n                        context._applyOpacity(this);\n                        context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n                        context.restore();\n                } else {\n                    context._applyOpacity(this);\n                    context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n                }\n            }\n            // if buffer canvas is not needed\n            else {\n                context._applyLineJoin(this);\n                // layer might be undefined if we are using cache before adding to layer\n                if (!caching) {\n                    if (layer) {\n                        layer._applyTransform(this, context, top);\n                    } else {\n                        var o = this.getAbsoluteTransform(top).getMatrix();\n                        context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                    }\n                }\n\n                if (hasShadow && hasStroke && !canvas.hitCanvas) {\n                    context.save();\n                    // apply shadow\n                    if (!caching) {\n                        context._applyOpacity(this);\n                    }\n                    context._applyShadow(this);\n                    drawFunc.call(this, context);\n                    context.restore();\n                    // if shape has stroke we need to redraw shape\n                    // otherwise we will see a shadow under stroke (and over fill)\n                    // but I think this is unexpected behavior\n                    if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n                        drawFunc.call(this, context);\n                    }\n                } else if (hasShadow && !canvas.hitCanvas) {\n                    context.save();\n                    if (!caching) {\n                        context._applyOpacity(this);\n                    }\n                    context._applyShadow(this);\n                    drawFunc.call(this, context);\n                    context.restore();\n                } else {\n                    if (!caching) {\n                        context._applyOpacity(this);\n                    }\n                    drawFunc.call(this, context);\n                }\n            }\n            context.restore();\n            return this;\n        },\n        drawHit: function(can, top, caching) {\n            var layer = this.getLayer(),\n                canvas = can || layer.hitCanvas,\n                context = canvas.getContext(),\n                drawFunc = this.hitFunc() || this.sceneFunc(),\n                cachedCanvas = this._cache.canvas,\n                cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n            if(!this.shouldDrawHit(canvas)) {\n                return this;\n            }\n            if (layer) {\n                layer.clearHitCache();\n            }\n            if (cachedHitCanvas) {\n                context.save();\n                layer._applyTransform(this, context, top);\n                this._drawCachedHitCanvas(context);\n                context.restore();\n                return this;\n            }\n            if (!drawFunc) {\n                return this;\n            }\n            context.save();\n            context._applyLineJoin(this);\n            if (!caching) {\n                if (layer) {\n                    layer._applyTransform(this, context, top);\n                } else {\n                    var o = this.getAbsoluteTransform(top).getMatrix();\n                    context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                }\n            }\n            drawFunc.call(this, context);\n            context.restore();\n            return this;\n        },\n        /**\n        * draw hit graph using the cached scene canvas\n        * @method\n        * @memberof Konva.Shape.prototype\n        * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n        *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n        *  The default is 0\n        * @returns {Konva.Shape}\n        * @example\n        * shape.cache();\n        * shape.drawHitFromCache();\n        */\n        drawHitFromCache: function(alphaThreshold) {\n            var threshold = alphaThreshold || 0,\n                cachedCanvas = this._cache.canvas,\n                sceneCanvas = this._getCachedSceneCanvas(),\n                hitCanvas = cachedCanvas.hit,\n                hitContext = hitCanvas.getContext(),\n                hitWidth = hitCanvas.getWidth(),\n                hitHeight = hitCanvas.getHeight(),\n                hitImageData, hitData, len, rgbColorKey, i, alpha;\n\n            hitContext.clear();\n            hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\n            try {\n                hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n                hitData = hitImageData.data;\n                len = hitData.length;\n                rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\n                // replace non transparent pixels with color key\n                for(i = 0; i < len; i += 4) {\n                    alpha = hitData[i + 3];\n                    if (alpha > threshold) {\n                        hitData[i] = rgbColorKey.r;\n                        hitData[i + 1] = rgbColorKey.g;\n                        hitData[i + 2] = rgbColorKey.b;\n                        hitData[i + 3] = 255;\n                    }\n                    else {\n                        hitData[i + 3] = 0;\n                    }\n                }\n                hitContext.putImageData(hitImageData, 0, 0);\n            }\n            catch(e) {\n                Konva.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n            }\n\n            return this;\n        }\n    });\n    Konva.Util.extend(Konva.Shape, Konva.Node);\n\n    // add getters and setters\n    Konva.Factory.addGetterSetter(Konva.Shape, 'stroke');\n\n    /**\n     * get/set stroke color\n     * @name stroke\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} color\n     * @returns {String}\n     * @example\n     * // get stroke color\n     * var stroke = shape.stroke();\n     *\n     * // set stroke color with color string\n     * shape.stroke('green');\n     *\n     * // set stroke color with hex\n     * shape.stroke('#00ff00');\n     *\n     * // set stroke color with rgb\n     * shape.stroke('rgb(0,255,0)');\n     *\n     * // set stroke color with rgba and make it 50% opaque\n     * shape.stroke('rgba(0,255,0,0.5');\n     */\n\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeRed', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeGreen', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeBlue', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'strokeAlpha', 1, Konva.Validators.alphaComponent);\n\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeWidth', 2);\n\n    /**\n     * get/set stroke width\n     * @name strokeWidth\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} strokeWidth\n     * @returns {Number}\n     * @example\n     * // get stroke width\n     * var strokeWidth = shape.strokeWidth();\n     *\n     * // set stroke width\n     * shape.strokeWidth();\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeHitEnabled', true);\n\n    /**\n     * get/set strokeHitEnabled property. Useful for performance optimization.\n     * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n     * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n     * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n     * Default value is true\n     * @name strokeHitEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} strokeHitEnabled\n     * @returns {Boolean}\n     * @example\n     * // get strokeHitEnabled\n     * var strokeHitEnabled = shape.strokeHitEnabled();\n     *\n     * // set strokeHitEnabled\n     * shape.strokeHitEnabled();\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'perfectDrawEnabled', true);\n\n    /**\n     * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to improve performance.\n     * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n     * Default value is true\n     * @name perfectDrawEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} perfectDrawEnabled\n     * @returns {Boolean}\n     * @example\n     * // get perfectDrawEnabled\n     * var perfectDrawEnabled = shape.perfectDrawEnabled();\n     *\n     * // set perfectDrawEnabled\n     * shape.perfectDrawEnabled();\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowForStrokeEnabled', true);\n\n    /**\n     * get/set shadowForStrokeEnabled. Useful for performance optimization.\n     * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n     * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n     * Default value is true\n     * @name shadowForStrokeEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} shadowForStrokeEnabled\n     * @returns {Boolean}\n     * @example\n     * // get shadowForStrokeEnabled\n     * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n     *\n     * // set shadowForStrokeEnabled\n     * shape.shadowForStrokeEnabled();\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\n    /**\n     * get/set line join.  Can be miter, round, or bevel.  The\n     *  default is miter\n     * @name lineJoin\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} lineJoin\n     * @returns {String}\n     * @example\n     * // get line join\n     * var lineJoin = shape.lineJoin();\n     *\n     * // set line join\n     * shape.lineJoin('round');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\n    /**\n     * get/set line cap.  Can be butt, round, or square\n     * @name lineCap\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} lineCap\n     * @returns {String}\n     * @example\n     * // get line cap\n     * var lineCap = shape.lineCap();\n     *\n     * // set line cap\n     * shape.lineCap('round');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\n    /**\n     * get/set scene draw function\n     * @name sceneFunc\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Function} drawFunc drawing function\n     * @returns {Function}\n     * @example\n     * // get scene draw function\n     * var sceneFunc = shape.sceneFunc();\n     *\n     * // set scene draw function\n     * shape.sceneFunc(function(context) {\n     *   context.beginPath();\n     *   context.rect(0, 0, this.width(), this.height());\n     *   context.closePath();\n     *   context.fillStrokeShape(this);\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\n    /**\n     * get/set hit draw function\n     * @name hitFunc\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Function} drawFunc drawing function\n     * @returns {Function}\n     * @example\n     * // get hit draw function\n     * var hitFunc = shape.hitFunc();\n     *\n     * // set hit draw function\n     * shape.hitFunc(function(context) {\n     *   context.beginPath();\n     *   context.rect(0, 0, this.width(), this.height());\n     *   context.closePath();\n     *   context.fillStrokeShape(this);\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\n    /**\n     * get/set dash array for stroke.\n     * @name dash\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Array} dash\n     * @returns {Array}\n     * @example\n     *  // apply dashed stroke that is 10px long and 5 pixels apart\n     *  line.dash([10, 5]);\n     *  // apply dashed stroke that is made up of alternating dashed\n     *  // lines that are 10px long and 20px apart, and dots that have\n     *  // a radius of 5px and are 20px apart\n     *  line.dash([10, 20, 0.001, 20]);\n     */\n\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowColor');\n\n    /**\n     * get/set shadow color\n     * @name shadowColor\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} color\n     * @returns {String}\n     * @example\n     * // get shadow color\n     * var shadow = shape.shadowColor();\n     *\n     * // set shadow color with color string\n     * shape.shadowColor('green');\n     *\n     * // set shadow color with hex\n     * shape.shadowColor('#00ff00');\n     *\n     * // set shadow color with rgb\n     * shape.shadowColor('rgb(0,255,0)');\n     *\n     * // set shadow color with rgba and make it 50% opaque\n     * shape.shadowColor('rgba(0,255,0,0.5');\n     */\n\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowRed', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowGreen', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowBlue', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'shadowAlpha', 1, Konva.Validators.alphaComponent);\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowBlur');\n\n    /**\n     * get/set shadow blur\n     * @name shadowBlur\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} blur\n     * @returns {Number}\n     * @example\n     * // get shadow blur\n     * var shadowBlur = shape.shadowBlur();\n     *\n     * // set shadow blur\n     * shape.shadowBlur(10);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOpacity');\n\n    /**\n     * get/set shadow opacity.  must be a value between 0 and 1\n     * @name shadowOpacity\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} opacity\n     * @returns {Number}\n     * @example\n     * // get shadow opacity\n     * var shadowOpacity = shape.shadowOpacity();\n     *\n     * // set shadow opacity\n     * shape.shadowOpacity(0.5);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', ['x', 'y']);\n\n    /**\n     * get/set shadow offset\n     * @name shadowOffset\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} offset\n     * @param {Number} offset.x\n     * @param {Number} offset.y\n     * @returns {Object}\n     * @example\n     * // get shadow offset\n     * var shadowOffset = shape.shadowOffset();\n     *\n     * // set shadow offset\n     * shape.shadowOffset({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetX', 0);\n\n     /**\n     * get/set shadow offset x\n     * @name shadowOffsetX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get shadow offset x\n     * var shadowOffsetX = shape.shadowOffsetX();\n     *\n     * // set shadow offset x\n     * shape.shadowOffsetX(5);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetY', 0);\n\n     /**\n     * get/set shadow offset y\n     * @name shadowOffsetY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get shadow offset y\n     * var shadowOffsetY = shape.shadowOffsetY();\n     *\n     * // set shadow offset y\n     * shape.shadowOffsetY(5);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\n    /**\n     * get/set fill pattern image\n     * @name fillPatternImage\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Image} image object\n     * @returns {Image}\n     * @example\n     * // get fill pattern image\n     * var fillPatternImage = shape.fillPatternImage();\n     *\n     * // set fill pattern image\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   shape.fillPatternImage(imageObj);\n     * };\n     * imageObj.src = 'path/to/image/jpg';\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fill');\n\n    /**\n     * get/set fill color\n     * @name fill\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} color\n     * @returns {String}\n     * @example\n     * // get fill color\n     * var fill = shape.fill();\n     *\n     * // set fill color with color string\n     * shape.fill('green');\n     *\n     * // set fill color with hex\n     * shape.fill('#00ff00');\n     *\n     * // set fill color with rgb\n     * shape.fill('rgb(0,255,0)');\n     *\n     * // set fill color with rgba and make it 50% opaque\n     * shape.fill('rgba(0,255,0,0.5');\n     *\n     * // shape without fill\n     * shape.fill(null);\n     */\n\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillRed', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillGreen', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillBlue', 0, Konva.Validators.RGBComponent);\n    Konva.Factory.addDeprecatedGetterSetter(Konva.Shape, 'fillAlpha', 1, Konva.Validators.alphaComponent);\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternX', 0);\n\n    /**\n     * get/set fill pattern x\n     * @name fillPatternX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill pattern x\n     * var fillPatternX = shape.fillPatternX();\n     * // set fill pattern x\n     * shape.fillPatternX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternY', 0);\n\n    /**\n     * get/set fill pattern y\n     * @name fillPatternY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill pattern y\n     * var fillPatternY = shape.fillPatternY();\n     * // set fill pattern y\n     * shape.fillPatternY(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\n    /**\n     * get/set fill linear gradient color stops\n     * @name fillLinearGradientColorStops\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Array} colorStops\n     * @returns {Array} colorStops\n     * @example\n     * // get fill linear gradient color stops\n     * var colorStops = shape.fillLinearGradientColorStops();\n     *\n     * // create a linear gradient that starts with red, changes to blue\n     * // halfway through, and then changes to green\n     * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientStartRadius', 0);\n\n    /**\n     * get/set fill radial gradient start radius\n     * @name fillRadialGradientStartRadius\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radial gradient start radius\n     * var startRadius = shape.fillRadialGradientStartRadius();\n     *\n     * // set radial gradient start radius\n     * shape.fillRadialGradientStartRadius(0);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\n    /**\n     * get/set fill radial gradient end radius\n     * @name fillRadialGradientEndRadius\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radial gradient end radius\n     * var endRadius = shape.fillRadialGradientEndRadius();\n     *\n     * // set radial gradient end radius\n     * shape.fillRadialGradientEndRadius(100);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\n    /**\n     * get/set fill radial gradient color stops\n     * @name fillRadialGradientColorStops\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} colorStops\n     * @returns {Array}\n     * @example\n     * // get fill radial gradient color stops\n     * var colorStops = shape.fillRadialGradientColorStops();\n     *\n     * // create a radial gradient that starts with red, changes to blue\n     * // halfway through, and then changes to green\n     * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\n    /**\n     * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n     * @name fillPatternRepeat\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} repeat\n     * @returns {String}\n     * @example\n     * // get fill pattern repeat\n     * var repeat = shape.fillPatternRepeat();\n     *\n     * // repeat pattern in x direction only\n     * shape.fillPatternRepeat('repeat-x');\n     *\n     * // do not repeat the pattern\n     * shape.fillPatternRepeat('no repeat');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\n    /**\n     * get/set fill enabled flag\n     * @name fillEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get fill enabled flag\n     * var fillEnabled = shape.fillEnabled();\n     *\n     * // disable fill\n     * shape.fillEnabled(false);\n     *\n     * // enable fill\n     * shape.fillEnabled(true);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\n    /**\n     * get/set stroke enabled flag\n     * @name strokeEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get stroke enabled flag\n     * var strokeEnabled = shape.strokeEnabled();\n     *\n     * // disable stroke\n     * shape.strokeEnabled(false);\n     *\n     * // enable stroke\n     * shape.strokeEnabled(true);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\n    /**\n     * get/set shadow enabled flag\n     * @name shadowEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get shadow enabled flag\n     * var shadowEnabled = shape.shadowEnabled();\n     *\n     * // disable shadow\n     * shape.shadowEnabled(false);\n     *\n     * // enable shadow\n     * shape.shadowEnabled(true);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\n    /**\n     * get/set dash enabled flag\n     * @name dashEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get dash enabled flag\n     * var dashEnabled = shape.dashEnabled();\n     *\n     * // disable dash\n     * shape.dashEnabled(false);\n     *\n     * // enable dash\n     * shape.dashEnabled(true);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\n    /**\n     * get/set strokeScale enabled flag\n     * @name strokeScaleEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get stroke scale enabled flag\n     * var strokeScaleEnabled = shape.strokeScaleEnabled();\n     *\n     * // disable stroke scale\n     * shape.strokeScaleEnabled(false);\n     *\n     * // enable stroke scale\n     * shape.strokeScaleEnabled(true);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\n    /**\n     * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n     *   This is handy if you want to toggle between different fill types.\n     * @name fillPriority\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} priority\n     * @returns {String}\n     * @example\n     * // get fill priority\n     * var fillPriority = shape.fillPriority();\n     *\n     * // set fill priority\n     * shape.fillPriority('linear-gradient');\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', ['x', 'y']);\n\n    /**\n     * get/set fill pattern offset\n     * @name fillPatternOffset\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} offset\n     * @param {Number} offset.x\n     * @param {Number} offset.y\n     * @returns {Object}\n     * @example\n     * // get fill pattern offset\n     * var patternOffset = shape.fillPatternOffset();\n     *\n     * // set fill pattern offset\n     * shape.fillPatternOffset({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetX', 0);\n    /**\n     * get/set fill pattern offset x\n     * @name fillPatternOffsetX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill pattern offset x\n     * var patternOffsetX = shape.fillPatternOffsetX();\n     *\n     * // set fill pattern offset x\n     * shape.fillPatternOffsetX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetY', 0);\n    /**\n     * get/set fill pattern offset y\n     * @name fillPatternOffsetY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill pattern offset y\n     * var patternOffsetY = shape.fillPatternOffsetY();\n     *\n     * // set fill pattern offset y\n     * shape.fillPatternOffsetY(10);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', ['x', 'y']);\n\n    /**\n     * get/set fill pattern scale\n     * @name fillPatternScale\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} scale\n     * @param {Number} scale.x\n     * @param {Number} scale.y\n     * @returns {Object}\n     * @example\n     * // get fill pattern scale\n     * var patternScale = shape.fillPatternScale();\n     *\n     * // set fill pattern scale\n     * shape.fillPatternScale({\n     *   x: 2\n     *   y: 2\n     * });\n     */\n\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleX', 1);\n    /**\n     * get/set fill pattern scale x\n     * @name fillPatternScaleX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill pattern scale x\n     * var patternScaleX = shape.fillPatternScaleX();\n     *\n     * // set fill pattern scale x\n     * shape.fillPatternScaleX(2);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleY', 1);\n    /**\n     * get/set fill pattern scale y\n     * @name fillPatternScaleY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill pattern scale y\n     * var patternScaleY = shape.fillPatternScaleY();\n     *\n     * // set fill pattern scale y\n     * shape.fillPatternScaleY(2);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillLinearGradientStartPoint', ['x', 'y']);\n\n    /**\n     * get/set fill linear gradient start point\n     * @name fillLinearGradientStartPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} startPoint\n     * @param {Number} startPoint.x\n     * @param {Number} startPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill linear gradient start point\n     * var startPoint = shape.fillLinearGradientStartPoint();\n     *\n     * // set fill linear gradient start point\n     * shape.fillLinearGradientStartPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientStartPointX', 0);\n    /**\n     * get/set fill linear gradient start point x\n     * @name fillLinearGradientStartPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient start point x\n     * var startPointX = shape.fillLinearGradientStartPointX();\n     *\n     * // set fill linear gradient start point x\n     * shape.fillLinearGradientStartPointX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientStartPointY', 0);\n    /**\n     * get/set fill linear gradient start point y\n     * @name fillLinearGradientStartPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient start point y\n     * var startPointY = shape.fillLinearGradientStartPointY();\n     *\n     * // set fill linear gradient start point y\n     * shape.fillLinearGradientStartPointY(20);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillLinearGradientEndPoint', ['x', 'y']);\n\n    /**\n     * get/set fill linear gradient end point\n     * @name fillLinearGradientEndPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} endPoint\n     * @param {Number} endPoint.x\n     * @param {Number} endPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill linear gradient end point\n     * var endPoint = shape.fillLinearGradientEndPoint();\n     *\n     * // set fill linear gradient end point\n     * shape.fillLinearGradientEndPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n    /**\n     * get/set fill linear gradient end point x\n     * @name fillLinearGradientEndPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient end point x\n     * var endPointX = shape.fillLinearGradientEndPointX();\n     *\n     * // set fill linear gradient end point x\n     * shape.fillLinearGradientEndPointX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n    /**\n     * get/set fill linear gradient end point y\n     * @name fillLinearGradientEndPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient end point y\n     * var endPointY = shape.fillLinearGradientEndPointY();\n     *\n     * // set fill linear gradient end point y\n     * shape.fillLinearGradientEndPointY(20);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillRadialGradientStartPoint', ['x', 'y']);\n\n    /**\n     * get/set fill radial gradient start point\n     * @name fillRadialGradientStartPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} startPoint\n     * @param {Number} startPoint.x\n     * @param {Number} startPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill radial gradient start point\n     * var startPoint = shape.fillRadialGradientStartPoint();\n     *\n     * // set fill radial gradient start point\n     * shape.fillRadialGradientStartPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientStartPointX', 0);\n    /**\n     * get/set fill radial gradient start point x\n     * @name fillRadialGradientStartPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient start point x\n     * var startPointX = shape.fillRadialGradientStartPointX();\n     *\n     * // set fill radial gradient start point x\n     * shape.fillRadialGradientStartPointX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientStartPointY', 0);\n    /**\n     * get/set fill radial gradient start point y\n     * @name fillRadialGradientStartPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient start point y\n     * var startPointY = shape.fillRadialGradientStartPointY();\n     *\n     * // set fill radial gradient start point y\n     * shape.fillRadialGradientStartPointY(20);\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillRadialGradientEndPoint', ['x', 'y']);\n\n    /**\n     * get/set fill radial gradient end point\n     * @name fillRadialGradientEndPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} endPoint\n     * @param {Number} endPoint.x\n     * @param {Number} endPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill radial gradient end point\n     * var endPoint = shape.fillRadialGradientEndPoint();\n     *\n     * // set fill radial gradient end point\n     * shape.fillRadialGradientEndPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n    /**\n     * get/set fill radial gradient end point x\n     * @name fillRadialGradientEndPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient end point x\n     * var endPointX = shape.fillRadialGradientEndPointX();\n     *\n     * // set fill radial gradient end point x\n     * shape.fillRadialGradientEndPointX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n    /**\n     * get/set fill radial gradient end point y\n     * @name fillRadialGradientEndPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient end point y\n     * var endPointY = shape.fillRadialGradientEndPointY();\n     *\n     * // set fill radial gradient end point y\n     * shape.fillRadialGradientEndPointY(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\n    /**\n     * get/set fill pattern rotation in degrees\n     * @name fillPatternRotation\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} rotation\n     * @returns {Konva.Shape}\n     * @example\n     * // get fill pattern rotation\n     * var patternRotation = shape.fillPatternRotation();\n     *\n     * // set fill pattern rotation\n     * shape.fillPatternRotation(20);\n     */\n\n\n    Konva.Factory.backCompat(Konva.Shape, {\n        dashArray: 'dash',\n        getDashArray: 'getDash',\n        setDashArray: 'getDash',\n\n        drawFunc: 'sceneFunc',\n        getDrawFunc: 'getSceneFunc',\n        setDrawFunc: 'setSceneFunc',\n\n        drawHitFunc: 'hitFunc',\n        getDrawHitFunc: 'getHitFunc',\n        setDrawHitFunc: 'setHitFunc'\n    });\n\n    Konva.Collection.mapMethods(Konva.Shape);\n})(Konva);\n\n(function() {\n    'use strict';\n    // CONSTANTS\n    var STAGE = 'Stage',\n        STRING = 'string',\n        PX = 'px',\n\n        MOUSEOUT = 'mouseout',\n        MOUSELEAVE = 'mouseleave',\n        MOUSEOVER = 'mouseover',\n        MOUSEENTER = 'mouseenter',\n        MOUSEMOVE = 'mousemove',\n        MOUSEDOWN = 'mousedown',\n        MOUSEUP = 'mouseup',\n        CLICK = 'click',\n        DBL_CLICK = 'dblclick',\n        TOUCHSTART = 'touchstart',\n        TOUCHEND = 'touchend',\n        TAP = 'tap',\n        DBL_TAP = 'dbltap',\n        TOUCHMOVE = 'touchmove',\n        DOMMOUSESCROLL = 'DOMMouseScroll',\n        MOUSEWHEEL = 'mousewheel',\n        WHEEL = 'wheel',\n\n        CONTENT_MOUSEOUT = 'contentMouseout',\n        CONTENT_MOUSEOVER = 'contentMouseover',\n        CONTENT_MOUSEMOVE = 'contentMousemove',\n        CONTENT_MOUSEDOWN = 'contentMousedown',\n        CONTENT_MOUSEUP = 'contentMouseup',\n        CONTENT_CLICK = 'contentClick',\n        CONTENT_DBL_CLICK = 'contentDblclick',\n        CONTENT_TOUCHSTART = 'contentTouchstart',\n        CONTENT_TOUCHEND = 'contentTouchend',\n        CONTENT_DBL_TAP = 'contentDbltap',\n        CONTENT_TAP = 'contentTap',\n        CONTENT_TOUCHMOVE = 'contentTouchmove',\n        CONTENT_WHEEL = 'contentWheel',\n\n        DIV = 'div',\n        RELATIVE = 'relative',\n        KONVA_CONTENT = 'konvajs-content',\n        SPACE = ' ',\n        UNDERSCORE = '_',\n        CONTAINER = 'container',\n        EMPTY_STRING = '',\n        EVENTS = [MOUSEDOWN, MOUSEMOVE, MOUSEUP, MOUSEOUT, TOUCHSTART, TOUCHMOVE, TOUCHEND, MOUSEOVER, DOMMOUSESCROLL, MOUSEWHEEL, WHEEL],\n\n        // cached variables\n        eventsLength = EVENTS.length;\n\n    function addEvent(ctx, eventName) {\n        ctx.content.addEventListener(eventName, function(evt) {\n            ctx[UNDERSCORE + eventName](evt);\n        }, false);\n    }\n\n    /**\n     * Stage constructor.  A stage is used to contain multiple layers\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {String|Element} config.container Container selector or DOM element\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var stage = new Konva.Stage({\n         *   width: 500,\n         *   height: 800,\n         *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n         * });\n     */\n    Konva.Stage = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Util.addMethods(Konva.Stage, {\n        ___init: function(config) {\n            this.nodeType = STAGE;\n            // call super constructor\n            Konva.Container.call(this, config);\n            this._id = Konva.idCounter++;\n            this._buildDOM();\n            this._bindContentEvents();\n            this._enableNestedTransforms = false;\n            Konva.stages.push(this);\n        },\n        _validateAdd: function(child) {\n            if (child.getType() !== 'Layer') {\n                Konva.Util.throw('You may only add layers to the stage.');\n            }\n        },\n        /**\n         * set container dom element which contains the stage wrapper div element\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {DomElement} container can pass in a dom element or id string\n         */\n        setContainer: function (container) {\n            if (typeof container === STRING) {\n                if (container.charAt(0) === '.') {\n                    var className = container.slice(1);\n                    container = Konva.document.getElementsByClassName(className)[0];\n                } else {\n                    var id;\n                    if (container.charAt(0) !== '#') {\n                        id = container;\n                    } else {\n                        id = container.slice(1);\n                    }\n                    container = Konva.document.getElementById(id);\n                }\n                if (!container) {\n                    throw 'Can not find container in document with id ' + id;\n                }\n            }\n            this._setAttr(CONTAINER, container);\n            return this;\n        },\n        shouldDrawHit: function() {\n            return true;\n        },\n        draw: function() {\n            Konva.Node.prototype.draw.call(this);\n            return this;\n        },\n        /**\n         * draw layer scene graphs\n         * @name draw\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n\n        /**\n         * draw layer hit graphs\n         * @name drawHit\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n\n        /**\n         * set height\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Number} height\n         */\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            this._resizeDOM();\n            return this;\n        },\n        /**\n         * set width\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Number} width\n         */\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            this._resizeDOM();\n            return this;\n        },\n        /**\n         * clear all layers\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n        clear: function() {\n            var layers = this.children,\n                len = layers.length,\n                n;\n\n            for(n = 0; n < len; n++) {\n                layers[n].clear();\n            }\n            return this;\n        },\n        clone: function(obj) {\n            if (!obj) {\n                obj = {};\n            }\n            obj.container = Konva.document.createElement(DIV);\n            return Konva.Container.prototype.clone.call(this, obj);\n        },\n        /**\n         * destroy stage\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n        destroy: function() {\n            var content = this.content;\n            Konva.Container.prototype.destroy.call(this);\n\n            if(content && Konva.Util._isInDocument(content)) {\n                this.getContainer().removeChild(content);\n            }\n            var index = Konva.stages.indexOf(this);\n            if (index > -1) {\n                Konva.stages.splice(index, 1);\n            }\n            return this;\n        },\n        /**\n         * get pointer position which can be a touch position or mouse position\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @returns {Object}\n         */\n        getPointerPosition: function() {\n            return this.pointerPos;\n        },\n        getStage: function() {\n            return this;\n        },\n        /**\n         * get stage content div element which has the\n         *  the class name \"konvajs-content\"\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n        getContent: function() {\n            return this.content;\n        },\n        /**\n         * Creates a composite data URL\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Object} config\n         * @param {Function} [config.callback] function executed when the composite has completed. Deprecated as method is sync now.\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         */\n        toDataURL: function(config) {\n            config = config || {};\n\n            var mimeType = config.mimeType || null,\n                quality = config.quality || null,\n                x = config.x || 0,\n                y = config.y || 0,\n                canvas = new Konva.SceneCanvas({\n                    width: config.width || this.getWidth(),\n                    height: config.height || this.getHeight(),\n                    pixelRatio: config.pixelRatio\n                }),\n                _context = canvas.getContext()._context,\n                layers = this.children;\n\n            if(x || y) {\n                _context.translate(-1 * x, -1 * y);\n            }\n\n\n            layers.each(function(layer) {\n                var width = layer.getCanvas().getWidth();\n                var height = layer.getCanvas().getHeight();\n                var ratio = layer.getCanvas().getPixelRatio();\n                _context.drawImage(layer.getCanvas()._canvas, 0, 0, width / ratio, height / ratio);\n            });\n            var src = canvas.toDataURL(mimeType, quality);\n\n            if (config.callback) {\n                config.callback(src);\n            }\n\n            return src;\n        },\n        /**\n         * converts stage into an image.\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Object} config\n         * @param {Function} config.callback function executed when the composite has completed\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         */\n        toImage: function(config) {\n            var cb = config.callback;\n\n            config.callback = function(dataUrl) {\n                Konva.Util._getImage(dataUrl, function(img) {\n                    cb(img);\n                });\n            };\n            this.toDataURL(config);\n        },\n        /**\n         * get visible intersection shape. This is the preferred\n         *  method for determining if a point intersects a shape or not\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @param {String} [selector]\n         * @returns {Konva.Node}\n         * @example\n         * var shape = stage.getIntersection({x: 50, y: 50});\n         * // or if you interested in shape parent:\n         * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n         */\n        getIntersection: function(pos, selector) {\n            var layers = this.getChildren(),\n                len = layers.length,\n                end = len - 1,\n                n, shape;\n\n            for(n = end; n >= 0; n--) {\n                shape = layers[n].getIntersection(pos, selector);\n                if (shape) {\n                    return shape;\n                }\n            }\n\n            return null;\n        },\n        _resizeDOM: function() {\n            if(this.content) {\n                var width = this.getWidth(),\n                    height = this.getHeight(),\n                    layers = this.getChildren(),\n                    len = layers.length,\n                    n, layer;\n\n                // set content dimensions\n                this.content.style.width = width + PX;\n                this.content.style.height = height + PX;\n\n                this.bufferCanvas.setSize(width, height);\n                this.bufferHitCanvas.setSize(width, height);\n\n                // set layer dimensions\n                for(n = 0; n < len; n++) {\n                    layer = layers[n];\n                    layer.setSize(width, height);\n                    layer.draw();\n                }\n            }\n        },\n        /**\n         * add layer or layers to stage\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {...Konva.Layer} layer\n         * @example\n         * stage.add(layer1, layer2, layer3);\n         */\n        add: function(layer) {\n            if (arguments.length > 1) {\n                for (var i = 0; i < arguments.length; i++) {\n                    this.add(arguments[i]);\n                }\n                return this;\n            }\n            Konva.Container.prototype.add.call(this, layer);\n            layer._setCanvasSize(this.width(), this.height());\n\n            // draw layer and append canvas to container\n            layer.draw();\n            this.content.appendChild(layer.canvas._canvas);\n\n            // chainable\n            return this;\n        },\n        getParent: function() {\n            return null;\n        },\n        getLayer: function() {\n            return null;\n        },\n        /**\n         * returns a {@link Konva.Collection} of layers\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n        getLayers: function() {\n            return this.getChildren();\n        },\n        _bindContentEvents: function() {\n            for (var n = 0; n < eventsLength; n++) {\n                addEvent(this, EVENTS[n]);\n            }\n        },\n        _mouseover: function(evt) {\n            if (!Konva.UA.mobile) {\n                this._setPointerPosition(evt);\n                this._fire(CONTENT_MOUSEOVER, {evt: evt});\n            }\n        },\n        _mouseout: function(evt) {\n            if (!Konva.UA.mobile) {\n                this._setPointerPosition(evt);\n                var targetShape = this.targetShape;\n\n                if(targetShape && !Konva.isDragging()) {\n                    targetShape._fireAndBubble(MOUSEOUT, {evt: evt});\n                    targetShape._fireAndBubble(MOUSELEAVE, {evt: evt});\n                    this.targetShape = null;\n                }\n                this.pointerPos = undefined;\n\n                this._fire(CONTENT_MOUSEOUT, {evt: evt});\n            }\n        },\n        _mousemove: function(evt) {\n            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n            if (Konva.UA.ieMobile) {\n                return this._touchmove(evt);\n            }\n            // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n            if ((typeof evt.movementX !== 'undefined' || typeof evt.movementY !== 'undefined') && evt.movementY === 0 && evt.movementX === 0) {\n                return null;\n            }\n            if (Konva.UA.mobile) {\n                return null;\n            }\n            this._setPointerPosition(evt);\n            var shape;\n\n            if (!Konva.isDragging()) {\n                shape = this.getIntersection(this.getPointerPosition());\n                if(shape && shape.isListening()) {\n                    if(!Konva.isDragging() && (!this.targetShape || this.targetShape._id !== shape._id)) {\n                        if(this.targetShape) {\n                            this.targetShape._fireAndBubble(MOUSEOUT, {evt: evt}, shape);\n                            this.targetShape._fireAndBubble(MOUSELEAVE, {evt: evt}, shape);\n                        }\n                        shape._fireAndBubble(MOUSEOVER, {evt: evt}, this.targetShape);\n                        shape._fireAndBubble(MOUSEENTER, {evt: evt}, this.targetShape);\n                        this.targetShape = shape;\n                    }\n                    else {\n                        shape._fireAndBubble(MOUSEMOVE, {evt: evt});\n                    }\n                }\n                /*\n                 * if no shape was detected, clear target shape and try\n                 * to run mouseout from previous target shape\n                 */\n                else {\n                    if(this.targetShape && !Konva.isDragging()) {\n                        this.targetShape._fireAndBubble(MOUSEOUT, {evt: evt});\n                        this.targetShape._fireAndBubble(MOUSELEAVE, {evt: evt});\n                        this.targetShape = null;\n                    }\n\n                }\n\n                // content event\n                this._fire(CONTENT_MOUSEMOVE, {evt: evt});\n            }\n\n            // always call preventDefault for desktop events because some browsers\n            // try to drag and drop the canvas element\n            if (evt.preventDefault) {\n                evt.preventDefault();\n            }\n        },\n        _mousedown: function(evt) {\n            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n            if (Konva.UA.ieMobile) {\n                return this._touchstart(evt);\n            }\n            if (!Konva.UA.mobile) {\n                this._setPointerPosition(evt);\n                var shape = this.getIntersection(this.getPointerPosition());\n\n                Konva.listenClickTap = true;\n\n                if (shape && shape.isListening()) {\n                    this.clickStartShape = shape;\n                    shape._fireAndBubble(MOUSEDOWN, {evt: evt});\n                }\n\n                // content event\n                this._fire(CONTENT_MOUSEDOWN, {evt: evt});\n            }\n\n            // always call preventDefault for desktop events because some browsers\n            // try to drag and drop the canvas element\n            if (evt.preventDefault) {\n                evt.preventDefault();\n            }\n        },\n        _mouseup: function(evt) {\n\n            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n            if (Konva.UA.ieMobile) {\n                return this._touchend(evt);\n            }\n            if (!Konva.UA.mobile) {\n                this._setPointerPosition(evt);\n                var shape = this.getIntersection(this.getPointerPosition()),\n                    clickStartShape = this.clickStartShape,\n                    fireDblClick = false,\n                    dd = Konva.DD;\n\n                if(Konva.inDblClickWindow) {\n                    fireDblClick = true;\n                    Konva.inDblClickWindow = false;\n                }\n                // don't set inDblClickWindow after dragging\n                else if (!dd || !dd.justDragged) {\n                    Konva.inDblClickWindow = true;\n                } else if (dd) {\n                    dd.justDragged = false;\n                }\n\n                setTimeout(function() {\n                    Konva.inDblClickWindow = false;\n                }, Konva.dblClickWindow);\n\n                if (shape && shape.isListening()) {\n                    shape._fireAndBubble(MOUSEUP, {evt: evt});\n\n                    // detect if click or double click occurred\n                    if(Konva.listenClickTap && clickStartShape && clickStartShape._id === shape._id) {\n                        shape._fireAndBubble(CLICK, {evt: evt});\n\n                        if(fireDblClick) {\n                            shape._fireAndBubble(DBL_CLICK, {evt: evt});\n                        }\n                    }\n                }\n                // content events\n                this._fire(CONTENT_MOUSEUP, {evt: evt});\n                if (Konva.listenClickTap) {\n                    this._fire(CONTENT_CLICK, {evt: evt});\n                    if(fireDblClick) {\n                        this._fire(CONTENT_DBL_CLICK, {evt: evt});\n                    }\n                }\n\n                Konva.listenClickTap = false;\n            }\n\n            // always call preventDefault for desktop events because some browsers\n            // try to drag and drop the canvas element\n            if (evt.preventDefault) {\n                evt.preventDefault();\n            }\n        },\n        _touchstart: function(evt) {\n            this._setPointerPosition(evt);\n            var shape = this.getIntersection(this.getPointerPosition());\n\n            Konva.listenClickTap = true;\n\n            if (shape && shape.isListening()) {\n                this.tapStartShape = shape;\n                shape._fireAndBubble(TOUCHSTART, {evt: evt});\n\n                // only call preventDefault if the shape is listening for events\n                if (shape.isListening() && shape.preventDefault() && evt.preventDefault) {\n                    evt.preventDefault();\n                }\n            }\n            // content event\n            this._fire(CONTENT_TOUCHSTART, {evt: evt});\n        },\n        _touchend: function(evt) {\n            this._setPointerPosition(evt);\n            var shape = this.getIntersection(this.getPointerPosition()),\n                fireDblClick = false;\n\n            if(Konva.inDblClickWindow) {\n                fireDblClick = true;\n                Konva.inDblClickWindow = false;\n            }\n            else {\n                Konva.inDblClickWindow = true;\n            }\n\n            setTimeout(function() {\n                Konva.inDblClickWindow = false;\n            }, Konva.dblClickWindow);\n\n            if (shape && shape.isListening()) {\n                shape._fireAndBubble(TOUCHEND, {evt: evt});\n\n                // detect if tap or double tap occurred\n                if(Konva.listenClickTap && this.tapStartShape && shape._id === this.tapStartShape._id) {\n                    shape._fireAndBubble(TAP, {evt: evt});\n\n                    if(fireDblClick) {\n                        shape._fireAndBubble(DBL_TAP, {evt: evt});\n                    }\n                }\n                // only call preventDefault if the shape is listening for events\n                if (shape.isListening() && shape.preventDefault() && evt.preventDefault) {\n                    evt.preventDefault();\n                }\n            }\n            // content events\n            this._fire(CONTENT_TOUCHEND, {evt: evt});\n            if (Konva.listenClickTap) {\n                this._fire(CONTENT_TAP, {evt: evt});\n                if(fireDblClick) {\n                    this._fire(CONTENT_DBL_TAP, {evt: evt});\n                }\n            }\n\n            Konva.listenClickTap = false;\n        },\n        _touchmove: function(evt) {\n            this._setPointerPosition(evt);\n            var dd = Konva.DD,\n                shape;\n            if (!Konva.isDragging()) {\n                shape = this.getIntersection(this.getPointerPosition());\n                if (shape && shape.isListening()) {\n                    shape._fireAndBubble(TOUCHMOVE, {evt: evt});\n                    // only call preventDefault if the shape is listening for events\n                    if (shape.isListening() && shape.preventDefault() && evt.preventDefault) {\n                        evt.preventDefault();\n                    }\n                }\n                this._fire(CONTENT_TOUCHMOVE, {evt: evt});\n            }\n            if(dd) {\n                if (Konva.isDragging() && Konva.DD.node.preventDefault()) {\n                    evt.preventDefault();\n                }\n            }\n        },\n        _DOMMouseScroll: function(evt) {\n            this._mousewheel(evt);\n        },\n        _mousewheel: function(evt) {\n            this._setPointerPosition(evt);\n            var shape = this.getIntersection(this.getPointerPosition());\n\n            if (shape && shape.isListening()) {\n                shape._fireAndBubble(WHEEL, {evt: evt});\n            }\n            this._fire(CONTENT_WHEEL, {evt: evt});\n        },\n        _wheel: function(evt) {\n            this._mousewheel(evt);\n        },\n        _setPointerPosition: function(evt) {\n            var contentPosition = this._getContentPosition(),\n                x = null,\n                y = null;\n            evt = evt ? evt : window.event;\n\n            // touch events\n            if(evt.touches !== undefined) {\n                // currently, only handle one finger\n                if (evt.touches.length > 0) {\n\n                    var touch = evt.touches[0];\n                    // get the information for finger #1\n                    x = touch.clientX - contentPosition.left;\n                    y = touch.clientY - contentPosition.top;\n                }\n            }\n            // mouse events\n            else {\n                x = evt.clientX - contentPosition.left;\n                y = evt.clientY - contentPosition.top;\n            }\n            if (x !== null && y !== null) {\n                this.pointerPos = {\n                    x: x,\n                    y: y\n                };\n            }\n        },\n        _getContentPosition: function() {\n            var rect = this.content.getBoundingClientRect ? this.content.getBoundingClientRect() : { top: 0, left: 0 };\n            return {\n                top: rect.top,\n                left: rect.left\n            };\n        },\n        _buildDOM: function() {\n            var container = this.getContainer();\n            if (!container) {\n                if (Konva.Util.isBrowser()) {\n                    throw 'Stage has no container. A container is required.';\n                } else {\n                    // automatically create element for jsdom in nodejs env\n                    container = Konva.document.createElement(DIV);\n                }\n            }\n            // clear content inside container\n            container.innerHTML = EMPTY_STRING;\n\n            // content\n            this.content = Konva.document.createElement(DIV);\n            this.content.style.position = RELATIVE;\n            this.content.className = KONVA_CONTENT;\n            this.content.setAttribute('role', 'presentation');\n            container.appendChild(this.content);\n\n            // the buffer canvas pixel ratio must be 1 because it is used as an\n            // intermediate canvas before copying the result onto a scene canvas.\n            // not setting it to 1 will result in an over compensation\n            this.bufferCanvas = new Konva.SceneCanvas();\n            this.bufferHitCanvas = new Konva.HitCanvas({pixelRatio: 1});\n\n            this._resizeDOM();\n        },\n        _onContent: function(typesStr, handler) {\n            var types = typesStr.split(SPACE),\n                len = types.length,\n                n, baseEvent;\n\n            for(n = 0; n < len; n++) {\n                baseEvent = types[n];\n                this.content.addEventListener(baseEvent, handler, false);\n            }\n        },\n        // currently cache function is now working for stage, because stage has no its own canvas element\n        // TODO: may be it is better to cache all children layers?\n        cache: function() {\n            Konva.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        },\n        clearCache: function() {\n        }\n    });\n    Konva.Util.extend(Konva.Stage, Konva.Container);\n\n    // add getters and setters\n    Konva.Factory.addGetter(Konva.Stage, 'container');\n    Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\n    /**\n     * get container DOM element\n     * @name container\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @returns {DomElement} container\n     * @example\n     * // get container\n     * var container = stage.container();\n     * // set container\n     * var container = document.createElement('div');\n     * body.appendChild(container);\n     * stage.container(container);\n     */\n\n})();\n\n(function() {\n    'use strict';\n    /**\n     * BaseLayer constructor.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.Layer();\n     */\n    Konva.BaseLayer = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Util.addMethods(Konva.BaseLayer, {\n        ___init: function(config) {\n            this.nodeType = 'Layer';\n            Konva.Container.call(this, config);\n        },\n        createPNGStream: function() {\n            return this.canvas._canvas.createPNGStream();\n        },\n        /**\n         * get layer canvas\n         * @method\n         * @memberof Konva.BaseLayer.prototype\n         */\n        getCanvas: function() {\n            return this.canvas;\n        },\n        /**\n         * get layer hit canvas\n         * @method\n         * @memberof Konva.BaseLayer.prototype\n         */\n        getHitCanvas: function() {\n            return this.hitCanvas;\n        },\n        /**\n         * get layer canvas context\n         * @method\n         * @memberof Konva.BaseLayer.prototype\n         */\n        getContext: function() {\n            return this.getCanvas().getContext();\n        },\n        /**\n         * clear scene and hit canvas contexts tied to the layer\n         * @method\n         * @memberof Konva.BaseLayer.prototype\n         * @param {Object} [bounds]\n         * @param {Number} [bounds.x]\n         * @param {Number} [bounds.y]\n         * @param {Number} [bounds.width]\n         * @param {Number} [bounds.height]\n         * @example\n         * layer.clear();\n         * layer.clear({\n         *   x : 0,\n         *   y : 0,\n         *   width : 100,\n         *   height : 100\n         * });\n         */\n        clear: function(bounds) {\n            this.getContext().clear(bounds);\n            return this;\n        },\n        clearHitCache: function() {\n            this._hitImageData = undefined;\n        },\n        // extend Node.prototype.setZIndex\n        setZIndex: function(index) {\n            Konva.Node.prototype.setZIndex.call(this, index);\n            var stage = this.getStage();\n            if(stage) {\n                stage.content.removeChild(this.getCanvas()._canvas);\n\n                if(index < stage.getChildren().length - 1) {\n                    stage.content.insertBefore(this.getCanvas()._canvas, stage.getChildren()[index + 1].getCanvas()._canvas);\n                }\n                else {\n                    stage.content.appendChild(this.getCanvas()._canvas);\n                }\n            }\n            return this;\n        },\n        // extend Node.prototype.moveToTop\n        moveToTop: function() {\n            Konva.Node.prototype.moveToTop.call(this);\n            var stage = this.getStage();\n            if(stage) {\n                stage.content.removeChild(this.getCanvas()._canvas);\n                stage.content.appendChild(this.getCanvas()._canvas);\n            }\n            return this;\n        },\n        // extend Node.prototype.moveUp\n        moveUp: function() {\n            var moved = Konva.Node.prototype.moveUp.call(this);\n            if (!moved){\n                return this;\n            }\n            var stage = this.getStage();\n            if(!stage) {\n                return this;\n            }\n            stage.content.removeChild(this.getCanvas()._canvas);\n\n            if(this.index < stage.getChildren().length - 1) {\n                stage.content.insertBefore(this.getCanvas()._canvas, stage.getChildren()[this.index + 1].getCanvas()._canvas);\n            } else {\n                stage.content.appendChild(this.getCanvas()._canvas);\n            }\n            return this;\n        },\n        // extend Node.prototype.moveDown\n        moveDown: function() {\n            if(Konva.Node.prototype.moveDown.call(this)) {\n                var stage = this.getStage();\n                if(stage) {\n                    var children = stage.getChildren();\n                    stage.content.removeChild(this.getCanvas()._canvas);\n                    stage.content.insertBefore(this.getCanvas()._canvas, children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return this;\n        },\n        // extend Node.prototype.moveToBottom\n        moveToBottom: function() {\n            if(Konva.Node.prototype.moveToBottom.call(this)) {\n                var stage = this.getStage();\n                if(stage) {\n                    var children = stage.getChildren();\n                    stage.content.removeChild(this.getCanvas()._canvas);\n                    stage.content.insertBefore(this.getCanvas()._canvas, children[1].getCanvas()._canvas);\n                }\n            }\n            return this;\n        },\n        getLayer: function() {\n            return this;\n        },\n        remove: function() {\n            var _canvas = this.getCanvas()._canvas;\n\n            Konva.Node.prototype.remove.call(this);\n\n            if(_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n                _canvas.parentNode.removeChild(_canvas);\n            }\n            return this;\n        },\n        getStage: function() {\n            return this.parent;\n        },\n        setSize: function(width, height) {\n            this.canvas.setSize(width, height);\n            return this;\n        },\n        /**\n         * get/set width of layer.getter return width of stage. setter doing nothing.\n         * if you want change width use `stage.width(value);`\n         * @name width\n         * @method\n         * @memberof Konva.BaseLayer.prototype\n         * @returns {Number}\n         * @example\n         * var width = layer.width();\n         */\n        getWidth: function() {\n            if (this.parent) {\n                return this.parent.getWidth();\n            }\n        },\n        setWidth: function() {\n            Konva.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n        },\n        /**\n         * get/set height of layer.getter return height of stage. setter doing nothing.\n         * if you want change height use `stage.height(value);`\n         * @name height\n         * @method\n         * @memberof Konva.BaseLayer.prototype\n         * @returns {Number}\n         * @example\n         * var height = layer.height();\n         */\n        getHeight: function() {\n            if (this.parent) {\n                return this.parent.getHeight();\n            }\n        },\n        setHeight: function() {\n            Konva.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n        },\n        // the apply transform method is handled by the Layer and FastLayer class\n        // because it is up to the layer to decide if an absolute or relative transform\n        // should be used\n        _applyTransform: function(shape, context, top) {\n            var m = shape.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n    });\n    Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\n    // add getters and setters\n    Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n    /**\n     * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n     *  before drawing\n     * @name clearBeforeDraw\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @param {Boolean} clearBeforeDraw\n     * @returns {Boolean}\n     * @example\n     * // get clearBeforeDraw flag\n     * var clearBeforeDraw = layer.clearBeforeDraw();\n     *\n     * // disable clear before draw\n     * layer.clearBeforeDraw(false);\n     *\n     * // enable clear before draw\n     * layer.clearBeforeDraw(true);\n     */\n\n    Konva.Collection.mapMethods(Konva.BaseLayer);\n})();\n\n(function() {\n    'use strict';\n    // constants\n    var HASH = '#',\n        BEFORE_DRAW = 'beforeDraw',\n        DRAW = 'draw',\n\n        /*\n         * 2 - 3 - 4\n         * |       |\n         * 1 - 0   5\n         *         |\n         * 8 - 7 - 6\n         */\n        INTERSECTION_OFFSETS = [\n            {x: 0, y: 0},  // 0\n            {x: -1, y: 0}, // 1\n            {x: -1, y: -1}, // 2\n            {x: 0, y: -1}, // 3\n            {x: 1, y: -1}, // 4\n            {x: 1, y: 0}, // 5\n            {x: 1, y: 1}, // 6\n            {x: 0, y: 1}, // 7\n            {x: -1, y: 1}  // 8\n        ],\n        INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\n    /**\n     * Layer constructor.  Layers are tied to their own canvas element and are used\n     * to contain groups or shapes.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.BaseLayer\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.Layer();\n     */\n    Konva.Layer = function(config) {\n        this.____init(config);\n    };\n\n    Konva.Util.addMethods(Konva.Layer, {\n        ____init: function(config) {\n            this.nodeType = 'Layer';\n            this.canvas = new Konva.SceneCanvas();\n            this.hitCanvas = new Konva.HitCanvas({\n                pixelRatio: 1\n            });\n            // call super constructor\n            Konva.BaseLayer.call(this, config);\n        },\n        _setCanvasSize: function(width, height) {\n            this.canvas.setSize(width, height);\n            this.hitCanvas.setSize(width, height);\n        },\n        _validateAdd: function(child) {\n            var type = child.getType();\n            if (type !== 'Group' && type !== 'Shape') {\n                Konva.Util.throw('You may only add groups and shapes to a layer.');\n            }\n        },\n        /**\n         * get visible intersection shape. This is the preferred\n         * method for determining if a point intersects a shape or not\n         * also you may pass optional selector parametr to return ancestor of intersected shape\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @param {String} [selector]\n         * @returns {Konva.Node}\n         * @example\n         * var shape = layer.getIntersection({x: 50, y: 50});\n         * // or if you interested in shape parent:\n         * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n         */\n        getIntersection: function(pos, selector) {\n            var obj, i, intersectionOffset, shape;\n\n            if(!this.hitGraphEnabled() || !this.isVisible()) {\n                return null;\n            }\n            // in some cases antialiased area may be bigger than 1px\n            // it is possible if we will cache node, then scale it a lot\n            // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n            var spiralSearchDistance = 1;\n            var continueSearch = false;\n            while (true) {\n                for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                    intersectionOffset = INTERSECTION_OFFSETS[i];\n                    obj = this._getIntersection({\n                        x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                        y: pos.y + intersectionOffset.y * spiralSearchDistance\n                    });\n                    shape = obj.shape;\n                    if (shape && selector) {\n                        return shape.findAncestor(selector, true);\n                    } else if (shape) {\n                        return shape;\n                    }\n                    // we should continue search if we found antialiased pixel\n                    // that means our node somewhere very close\n                    continueSearch = !!obj.antialiased;\n                    // stop search if found empty pixel\n                    if (!obj.antialiased) {\n                        break;\n                    }\n                }\n                // if no shape, and no antialiased pixel, we should end searching\n                if (continueSearch) {\n                    spiralSearchDistance += 1;\n                } else {\n                    return null;\n                }\n            }\n        },\n        _getImageData: function(x, y) {\n            var width = this.hitCanvas.width || 1,\n                height = this.hitCanvas.height || 1,\n                index = (Math.round(y) * width ) + Math.round(x);\n\n            if (!this._hitImageData) {\n                this._hitImageData = this.hitCanvas.context.getImageData(0, 0, width, height);\n            }\n\n            return [\n                this._hitImageData.data[4 * index + 0], // Red\n                this._hitImageData.data[4 * index + 1], // Green\n                this._hitImageData.data[4 * index + 2], // Blue\n                this._hitImageData.data[4 * index + 3] // Alpha\n            ];\n        },\n        _getIntersection: function(pos) {\n            var ratio = this.hitCanvas.pixelRatio;\n            var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data,\n                p3 = p[3],\n                colorKey, shape;\n            // fully opaque pixel\n            if(p3 === 255) {\n                colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n                shape = Konva.shapes[HASH + colorKey];\n                if (shape) {\n                    return {\n                        shape: shape\n                    };\n                }\n                return {\n                    antialiased: true\n                };\n            }\n            // antialiased pixel\n            else if(p3 > 0) {\n                return {\n                    antialiased: true\n                };\n            }\n            // empty pixel\n            return {};\n        },\n        drawScene: function(can, top) {\n            var layer = this.getLayer(),\n                canvas = can || (layer && layer.getCanvas());\n\n            this._fire(BEFORE_DRAW, {\n                node: this\n            });\n\n            if(this.getClearBeforeDraw()) {\n                canvas.getContext().clear();\n            }\n\n            Konva.Container.prototype.drawScene.call(this, canvas, top);\n\n            this._fire(DRAW, {\n                node: this\n            });\n\n            return this;\n        },\n        drawHit: function(can, top) {\n            var layer = this.getLayer(),\n                canvas = can || (layer && layer.hitCanvas);\n\n            if(layer && layer.getClearBeforeDraw()) {\n                layer.getHitCanvas().getContext().clear();\n            }\n\n            Konva.Container.prototype.drawHit.call(this, canvas, top);\n            this.imageData = null; // Clear imageData cache\n            return this;\n        },\n        clear: function(bounds) {\n            Konva.BaseLayer.prototype.clear.call(this, bounds);\n            this.getHitCanvas().getContext().clear(bounds);\n            this.imageData = null; // Clear getImageData cache\n            return this;\n        },\n        // extend Node.prototype.setVisible\n        setVisible: function(visible) {\n            Konva.Node.prototype.setVisible.call(this, visible);\n            if(visible) {\n                this.getCanvas()._canvas.style.display = 'block';\n                this.hitCanvas._canvas.style.display = 'block';\n            }\n            else {\n                this.getCanvas()._canvas.style.display = 'none';\n                this.hitCanvas._canvas.style.display = 'none';\n            }\n            return this;\n        },\n        /**\n         * enable hit graph\n         * @name enableHitGraph\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @returns {Layer}\n         */\n        enableHitGraph: function() {\n            this.setHitGraphEnabled(true);\n            return this;\n        },\n        /**\n         * disable hit graph\n         * @name disableHitGraph\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @returns {Layer}\n         */\n        disableHitGraph: function() {\n            this.setHitGraphEnabled(false);\n            return this;\n        },\n        setSize: function(width, height) {\n            Konva.BaseLayer.prototype.setSize.call(this, width, height);\n            this.hitCanvas.setSize(width, height);\n            return this;\n        }\n    });\n    Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\n    Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n    /**\n     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n     *  draw performance because the hit graph will not be redrawn each time the layer is\n     *  drawn.  This, however, also disables mouse/touch event detection\n     * @name hitGraphEnabled\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get hitGraphEnabled flag\n     * var hitGraphEnabled = layer.hitGraphEnabled();\n     *\n     * // disable hit graph\n     * layer.hitGraphEnabled(false);\n     *\n     * // enable hit graph\n     * layer.hitGraphEnabled(true);\n     */\n    Konva.Collection.mapMethods(Konva.Layer);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * FastLayer constructor. Layers are tied to their own canvas element and are used\n     * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n     * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n     * It renders about 2x faster than normal layers.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.BaseLayer\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Boolean} [config.visible]\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.FastLayer();\n     */\n    Konva.FastLayer = function(config) {\n        this.____init(config);\n    };\n\n    Konva.Util.addMethods(Konva.FastLayer, {\n        ____init: function(config) {\n            this.nodeType = 'Layer';\n            this.canvas = new Konva.SceneCanvas();\n            // call super constructor\n            Konva.BaseLayer.call(this, config);\n        },\n        _validateAdd: function(child) {\n            var type = child.getType();\n            if (type !== 'Shape') {\n                Konva.Util.throw('You may only add shapes to a fast layer.');\n            }\n        },\n        _setCanvasSize: function(width, height) {\n            this.canvas.setSize(width, height);\n        },\n        hitGraphEnabled: function() {\n            return false;\n        },\n        getIntersection: function() {\n            return null;\n        },\n        drawScene: function(can) {\n            var layer = this.getLayer(),\n                canvas = can || (layer && layer.getCanvas());\n\n            if(this.getClearBeforeDraw()) {\n                canvas.getContext().clear();\n            }\n\n            Konva.Container.prototype.drawScene.call(this, canvas);\n\n            return this;\n        },\n        draw: function() {\n            this.drawScene();\n            return this;\n        },\n        // extend Node.prototype.setVisible\n        setVisible: function(visible) {\n            Konva.Node.prototype.setVisible.call(this, visible);\n            if(visible) {\n                this.getCanvas()._canvas.style.display = 'block';\n            }\n            else {\n                this.getCanvas()._canvas.style.display = 'none';\n            }\n            return this;\n        }\n    });\n    Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\n    Konva.Collection.mapMethods(Konva.FastLayer);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Group constructor.  Groups are used to contain shapes or other groups.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var group = new Konva.Group();\n     */\n    Konva.Group = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Util.addMethods(Konva.Group, {\n        ___init: function(config) {\n            this.nodeType = 'Group';\n            // call super constructor\n            Konva.Container.call(this, config);\n        },\n        _validateAdd: function(child) {\n            var type = child.getType();\n            if (type !== 'Group' && type !== 'Shape') {\n                Konva.Util.throw('You may only add groups and shapes to groups.');\n            }\n        }\n    });\n    Konva.Util.extend(Konva.Group, Konva.Container);\n\n    Konva.Collection.mapMethods(Konva.Group);\n})();\n\n(function(Konva) {\n    'use strict';\n\n    var now = (function() {\n        if (Konva.global.performance && Konva.global.performance.now) {\n            return function() {\n                return Konva.global.performance.now();\n            };\n        }\n\n        return function() {\n            return new Date().getTime();\n        };\n    })();\n\n    function FRAF(callback) {\n        setTimeout(callback, 1000 / 60);\n    }\n\n    var RAF = (function(){\n        return Konva.global.requestAnimationFrame\n            || Konva.global.webkitRequestAnimationFrame\n            || Konva.global.mozRequestAnimationFrame\n            || Konva.global.oRequestAnimationFrame\n            || Konva.global.msRequestAnimationFrame\n            || FRAF;\n    })();\n\n\n\n    function requestAnimFrame() {\n        return RAF.apply(Konva.global, arguments);\n    }\n\n    /**\n     * Animation constructor.  A stage is used to contain multiple layers and handle\n     * @constructor\n     * @memberof Konva\n     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n     *  if you don't need to redraw layer/layers on some frames.\n     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n     *  Not specifying a node will result in no redraw.\n     * @example\n     * // move a node to the right at 50 pixels / second\n     * var velocity = 50;\n     *\n     * var anim = new Konva.Animation(function(frame) {\n     *   var dist = velocity * (frame.timeDiff / 1000);\n     *   node.move(dist, 0);\n     * }, layer);\n     *\n     * anim.start();\n     */\n    Konva.Animation = function(func, layers) {\n        var Anim = Konva.Animation;\n        this.func = func;\n        this.setLayers(layers);\n        this.id = Anim.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now()\n        };\n    };\n    /*\n     * Animation methods\n     */\n    Konva.Animation.prototype = {\n        /**\n         * set layers to be redrawn on each animation frame\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n         * @return {Konva.Animation} this\n         */\n        setLayers: function(layers) {\n            var lays = [];\n            // if passing in no layers\n            if (!layers) {\n                lays = [];\n            }\n            // if passing in an array of Layers\n            // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n            // the length property to check for both cases\n            else if (layers.length > 0) {\n                lays = layers;\n            }\n            // if passing in a Layer\n            else {\n                lays = [layers];\n            }\n\n            this.layers = lays;\n            return this;\n        },\n        /**\n         * get layers\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Array} Array of Konva.Layer\n         */\n        getLayers: function() {\n            return this.layers;\n        },\n        /**\n         * add layer.  Returns true if the layer was added, and false if it was not\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @param {Konva.Layer} layer to add\n         * @return {Bool} true if layer is added to animation, otherwise false\n         */\n        addLayer: function(layer) {\n            var layers = this.layers,\n                len = layers.length, n;\n\n            // don't add the layer if it already exists\n            for (n = 0; n < len; n++) {\n                if (layers[n]._id === layer._id){\n                    return false;\n                }\n            }\n\n            this.layers.push(layer);\n            return true;\n        },\n        /**\n         * determine if animation is running or not.  returns true or false\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Bool} is animation running?\n         */\n        isRunning: function() {\n            var a = Konva.Animation,\n                animations = a.animations,\n                len = animations.length,\n                n;\n\n            for (n = 0; n < len; n++) {\n                if (animations[n].id === this.id) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        /**\n         * start animation\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Konva.Animation} this\n         */\n        start: function() {\n            var Anim = Konva.Animation;\n            this.stop();\n            this.frame.timeDiff = 0;\n            this.frame.lastTime = now();\n            Anim._addAnimation(this);\n            return this;\n        },\n        /**\n         * stop animation\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Konva.Animation} this\n         */\n        stop: function() {\n            Konva.Animation._removeAnimation(this);\n            return this;\n        },\n        _updateFrameObject: function(time) {\n            this.frame.timeDiff = time - this.frame.lastTime;\n            this.frame.lastTime = time;\n            this.frame.time += this.frame.timeDiff;\n            this.frame.frameRate = 1000 / this.frame.timeDiff;\n        }\n    };\n    Konva.Animation.animations = [];\n    Konva.Animation.animIdCounter = 0;\n    Konva.Animation.animRunning = false;\n\n    Konva.Animation._addAnimation = function(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    };\n    Konva.Animation._removeAnimation = function(anim) {\n        var id = anim.id,\n            animations = this.animations,\n            len = animations.length,\n            n;\n\n        for(n = 0; n < len; n++) {\n            if(animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    };\n\n    Konva.Animation._runFrames = function() {\n        var layerHash = {},\n            animations = this.animations,\n            anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        /*\n         * loop through all animations and execute animation\n         *  function.  if the animation object has specified node,\n         *  we can add the node to the nodes hash to eliminate\n         *  drawing the same node multiple times.  The node property\n         *  can be the stage itself or a layer\n         */\n        /*\n         * WARNING: don't cache animations.length because it could change while\n         * the for loop is running, causing a JS error\n         */\n\n        for(n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n\n\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n\n            // if animation object has a function, execute it\n            if (func) {\n                // allow anim bypassing drawing\n                needRedraw = (func.call(anim, anim.frame) !== false);\n            } else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].draw();\n        }\n    };\n    Konva.Animation._animationLoop = function() {\n        var Anim = Konva.Animation;\n        if(Anim.animations.length) {\n            Anim._runFrames();\n            requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    };\n    Konva.Animation._handleAnimation = function() {\n        if(!this.animRunning) {\n            this.animRunning = true;\n            requestAnimFrame(this._animationLoop);\n        }\n    };\n\n    /**\n     * batch draw. this function will not do immediate draw\n     * but it will schedule drawing to next tick (requestAnimFrame)\n     * @method\n     * @return {Konva.Layer} this\n     * @memberof Konva.Base.prototype\n     */\n    Konva.BaseLayer.prototype.batchDraw = function() {\n        var that = this,\n            Anim = Konva.Animation;\n\n        if (!this.batchAnim) {\n            this.batchAnim = new Anim(function() {\n                // stop animation after first tick\n                that.batchAnim.stop();\n            }, this);\n        }\n\n        this.lastBatchDrawTime = now();\n\n        if (!this.batchAnim.isRunning()) {\n            this.batchAnim.start();\n        }\n        return this;\n    };\n\n    /**\n     * batch draw\n     * @method\n     * @return {Konva.Stage} this\n     * @memberof Konva.Stage.prototype\n     */\n    Konva.Stage.prototype.batchDraw = function() {\n        this.getChildren().each(function(layer) {\n            layer.batchDraw();\n        });\n        return this;\n    };\n})(Konva);\n\n(function() {\n    'use strict';\n    var blacklist = {\n        node: 1,\n        duration: 1,\n        easing: 1,\n        onFinish: 1,\n        yoyo: 1\n    },\n\n    PAUSED = 1,\n    PLAYING = 2,\n    REVERSING = 3,\n\n    idCounter = 0,\n    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\n    var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n        this.prop = prop;\n        this.propFunc = propFunc;\n        this.begin = begin;\n        this._pos = begin;\n        this.duration = duration;\n        this._change = 0;\n        this.prevPos = 0;\n        this.yoyo = yoyo;\n        this._time = 0;\n        this._position = 0;\n        this._startTime = 0;\n        this._finish = 0;\n        this.func = func;\n        this._change = finish - this.begin;\n        this.pause();\n    };\n    /*\n     * Tween methods\n     */\n    Tween.prototype = {\n        fire: function(str) {\n            var handler = this[str];\n            if (handler) {\n                handler();\n            }\n        },\n        setTime: function(t) {\n            if(t > this.duration) {\n                if(this.yoyo) {\n                    this._time = this.duration;\n                    this.reverse();\n                }\n                else {\n                    this.finish();\n                }\n            }\n            else if(t < 0) {\n                if(this.yoyo) {\n                    this._time = 0;\n                    this.play();\n                }\n                else {\n                    this.reset();\n                }\n            }\n            else {\n                this._time = t;\n                this.update();\n            }\n        },\n        getTime: function() {\n            return this._time;\n        },\n        setPosition: function(p) {\n            this.prevPos = this._pos;\n            this.propFunc(p);\n            this._pos = p;\n        },\n        getPosition: function(t) {\n            if(t === undefined) {\n                t = this._time;\n            }\n            return this.func(t, this.begin, this._change, this.duration);\n        },\n        play: function() {\n            this.state = PLAYING;\n            this._startTime = this.getTimer() - this._time;\n            this.onEnterFrame();\n            this.fire('onPlay');\n        },\n        reverse: function() {\n            this.state = REVERSING;\n            this._time = this.duration - this._time;\n            this._startTime = this.getTimer() - this._time;\n            this.onEnterFrame();\n            this.fire('onReverse');\n        },\n        seek: function(t) {\n            this.pause();\n            this._time = t;\n            this.update();\n            this.fire('onSeek');\n        },\n        reset: function() {\n            this.pause();\n            this._time = 0;\n            this.update();\n            this.fire('onReset');\n        },\n        finish: function() {\n            this.pause();\n            this._time = this.duration;\n            this.update();\n            this.fire('onFinish');\n        },\n        update: function() {\n            this.setPosition(this.getPosition(this._time));\n        },\n        onEnterFrame: function() {\n            var t = this.getTimer() - this._startTime;\n            if(this.state === PLAYING) {\n                this.setTime(t);\n            }\n            else if (this.state === REVERSING) {\n                this.setTime(this.duration - t);\n            }\n        },\n        pause: function() {\n            this.state = PAUSED;\n            this.fire('onPause');\n        },\n        getTimer: function() {\n            return new Date().getTime();\n        }\n    };\n\n    /**\n     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n     *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n     * @constructor\n     * @memberof Konva\n     * @example\n     * // instantiate new tween which fully rotates a node in 1 second\n     * var tween = new Konva.Tween({\n     *   node: node,\n     *   rotationDeg: 360,\n     *   duration: 1,\n     *   easing: Konva.Easings.EaseInOut\n     * });\n     *\n     * // play tween\n     * tween.play();\n     *\n     * // pause tween\n     * tween.pause();\n     */\n    Konva.Tween = function(config) {\n        var that = this,\n            node = config.node,\n            nodeId = node._id,\n            duration,\n            easing = config.easing || Konva.Easings.Linear,\n            yoyo = !!config.yoyo,\n            key;\n\n        if (typeof config.duration === 'undefined') {\n            duration = 1;\n        } else if (config.duration === 0) {  // zero is bad value for duration\n            duration = 0.001;\n        } else {\n            duration = config.duration;\n        }\n        this.node = node;\n        this._id = idCounter++;\n\n        var layers = node.getLayer() || ((node instanceof Konva.Stage) ? node.getLayers() : null);\n        if (!layers) {\n            Konva.Util.error(\n                'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n            );\n        }\n        this.anim = new Konva.Animation(function() {\n            that.tween.onEnterFrame();\n        }, layers);\n\n        this.tween = new Tween(key, function(i) {\n            that._tweenFunc(i);\n        }, easing, 0, 1, duration * 1000, yoyo);\n\n        this._addListeners();\n\n        // init attrs map\n        if (!Konva.Tween.attrs[nodeId]) {\n            Konva.Tween.attrs[nodeId] = {};\n        }\n        if (!Konva.Tween.attrs[nodeId][this._id]) {\n            Konva.Tween.attrs[nodeId][this._id] = {};\n        }\n        // init tweens map\n        if (!Konva.Tween.tweens[nodeId]) {\n            Konva.Tween.tweens[nodeId] = {};\n        }\n\n        for (key in config) {\n            if (blacklist[key] === undefined) {\n                this._addAttr(key, config[key]);\n            }\n        }\n\n        this.reset();\n\n        // callbacks\n        this.onFinish = config.onFinish;\n        this.onReset = config.onReset;\n    };\n\n    // start/diff object = attrs.nodeId.tweenId.attr\n    Konva.Tween.attrs = {};\n    // tweenId = tweens.nodeId.attr\n    Konva.Tween.tweens = {};\n\n    Konva.Tween.prototype = {\n        _addAttr: function(key, end) {\n            var node = this.node,\n                nodeId = node._id,\n                start, diff, tweenId, n, len, trueEnd, trueStart;\n\n            // remove conflict from tween map if it exists\n            tweenId = Konva.Tween.tweens[nodeId][key];\n\n            if (tweenId) {\n                delete Konva.Tween.attrs[nodeId][tweenId][key];\n            }\n\n            // add to tween map\n            start = node.getAttr(key);\n\n            if (Konva.Util._isArray(end)) {\n                diff = [];\n                len = Math.max(end.length, start.length);\n\n                if (key === 'points' && end.length !== start.length) {\n                    // before tweening points we need to make sure that start.length === end.length\n                    // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\n                    if (end.length > start.length) {\n                        // so in this case we will increase number of starting points\n                        trueStart = start;\n                        start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n                    } else {\n                        // in this case we will increase number of eding points\n                        trueEnd = end;\n                        end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n                    }\n                }\n\n                for (n = 0; n < len; n++) {\n                    diff.push((end[n]) - (start[n]));\n                }\n\n            } else if (colorAttrs.indexOf(key) !== -1) {\n                start = Konva.Util.colorToRGBA(start);\n                var endRGBA = Konva.Util.colorToRGBA(end);\n                diff = {\n                    r: endRGBA.r - start.r,\n                    g: endRGBA.g - start.g,\n                    b: endRGBA.b - start.b,\n                    a: endRGBA.a - start.a\n                };\n            } else {\n                diff = end - start;\n            }\n\n            Konva.Tween.attrs[nodeId][this._id][key] = {\n                start: start,\n                diff: diff,\n                end: end,\n                trueEnd: trueEnd,\n                trueStart: trueStart\n            };\n            Konva.Tween.tweens[nodeId][key] = this._id;\n        },\n        _tweenFunc: function(i) {\n            var node = this.node,\n                attrs = Konva.Tween.attrs[node._id][this._id],\n                key, attr, start, diff, newVal, n, len, end;\n\n            for (key in attrs) {\n                attr = attrs[key];\n                start = attr.start;\n                diff = attr.diff;\n                end = attr.end;\n\n                if (Konva.Util._isArray(start)) {\n                    newVal = [];\n                    len = Math.max(start.length, end.length);\n                    for (n = 0; n < len; n++) {\n                        newVal.push((start[n] || 0) + (diff[n] * i));\n                    }\n                } else if (colorAttrs.indexOf(key) !== -1) {\n                    newVal = 'rgba(' +\n                            Math.round(start.r + diff.r * i) + ',' +\n                            Math.round(start.g + diff.g * i) + ',' +\n                            Math.round(start.b + diff.b * i) + ',' +\n                            (start.a + diff.a * i) + ')';\n                } else {\n                    newVal = start + (diff * i);\n                }\n\n                node.setAttr(key, newVal);\n            }\n        },\n        _addListeners: function() {\n            var that = this;\n\n            // start listeners\n            this.tween.onPlay = function() {\n                that.anim.start();\n            };\n            this.tween.onReverse = function() {\n                that.anim.start();\n            };\n\n            // stop listeners\n            this.tween.onPause = function() {\n                that.anim.stop();\n            };\n            this.tween.onFinish = function() {\n                var node = that.node;\n\n                // after tweening  points of line we need to set original end\n                var attrs = Konva.Tween.attrs[node._id][that._id];\n                if (attrs.points && attrs.points.trueEnd) {\n                    node.points(attrs.points.trueEnd);\n                }\n\n                if (that.onFinish) {\n                    that.onFinish.call(that);\n                }\n            };\n            this.tween.onReset = function() {\n                var node = that.node;\n                // after tweening  points of line we need to set original start\n                var attrs = Konva.Tween.attrs[node._id][that._id];\n                if (attrs.points && attrs.points.trueStart) {\n                    node.points(attrs.points.trueStart);\n                }\n\n                if (that.onReset) {\n                    that.onReset();\n                }\n            };\n        },\n        /**\n         * play\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n        play: function() {\n            this.tween.play();\n            return this;\n        },\n        /**\n         * reverse\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n        reverse: function() {\n            this.tween.reverse();\n            return this;\n        },\n        /**\n         * reset\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n        reset: function() {\n            this.tween.reset();\n            return this;\n        },\n        /**\n         * seek\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @param {Integer} t time in seconds between 0 and the duration\n         * @returns {Tween}\n         */\n        seek: function(t) {\n            this.tween.seek(t * 1000);\n            return this;\n        },\n        /**\n         * pause\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n        pause: function() {\n            this.tween.pause();\n            return this;\n        },\n        /**\n         * finish\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n        finish: function() {\n            this.tween.finish();\n            return this;\n        },\n        /**\n         * destroy\n         * @method\n         * @memberof Konva.Tween.prototype\n         */\n        destroy: function() {\n            var nodeId = this.node._id,\n                thisId = this._id,\n                attrs = Konva.Tween.tweens[nodeId],\n                key;\n\n            this.pause();\n\n            for (key in attrs) {\n                delete Konva.Tween.tweens[nodeId][key];\n            }\n\n            delete Konva.Tween.attrs[nodeId][thisId];\n        }\n    };\n\n    /**\n     * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n     *\n     * @method Konva.Node#to\n     * @memberof Konva.Node\n     * @param {Object} [params] tween params\n     * @example\n     *\n     * circle.to({\n     *  x : 50,\n     *  duration : 0.5\n     * });\n     */\n    Konva.Node.prototype.to = function(params) {\n        var onFinish = params.onFinish;\n        params.node = this;\n        params.onFinish = function() {\n            this.destroy();\n            if (onFinish) {\n                onFinish();\n            }\n        };\n        var tween = new Konva.Tween(params);\n        tween.play();\n    };\n\n    /*\n    * These eases were ported from an Adobe Flash tweening library to JavaScript\n    * by Xaric\n    */\n\n    /**\n     * @namespace Easings\n     * @memberof Konva\n     */\n    Konva.Easings = {\n        /**\n        * back ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n        'BackEaseIn': function(t, b, c, d) {\n            var s = 1.70158;\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        /**\n        * back ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'BackEaseOut': function(t, b, c, d) {\n            var s = 1.70158;\n            return c * (( t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        /**\n        * back ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'BackEaseInOut': function(t, b, c, d) {\n            var s = 1.70158;\n            if((t /= d / 2) < 1) {\n                return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n            }\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n        },\n        /**\n        * elastic ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n        'ElasticEaseIn': function(t, b, c, d, a, p) {\n            // added s = 0\n            var s = 0;\n            if(t === 0) {\n                return b;\n            }\n            if((t /= d) === 1) {\n                return b + c;\n            }\n            if(!p) {\n                p = d * 0.3;\n            }\n            if(!a || a < Math.abs(c)) {\n                a = c;\n                s = p / 4;\n            }\n            else {\n                s = p / (2 * Math.PI) * Math.asin(c / a);\n            }\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n        },\n        /**\n        * elastic ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'ElasticEaseOut': function(t, b, c, d, a, p) {\n            // added s = 0\n            var s = 0;\n            if(t === 0) {\n                return b;\n            }\n            if((t /= d) === 1) {\n                return b + c;\n            }\n            if(!p) {\n                p = d * 0.3;\n            }\n            if(!a || a < Math.abs(c)) {\n                a = c;\n                s = p / 4;\n            }\n            else {\n                s = p / (2 * Math.PI) * Math.asin(c / a);\n            }\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\n        },\n        /**\n        * elastic ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'ElasticEaseInOut': function(t, b, c, d, a, p) {\n            // added s = 0\n            var s = 0;\n            if(t === 0) {\n                return b;\n            }\n            if((t /= d / 2) === 2) {\n                return b + c;\n            }\n            if(!p) {\n                p = d * (0.3 * 1.5);\n            }\n            if(!a || a < Math.abs(c)) {\n                a = c;\n                s = p / 4;\n            }\n            else {\n                s = p / (2 * Math.PI) * Math.asin(c / a);\n            }\n            if(t < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n            }\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n        },\n        /**\n        * bounce ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'BounceEaseOut': function(t, b, c, d) {\n            if((t /= d) < (1 / 2.75)) {\n                return c * (7.5625 * t * t) + b;\n            }\n            else if(t < (2 / 2.75)) {\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n            }\n            else if(t < (2.5 / 2.75)) {\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n            }\n            else {\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n            }\n        },\n        /**\n        * bounce ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n        'BounceEaseIn': function(t, b, c, d) {\n            return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n        },\n        /**\n        * bounce ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'BounceEaseInOut': function(t, b, c, d) {\n            if(t < d / 2) {\n                return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n            }\n            else {\n                return Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n            }\n        },\n        /**\n        * ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n        'EaseIn': function(t, b, c, d) {\n            return c * (t /= d) * t + b;\n        },\n        /**\n        * ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'EaseOut': function(t, b, c, d) {\n            return -c * (t /= d) * (t - 2) + b;\n        },\n        /**\n        * ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'EaseInOut': function(t, b, c, d) {\n            if((t /= d / 2) < 1) {\n                return c / 2 * t * t + b;\n            }\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        },\n        /**\n        * strong ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n        'StrongEaseIn': function(t, b, c, d) {\n            return c * (t /= d) * t * t * t * t + b;\n        },\n        /**\n        * strong ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'StrongEaseOut': function(t, b, c, d) {\n            return c * (( t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        /**\n        * strong ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n        'StrongEaseInOut': function(t, b, c, d) {\n            if((t /= d / 2) < 1) {\n                return c / 2 * t * t * t * t * t + b;\n            }\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        /**\n        * linear\n        * @function\n        * @memberof Konva.Easings\n        */\n        'Linear': function(t, b, c, d) {\n            return c * t / d + b;\n        }\n    };\n})();\n\n(function() {\n    'use strict';\n    Konva.DD = {\n        // properties\n        anim: new Konva.Animation(function() {\n            var b = this.dirty;\n            this.dirty = false;\n            return b;\n        }),\n        isDragging: false,\n        justDragged: false,\n        offset: {\n            x: 0,\n            y: 0\n        },\n        node: null,\n\n        // methods\n        _drag: function(evt) {\n            var dd = Konva.DD,\n                node = dd.node;\n\n            if(node) {\n               if(!dd.isDragging) {\n                    var pos = node.getStage().getPointerPosition();\n                    var dragDistance = node.dragDistance();\n                    var distance = Math.max(\n                        Math.abs(pos.x - dd.startPointerPos.x),\n                        Math.abs(pos.y - dd.startPointerPos.y)\n                    );\n                    if (distance < dragDistance) {\n                        return;\n                    }\n                }\n\n\n                node.getStage()._setPointerPosition(evt);\n                node._setDragPosition(evt);\n                if(!dd.isDragging) {\n                    dd.isDragging = true;\n                    node.fire('dragstart', {\n                        type: 'dragstart',\n                        target: node,\n                        evt: evt\n                    }, true);\n                }\n\n                // execute ondragmove if defined\n                node.fire('dragmove', {\n                    type: 'dragmove',\n                    target: node,\n                    evt: evt\n                }, true);\n            }\n        },\n        _endDragBefore: function(evt) {\n            var dd = Konva.DD,\n                node = dd.node,\n                layer;\n\n            if(node) {\n                layer = node.getLayer();\n                dd.anim.stop();\n\n                // only fire dragend event if the drag and drop\n                // operation actually started.\n                if(dd.isDragging) {\n                    dd.isDragging = false;\n                    dd.justDragged = true;\n                    Konva.listenClickTap = false;\n\n                    if (evt) {\n                        evt.dragEndNode = node;\n                    }\n                }\n\n                delete dd.node;\n\n                if (node.getLayer() || layer) {\n                  (layer || node).draw();\n                }\n\n            }\n        },\n        _endDragAfter: function(evt) {\n            evt = evt || {};\n            var dragEndNode = evt.dragEndNode;\n\n            if (evt && dragEndNode) {\n                dragEndNode.fire('dragend', {\n                    type: 'dragend',\n                    target: dragEndNode,\n                    evt: evt\n                }, true);\n            }\n        }\n    };\n\n    // Node extenders\n\n    /**\n     * initiate drag and drop\n     * @method\n     * @memberof Konva.Node.prototype\n     */\n    Konva.Node.prototype.startDrag = function() {\n        var dd = Konva.DD,\n            stage = this.getStage(),\n            layer = this.getLayer(),\n            pos = stage.getPointerPosition(),\n            ap = this.getAbsolutePosition();\n\n        if(pos) {\n            if (dd.node) {\n                dd.node.stopDrag();\n            }\n\n            dd.node = this;\n            dd.startPointerPos = pos;\n            dd.offset.x = pos.x - ap.x;\n            dd.offset.y = pos.y - ap.y;\n            dd.anim.setLayers(layer || this.getLayers());\n            dd.anim.start();\n\n            this._setDragPosition();\n        }\n    };\n\n    Konva.Node.prototype._setDragPosition = function(evt) {\n        var dd = Konva.DD,\n            pos = this.getStage().getPointerPosition(),\n            dbf = this.getDragBoundFunc();\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - dd.offset.x,\n            y: pos.y - dd.offset.y\n        };\n\n        if(dbf !== undefined) {\n            newNodePos = dbf.call(this, newNodePos, evt);\n        }\n        this.setAbsolutePosition(newNodePos);\n\n        if (!this._lastPos || this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            dd.anim.dirty = true;\n        }\n\n        this._lastPos = newNodePos;\n    };\n\n    /**\n     * stop drag and drop\n     * @method\n     * @memberof Konva.Node.prototype\n     */\n    Konva.Node.prototype.stopDrag = function() {\n        var dd = Konva.DD,\n            evt = {};\n        dd._endDragBefore(evt);\n        dd._endDragAfter(evt);\n    };\n\n    Konva.Node.prototype.setDraggable = function(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    };\n\n    var origDestroy = Konva.Node.prototype.destroy;\n\n    Konva.Node.prototype.destroy = function() {\n        var dd = Konva.DD;\n\n        // stop DD\n        if(dd.node && dd.node._id === this._id) {\n\n            this.stopDrag();\n        }\n\n        origDestroy.call(this);\n    };\n\n    /**\n     * determine if node is currently in drag and drop mode\n     * @method\n     * @memberof Konva.Node.prototype\n     */\n    Konva.Node.prototype.isDragging = function() {\n        var dd = Konva.DD;\n        return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n    };\n\n    Konva.Node.prototype._listenDrag = function() {\n        var that = this;\n\n        this._dragCleanup();\n\n        if (this.getClassName() === 'Stage') {\n            this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n                if(!Konva.DD.node) {\n                    that.startDrag(evt);\n                }\n            });\n        }\n        else {\n            this.on('mousedown.konva touchstart.konva', function(evt) {\n                // ignore right and middle buttons\n                if (evt.evt.button === 1 || evt.evt.button === 2) {\n                    return;\n                }\n                if(!Konva.DD.node) {\n                    that.startDrag(evt);\n                }\n            });\n        }\n\n        // listening is required for drag and drop\n        /*\n        this._listeningEnabled = true;\n        this._clearSelfAndAncestorCache('listeningEnabled');\n        */\n    };\n\n    Konva.Node.prototype._dragChange = function() {\n        if(this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            // remove event listeners\n            this._dragCleanup();\n\n            /*\n             * force drag and drop to end\n             * if this node is currently in\n             * drag and drop mode\n             */\n            var stage = this.getStage();\n            var dd = Konva.DD;\n            if(stage && dd.node && dd.node._id === this._id) {\n                dd.node.stopDrag();\n            }\n        }\n    };\n\n    Konva.Node.prototype._dragCleanup = function() {\n        if (this.getClassName() === 'Stage') {\n            this.off('contentMousedown.konva');\n            this.off('contentTouchstart.konva');\n        } else {\n            this.off('mousedown.konva');\n            this.off('touchstart.konva');\n        }\n    };\n\n    Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\n    /**\n     * get/set drag bound function.  This is used to override the default\n     *  drag and drop position\n     * @name dragBoundFunc\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Function} dragBoundFunc\n     * @returns {Function}\n     * @example\n     * // get drag bound function\n     * var dragBoundFunc = node.dragBoundFunc();\n     *\n     * // create vertical drag and drop\n     * node.dragBoundFunc(function(pos){\n     *   return {\n     *     x: this.getAbsolutePosition().x,\n     *     y: pos.y\n     *   };\n     * });\n     */\n\n    Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n    Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\n     /**\n     * get/set draggable flag\n     * @name draggable\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Boolean} draggable\n     * @returns {Boolean}\n     * @example\n     * // get draggable flag\n     * var draggable = node.draggable();\n     *\n     * // enable drag and drop\n     * node.draggable(true);\n     *\n     * // disable drag and drop\n     * node.draggable(false);\n     */\n\n    var html = Konva.document.documentElement;\n    html.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n    html.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\n    html.addEventListener('mousemove', Konva.DD._drag);\n    html.addEventListener('touchmove', Konva.DD._drag);\n\n    html.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n    html.addEventListener('touchend', Konva.DD._endDragAfter, false);\n\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Rect constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} [config.cornerRadius]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var rect = new Konva.Rect({\n     *   width: 100,\n     *   height: 50,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 5\n     * });\n     */\n    Konva.Rect = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Rect.prototype = {\n        ___init: function(config) {\n            Konva.Shape.call(this, config);\n            this.className = 'Rect';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var cornerRadius = this.getCornerRadius(),\n                width = this.getWidth(),\n                height = this.getHeight();\n\n            context.beginPath();\n\n            if(!cornerRadius) {\n                // simple rect - don't bother doing all that complicated maths stuff.\n                context.rect(0, 0, width, height);\n            } else {\n                // arcTo would be nicer, but browser support is patchy (Opera)\n                cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n                context.moveTo(cornerRadius, 0);\n                context.lineTo(width - cornerRadius, 0);\n                context.arc(width - cornerRadius, cornerRadius, cornerRadius, Math.PI * 3 / 2, 0, false);\n                context.lineTo(width, height - cornerRadius);\n                context.arc(width - cornerRadius, height - cornerRadius, cornerRadius, 0, Math.PI / 2, false);\n                context.lineTo(cornerRadius, height);\n                context.arc(cornerRadius, height - cornerRadius, cornerRadius, Math.PI / 2, Math.PI, false);\n                context.lineTo(0, cornerRadius);\n                context.arc(cornerRadius, cornerRadius, cornerRadius, Math.PI, Math.PI * 3 / 2, false);\n            }\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n    };\n\n    Konva.Util.extend(Konva.Rect, Konva.Shape);\n\n    Konva.Factory.addGetterSetter(Konva.Rect, 'cornerRadius', 0);\n    /**\n     * get/set corner radius\n     * @name cornerRadius\n     * @method\n     * @memberof Konva.Rect.prototype\n     * @param {Number} cornerRadius\n     * @returns {Number}\n     * @example\n     * // get corner radius\n     * var cornerRadius = rect.cornerRadius();\n     *\n     * // set corner radius\n     * rect.cornerRadius(10);\n     */\n\n    Konva.Collection.mapMethods(Konva.Rect);\n})();\n\n(function() {\n    'use strict';\n    // the 0.0001 offset fixes a bug in Chrome 27\n    var PIx2 = (Math.PI * 2) - 0.0001,\n        CIRCLE = 'Circle';\n\n    /**\n     * Circle constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // create circle\n     * var circle = new Konva.Circle({\n     *   radius: 40,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5\n     * });\n     */\n    Konva.Circle = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Circle.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = CIRCLE;\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            context.beginPath();\n            context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        // implements Shape.prototype.getWidth()\n        getWidth: function() {\n            return this.getRadius() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getRadius() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            if (this.radius() !== width / 2) {\n                this.setRadius(width / 2);\n            }\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            if (this.radius() !== height / 2) {\n                this.setRadius(height / 2);\n            }\n        }\n    };\n    Konva.Util.extend(Konva.Circle, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Circle, 'radius', 0);\n    Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\n    /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Circle.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radius\n     * var radius = circle.radius();\n     *\n     * // set radius\n     * circle.radius(10);\n     */\n\n    Konva.Collection.mapMethods(Konva.Circle);\n})();\n\n(function() {\n    'use strict';\n    // the 0.0001 offset fixes a bug in Chrome 27\n    var PIx2 = (Math.PI * 2) - 0.0001,\n        ELLIPSE = 'Ellipse';\n\n    /**\n     * Ellipse constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Object} config.radius defines x and y radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var ellipse = new Konva.Ellipse({\n     *   radius : {\n     *     x : 50,\n     *     y : 50\n     *   },\n     *   fill: 'red'\n     * });\n     */\n    Konva.Ellipse = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Ellipse.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = ELLIPSE;\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var rx = this.getRadiusX(),\n                ry = this.getRadiusY();\n\n            context.beginPath();\n            context.save();\n            if(rx !== ry) {\n                context.scale(1, ry / rx);\n            }\n            context.arc(0, 0, rx, 0, PIx2, false);\n            context.restore();\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        // implements Shape.prototype.getWidth()\n        getWidth: function() {\n            return this.getRadiusX() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getRadiusY() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            this.setRadius({\n                x: width / 2\n            });\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            this.setRadius({\n                y: height / 2\n            });\n        }\n    };\n    Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\n    /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Object} radius\n     * @param {Number} radius.x\n     * @param {Number} radius.y\n     * @returns {Object}\n     * @example\n     * // get radius\n     * var radius = ellipse.radius();\n     *\n     * // set radius\n     * ellipse.radius({\n     *   x: 200,\n     *   y: 100\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusX', 0);\n    /**\n     * get/set radius x\n     * @name radiusX\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get radius x\n     * var radiusX = ellipse.radiusX();\n     *\n     * // set radius x\n     * ellipse.radiusX(200);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusY', 0);\n    /**\n     * get/set radius y\n     * @name radiusY\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get radius y\n     * var radiusY = ellipse.radiusY();\n     *\n     * // set radius y\n     * ellipse.radiusY(200);\n     */\n\n    Konva.Collection.mapMethods(Konva.Ellipse);\n\n})();\n\n(function() {\n    'use strict';\n    // the 0.0001 offset fixes a bug in Chrome 27\n    var PIx2 = (Math.PI * 2) - 0.0001;\n    /**\n     * Ring constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var ring = new Konva.Ring({\n     *   innerRadius: 40,\n     *   outerRadius: 80,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 5\n     * });\n     */\n    Konva.Ring = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Ring.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Ring';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            context.beginPath();\n            context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n            context.moveTo(this.getOuterRadius(), 0);\n            context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        // implements Shape.prototype.getWidth()\n        getWidth: function() {\n            return this.getOuterRadius() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getOuterRadius() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            if (this.outerRadius() !== width / 2) {\n                this.setOuterRadius(width / 2);\n            }\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            if (this.outerRadius() !== height / 2) {\n                this.setOuterRadius(height / 2);\n            }\n        },\n        setOuterRadius: function(val) {\n            this._setAttr('outerRadius', val);\n            this.setWidth(val * 2);\n            this.setHeight(val * 2);\n        }\n    };\n    Konva.Util.extend(Konva.Ring, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Ring, 'innerRadius', 0);\n\n    /**\n     * get/set innerRadius\n     * @name innerRadius\n     * @method\n     * @memberof Konva.Ring.prototype\n     * @param {Number} innerRadius\n     * @returns {Number}\n     * @example\n     * // get inner radius\n     * var innerRadius = ring.innerRadius();\n     *\n     * // set inner radius\n     * ring.innerRadius(20);\n     */\n    Konva.Factory.addGetter(Konva.Ring, 'outerRadius', 0);\n    Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\n    /**\n     * get/set outerRadius\n     * @name outerRadius\n     * @method\n     * @memberof Konva.Ring.prototype\n     * @param {Number} outerRadius\n     * @returns {Number}\n     * @example\n     * // get outer radius\n     * var outerRadius = ring.outerRadius();\n     *\n     * // set outer radius\n     * ring.outerRadius(20);\n     */\n\n    Konva.Collection.mapMethods(Konva.Ring);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Wedge constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.angle in degrees\n     * @param {Number} config.radius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // draw a wedge that's pointing downwards\n     * var wedge = new Konva.Wedge({\n     *   radius: 40,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5,\n     *   angleDeg: 60,\n     *   rotationDeg: -120\n     * });\n     */\n    Konva.Wedge = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Wedge.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Wedge';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            context.beginPath();\n            context.arc(0, 0, this.getRadius(), 0, Konva.getAngle(this.getAngle()), this.getClockwise());\n            context.lineTo(0, 0);\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        // implements Shape.prototype.getWidth()\n        getWidth: function() {\n            return this.getRadius() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getRadius() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            if (this.radius() !== width / 2) {\n                this.setRadius(width / 2);\n            }\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            if (this.radius() !== height / 2) {\n                this.setRadius(height / 2);\n            }\n        }\n    };\n    Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Wedge, 'radius', 0);\n\n    /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radius\n     * var radius = wedge.radius();\n     *\n     * // set radius\n     * wedge.radius(10);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Wedge, 'angle', 0);\n\n    /**\n     * get/set angle in degrees\n     * @name angle\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} angle\n     * @returns {Number}\n     * @example\n     * // get angle\n     * var angle = wedge.angle();\n     *\n     * // set angle\n     * wedge.angle(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\n    /**\n     * get/set clockwise flag\n     * @name clockwise\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} clockwise\n     * @returns {Number}\n     * @example\n     * // get clockwise flag\n     * var clockwise = wedge.clockwise();\n     *\n     * // draw wedge counter-clockwise\n     * wedge.clockwise(false);\n     *\n     * // draw wedge clockwise\n     * wedge.clockwise(true);\n     */\n\n    Konva.Factory.backCompat(Konva.Wedge, {\n        angleDeg: 'angle',\n        getAngleDeg: 'getAngle',\n        setAngleDeg: 'setAngle'\n    });\n\n    Konva.Collection.mapMethods(Konva.Wedge);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Arc constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.angle in degrees\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // draw a Arc that's pointing downwards\n     * var arc = new Konva.Arc({\n     *   innerRadius: 40,\n     *   outerRadius: 80,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5,\n     *   angle: 60,\n     *   rotationDeg: -120\n     * });\n     */\n    Konva.Arc = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Arc.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Arc';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var angle = Konva.getAngle(this.angle()),\n                clockwise = this.clockwise();\n\n            context.beginPath();\n            context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n            context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        // implements Shape.prototype.getWidth()\n        getWidth: function() {\n            return this.getOuterRadius() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getOuterRadius() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            if (this.getOuterRadius() !== width / 2) {\n                this.setOuterRadius(width / 2);\n            }\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            if (this.getOuterRadius() !== height / 2) {\n                this.setOuterRadius(height / 2);\n            }\n        }\n    };\n    Konva.Util.extend(Konva.Arc, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Arc, 'innerRadius', 0);\n\n    /**\n     * get/set innerRadius\n     * @name innerRadius\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} innerRadius\n     * @returns {Number}\n     * @example\n     * // get inner radius\n     * var innerRadius = arc.innerRadius();\n     *\n     * // set inner radius\n     * arc.innerRadius(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Arc, 'outerRadius', 0);\n\n    /**\n     * get/set outerRadius\n     * @name outerRadius\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} outerRadius\n     * @returns {Number}\n     * @example\n     * // get outer radius\n     * var outerRadius = arc.outerRadius();\n     *\n     * // set outer radius\n     * arc.outerRadius(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Arc, 'angle', 0);\n\n    /**\n     * get/set angle in degrees\n     * @name angle\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} angle\n     * @returns {Number}\n     * @example\n     * // get angle\n     * var angle = arc.angle();\n     *\n     * // set angle\n     * arc.angle(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\n    /**\n     * get/set clockwise flag\n     * @name clockwise\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Boolean} clockwise\n     * @returns {Boolean}\n     * @example\n     * // get clockwise flag\n     * var clockwise = arc.clockwise();\n     *\n     * // draw arc counter-clockwise\n     * arc.clockwise(false);\n     *\n     * // draw arc clockwise\n     * arc.clockwise(true);\n     */\n\n    Konva.Collection.mapMethods(Konva.Arc);\n})();\n\n(function() {\n    'use strict';\n    // CONSTANTS\n    var IMAGE = 'Image';\n\n    /**\n     * Image constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Image} config.image\n     * @param {Object} [config.crop]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   var image = new Konva.Image({\n     *     x: 200,\n     *     y: 50,\n     *     image: imageObj,\n     *     width: 100,\n     *     height: 100\n     *   });\n     * };\n     * imageObj.src = '/path/to/image.jpg'\n     */\n    Konva.Image = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Image.prototype = {\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = IMAGE;\n            this.sceneFunc(this._sceneFunc);\n            this.hitFunc(this._hitFunc);\n        },\n        _useBufferCanvas: function() {\n            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasStroke() && this.getStage();\n        },\n        _sceneFunc: function(context) {\n            var width = this.getWidth(),\n                height = this.getHeight(),\n                image = this.getImage(),\n                cropWidth, cropHeight, params;\n\n            if (image) {\n                cropWidth = this.getCropWidth();\n                cropHeight = this.getCropHeight();\n                if (cropWidth && cropHeight) {\n                    params = [image, this.getCropX(), this.getCropY(), cropWidth, cropHeight, 0, 0, width, height];\n                } else {\n                    params = [image, 0, 0, width, height];\n                }\n            }\n\n            if (this.hasFill() || this.hasStroke()) {\n                context.beginPath();\n                context.rect(0, 0, width, height);\n                context.closePath();\n                context.fillStrokeShape(this);\n            }\n\n            if (image) {\n                context.drawImage.apply(context, params);\n            }\n        },\n        _hitFunc: function(context) {\n            var width = this.getWidth(),\n                height = this.getHeight();\n\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        getWidth: function() {\n            var image = this.getImage();\n            return this.attrs.width || (image ? image.width : 0);\n        },\n        getHeight: function() {\n            var image = this.getImage();\n            return this.attrs.height || (image ? image.height : 0);\n        }\n    };\n    Konva.Util.extend(Konva.Image, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\n    /**\n     * set image\n     * @name setImage\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Image} image\n     */\n\n    /**\n     * get image\n     * @name getImage\n     * @method\n     * @memberof Konva.Image.prototype\n     * @returns {Image}\n     */\n\n    Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', ['x', 'y', 'width', 'height']);\n    /**\n     * get/set crop\n     * @method\n     * @name crop\n     * @memberof Konva.Image.prototype\n     * @param {Object} crop\n     * @param {Number} crop.x\n     * @param {Number} crop.y\n     * @param {Number} crop.width\n     * @param {Number} crop.height\n     * @returns {Object}\n     * @example\n     * // get crop\n     * var crop = image.crop();\n     *\n     * // set crop\n     * image.crop({\n     *   x: 20,\n     *   y: 20,\n     *   width: 20,\n     *   height: 20\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Image, 'cropX', 0);\n    /**\n     * get/set crop x\n     * @method\n     * @name cropX\n     * @memberof Konva.Image.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get crop x\n     * var cropX = image.cropX();\n     *\n     * // set crop x\n     * image.cropX(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Image, 'cropY', 0);\n    /**\n     * get/set crop y\n     * @name cropY\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get crop y\n     * var cropY = image.cropY();\n     *\n     * // set crop y\n     * image.cropY(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Image, 'cropWidth', 0);\n    /**\n     * get/set crop width\n     * @name cropWidth\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get crop width\n     * var cropWidth = image.cropWidth();\n     *\n     * // set crop width\n     * image.cropWidth(20);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Image, 'cropHeight', 0);\n    /**\n     * get/set crop height\n     * @name cropHeight\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get crop height\n     * var cropHeight = image.cropHeight();\n     *\n     * // set crop height\n     * image.cropHeight(20);\n     */\n\n    Konva.Collection.mapMethods(Konva.Image);\n\n    /**\n     * load image from given url and create `Konva.Image` instance\n     * @method\n     * @memberof Konva.Image\n     * @param {String} url image source\n     * @param {Function} callback with Konva.Image instance as first argument\n     * @example\n     *  Konva.Image.fromURL(imageURL, function(image){\n     *    // image is Konva.Image instance\n     *    layer.add(image);\n     *    layer.draw();\n     *  });\n     */\n    Konva.Image.fromURL = function(url, callback) {\n        var img = new Image();\n        img.onload = function() {\n          var image = new Konva.Image({\n            image: img\n          });\n          callback(image);\n        };\n        img.src = url;\n    };\n})();\n\n/*eslint-disable max-depth */\n(function() {\n    'use strict';\n    // constants\n    var AUTO = 'auto',\n        //CANVAS = 'canvas',\n        CENTER = 'center',\n        CHANGE_KONVA = 'Change.konva',\n        CONTEXT_2D = '2d',\n        DASH = '-',\n        EMPTY_STRING = '',\n        LEFT = 'left',\n        TEXT = 'text',\n        TEXT_UPPER = 'Text',\n        MIDDLE = 'middle',\n        NORMAL = 'normal',\n        PX_SPACE = 'px ',\n        SPACE = ' ',\n        RIGHT = 'right',\n        WORD = 'word',\n        CHAR = 'char',\n        NONE = 'none',\n        ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'fontVariant', 'padding', 'align', 'lineHeight', 'text', 'width', 'height', 'wrap'],\n\n        // cached variables\n        attrChangeListLen = ATTR_CHANGE_LIST.length,\n        dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n\n    /**\n     * Text constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} [config.fontFamily] default is Arial\n     * @param {Number} [config.fontSize] in pixels.  Default is 12\n     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n     * @param {String} config.text\n     * @param {String} [config.align] can be left, center, or right\n     * @param {Number} [config.padding]\n     * @param {Number} [config.lineHeight] default is 1\n     * @param {String} [config.wrap] can be word, char, or none. Default is word\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var text = new Konva.Text({\n     *   x: 10,\n     *   y: 15,\n     *   text: 'Simple Text',\n     *   fontSize: 30,\n     *   fontFamily: 'Calibri',\n     *   fill: 'green'\n     * });\n     */\n    Konva.Text = function(config) {\n        this.___init(config);\n    };\n    function _fillFunc(context) {\n        context.fillText(this.partialText, 0, 0);\n    }\n    function _strokeFunc(context) {\n        context.strokeText(this.partialText, 0, 0);\n    }\n\n    Konva.Text.prototype = {\n        ___init: function(config) {\n            config = config || {};\n\n            // set default color to black\n            if (!config.fillLinearGradientColorStops && !config.fillRadialGradientColorStops) {\n                config.fill = config.fill || 'black';\n            }\n            //\n            // if (config.width === undefined) {\n            //     config.width = AUTO;\n            // }\n            // if (config.height === undefined) {\n            //     config.height = AUTO;\n            // }\n\n            // call super constructor\n            Konva.Shape.call(this, config);\n\n            this._fillFunc = _fillFunc;\n            this._strokeFunc = _strokeFunc;\n            this.className = TEXT_UPPER;\n\n            // update text data for certain attr changes\n            for(var n = 0; n < attrChangeListLen; n++) {\n                this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n            }\n\n            this._setTextData();\n            this.sceneFunc(this._sceneFunc);\n            this.hitFunc(this._hitFunc);\n        },\n        _sceneFunc: function(context) {\n            var p = this.getPadding(),\n                textHeight = this.getTextHeight(),\n                lineHeightPx = this.getLineHeight() * textHeight,\n                textArr = this.textArr,\n                textArrLen = textArr.length,\n                totalWidth = this.getWidth(),\n                n;\n\n            context.setAttr('font', this._getContextFont());\n\n            context.setAttr('textBaseline', MIDDLE);\n            context.setAttr('textAlign', LEFT);\n            context.save();\n            if (p) {\n                context.translate(p, 0);\n                context.translate(0, p + textHeight / 2);\n            } else {\n                context.translate(0, textHeight / 2);\n            }\n\n\n            // draw text lines\n            for(n = 0; n < textArrLen; n++) {\n                var obj = textArr[n],\n                    text = obj.text,\n                    width = obj.width;\n\n                // horizontal alignment\n                context.save();\n                if(this.getAlign() === RIGHT) {\n                    context.translate(totalWidth - width - p * 2, 0);\n                }\n                else if(this.getAlign() === CENTER) {\n                    context.translate((totalWidth - width - p * 2) / 2, 0);\n                }\n\n                this.partialText = text;\n\n                context.fillStrokeShape(this);\n                context.restore();\n                context.translate(0, lineHeightPx);\n            }\n            context.restore();\n        },\n        _hitFunc: function(context) {\n            var width = this.getWidth(),\n                height = this.getHeight();\n\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        setText: function(text) {\n            var str = Konva.Util._isString(text) ? text : (text || '').toString();\n            this._setAttr(TEXT, str);\n            return this;\n        },\n        /**\n         * get width of text area, which includes padding\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n        getWidth: function() {\n            var isAuto = (this.attrs.width === AUTO) || (this.attrs.width === undefined);\n            return isAuto ? this.getTextWidth() + this.getPadding() * 2 : this.attrs.width;\n        },\n        /**\n         * get the height of the text area, which takes into account multi-line text, line heights, and padding\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n        getHeight: function() {\n          var isAuto = (this.attrs.height === AUTO) || (this.attrs.height === undefined);\n          return isAuto ? (this.getTextHeight() * this.textArr.length * this.getLineHeight()) + this.getPadding() * 2 : this.attrs.height;\n        },\n        /**\n         * get text width\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n        getTextWidth: function() {\n            return this.textWidth;\n        },\n        /**\n         * get text height\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n        getTextHeight: function() {\n            return this.textHeight;\n        },\n        _getTextSize: function(text) {\n            var _context = dummyContext,\n                fontSize = this.getFontSize(),\n                metrics;\n\n            _context.save();\n            _context.font = this._getContextFont();\n\n            metrics = _context.measureText(text);\n            _context.restore();\n            return {\n                width: metrics.width,\n                height: parseInt(fontSize, 10)\n            };\n        },\n        _getContextFont: function() {\n            // IE don't want to work with usual font style\n            // bold was not working\n            // removing font variant will solve\n            // fix for: https://github.com/konvajs/konva/issues/94\n            if (Konva.UA.isIE) {\n                return this.getFontStyle() + SPACE + this.getFontSize() + PX_SPACE + this.getFontFamily();\n            }\n            return this.getFontStyle() + SPACE +\n                    this.getFontVariant() + SPACE +\n                    this.getFontSize() + PX_SPACE +\n                    this.getFontFamily();\n        },\n        _addTextLine: function (line, width) {\n            return this.textArr.push({text: line, width: width});\n        },\n        _getTextWidth: function (text) {\n            return dummyContext.measureText(text).width;\n        },\n        _setTextData: function () {\n            var lines = this.getText().split('\\n'),\n                fontSize = +this.getFontSize(),\n                textWidth = 0,\n                lineHeightPx = this.getLineHeight() * fontSize,\n                width = this.attrs.width,\n                height = this.attrs.height,\n                fixedWidth = width !== AUTO,\n                fixedHeight = height !== AUTO,\n                padding = this.getPadding(),\n                maxWidth = width - padding * 2,\n                maxHeightPx = height - padding * 2,\n                currentHeightPx = 0,\n                wrap = this.getWrap(),\n                shouldWrap = wrap !== NONE,\n                wrapAtWord = wrap !== CHAR && shouldWrap;\n\n            this.textArr = [];\n            dummyContext.save();\n            dummyContext.font = this._getContextFont();\n            for (var i = 0, max = lines.length; i < max; ++i) {\n                var line = lines[i],\n                    lineWidth = this._getTextWidth(line);\n                if (fixedWidth && lineWidth > maxWidth) {\n                    /*\n                     * if width is fixed and line does not fit entirely\n                     * break the line into multiple fitting lines\n                     */\n                    while (line.length > 0) {\n                        /*\n                         * use binary search to find the longest substring that\n                         * that would fit in the specified width\n                         */\n                        var low = 0, high = line.length,\n                            match = '', matchWidth = 0;\n                        while (low < high) {\n                            var mid = (low + high) >>> 1,\n                                substr = line.slice(0, mid + 1),\n                                substrWidth = this._getTextWidth(substr);\n                            if (substrWidth <= maxWidth) {\n                                low = mid + 1;\n                                match = substr;\n                                matchWidth = substrWidth;\n                            } else {\n                                high = mid;\n                            }\n                        }\n                        /*\n                         * 'low' is now the index of the substring end\n                         * 'match' is the substring\n                         * 'matchWidth' is the substring width in px\n                         */\n                        if (match) {\n                            // a fitting substring was found\n                            if (wrapAtWord) {\n                                // try to find a space or dash where wrapping could be done\n                                var wrapIndex = Math.max(match.lastIndexOf(SPACE),\n                                                          match.lastIndexOf(DASH)) + 1;\n                                if (wrapIndex > 0) {\n                                    // re-cut the substring found at the space/dash position\n                                    low = wrapIndex;\n                                    match = match.slice(0, low);\n                                    matchWidth = this._getTextWidth(match);\n                                }\n                            }\n                            this._addTextLine(match, matchWidth);\n                            textWidth = Math.max(textWidth, matchWidth);\n                            currentHeightPx += lineHeightPx;\n                            if (!shouldWrap ||\n                                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\n                                /*\n                                 * stop wrapping if wrapping is disabled or if adding\n                                 * one more line would overflow the fixed height\n                                 */\n                                break;\n                            }\n                            line = line.slice(low);\n                            if (line.length > 0) {\n                                // Check if the remaining text would fit on one line\n                                lineWidth = this._getTextWidth(line);\n                                if (lineWidth <= maxWidth) {\n                                    // if it does, add the line and break out of the loop\n                                    this._addTextLine(line, lineWidth);\n                                    currentHeightPx += lineHeightPx;\n                                    textWidth = Math.max(textWidth, lineWidth);\n                                    break;\n                                }\n                            }\n                        } else {\n                            // not even one character could fit in the element, abort\n                            break;\n                        }\n                    }\n                } else {\n                    // element width is automatically adjusted to max line width\n                    this._addTextLine(line, lineWidth);\n                    currentHeightPx += lineHeightPx;\n                    textWidth = Math.max(textWidth, lineWidth);\n                }\n                // if element height is fixed, abort if adding one more line would overflow\n                if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                    break;\n                }\n            }\n            dummyContext.restore();\n            this.textHeight = fontSize;\n            this.textWidth = textWidth;\n        }\n    };\n    Konva.Util.extend(Konva.Text, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\n    /**\n     * get/set font family\n     * @name fontFamily\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} fontFamily\n     * @returns {String}\n     * @example\n     * // get font family\n     * var fontFamily = text.fontFamily();\n     *\n     * // set font family\n     * text.fontFamily('Arial');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'fontSize', 12);\n\n    /**\n     * get/set font size in pixels\n     * @name fontSize\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {Number} fontSize\n     * @returns {Number}\n     * @example\n     * // get font size\n     * var fontSize = text.fontSize();\n     *\n     * // set font size to 22px\n     * text.fontSize(22);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\n    /**\n     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n     * @name fontStyle\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} fontStyle\n     * @returns {String}\n     * @example\n     * // get font style\n     * var fontStyle = text.fontStyle();\n     *\n     * // set font style\n     * text.fontStyle('bold');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\n    /**\n     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n     * @name fontVariant\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} fontVariant\n     * @returns {String}\n     * @example\n     * // get font variant\n     * var fontVariant = text.fontVariant();\n     *\n     * // set font variant\n     * text.fontVariant('small-caps');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'padding', 0);\n\n    /**\n     * set padding\n     * @name padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {Number} padding\n     * @returns {Number}\n     * @example\n     * // get padding\n     * var padding = text.padding();\n     *\n     * // set padding to 10 pixels\n     * text.padding(10);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\n    /**\n     * get/set horizontal align of text.  Can be 'left', 'center', or 'right'\n     * @name align\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} align\n     * @returns {String}\n     * @example\n     * // get text align\n     * var align = text.align();\n     *\n     * // center text\n     * text.align('center');\n     *\n     * // align text to right\n     * text.align('right');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'lineHeight', 1);\n\n    /**\n     * get/set line height.  The default is 1.\n     * @name lineHeight\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {Number} lineHeight\n     * @returns {Number}\n     * @example\n     * // get line height\n     * var lineHeight = text.lineHeight();\n     *\n     * // set the line height\n     * text.lineHeight(2);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\n    /**\n     * get/set wrap.  Can be word, char, or none. Default is word.\n     * @name wrap\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} wrap\n     * @returns {String}\n     * @example\n     * // get wrap\n     * var wrap = text.wrap();\n     *\n     * // set wrap\n     * text.wrap('word');\n     */\n\n    Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n    Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\n    /**\n     * get/set text\n     * @name getText\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} text\n     * @returns {String}\n     * @example\n     * // get text\n     * var text = text.text();\n     *\n     * // set text\n     * text.text('Hello world!');\n     */\n\n    Konva.Collection.mapMethods(Konva.Text);\n})();\n\n(function () {\n    'use strict';\n    /**\n     * Line constructor.&nbsp; Lines are defined by an array of points and\n     *  a tension\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Array} config.points\n     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n     *   The default is 0\n     * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var line = new Konva.Line({\n     *   x: 100,\n     *   y: 50,\n     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n     *   stroke: 'red',\n     *   tension: 1\n     * });\n     */\n    Konva.Line = function (config) {\n        this.___init(config);\n    };\n\n    Konva.Line.prototype = {\n        ___init: function (config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Line';\n\n            this.on('pointsChange.konva tensionChange.konva closedChange.konva', function () {\n                this._clearCache('tensionPoints');\n            });\n\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function (context) {\n            var points = this.getPoints(),\n                length = points.length,\n                tension = this.getTension(),\n                closed = this.getClosed(),\n                tp, len, n;\n\n            if (!length) {\n                return;\n            }\n\n            context.beginPath();\n            context.moveTo(points[0], points[1]);\n\n            // tension\n            if (tension !== 0 && length > 4) {\n                tp = this.getTensionPoints();\n                len = tp.length;\n                n = closed ? 0 : 4;\n\n                if (!closed) {\n                    context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n                }\n\n                while (n < len - 2) {\n                    context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n                }\n\n                if (!closed) {\n                    context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n                }\n            }\n            // no tension\n            else {\n                for (n = 2; n < length; n += 2) {\n                    context.lineTo(points[n], points[n + 1]);\n                }\n            }\n\n            // closed e.g. polygons and blobs\n            if (closed) {\n                context.closePath();\n                context.fillStrokeShape(this);\n            }\n            // open e.g. lines and splines\n            else {\n                context.strokeShape(this);\n            }\n        },\n        getTensionPoints: function () {\n            return this._getCache('tensionPoints', this._getTensionPoints);\n        },\n        _getTensionPoints: function () {\n            if (this.getClosed()) {\n                return this._getTensionPointsClosed();\n            } else {\n                return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n            }\n        },\n        _getTensionPointsClosed: function () {\n            var p = this.getPoints(),\n                len = p.length,\n                tension = this.getTension(),\n                util = Konva.Util,\n                firstControlPoints = util._getControlPoints(\n                    p[len - 2],\n                    p[len - 1],\n                    p[0],\n                    p[1],\n                    p[2],\n                    p[3],\n                    tension\n                ),\n                lastControlPoints = util._getControlPoints(\n                    p[len - 4],\n                    p[len - 3],\n                    p[len - 2],\n                    p[len - 1],\n                    p[0],\n                    p[1],\n                    tension\n                ),\n                middle = Konva.Util._expandPoints(p, tension),\n                tp = [\n                    firstControlPoints[2],\n                    firstControlPoints[3]\n                ]\n                .concat(middle)\n                .concat([\n                    lastControlPoints[0],\n                    lastControlPoints[1],\n                    p[len - 2],\n                    p[len - 1],\n                    lastControlPoints[2],\n                    lastControlPoints[3],\n                    firstControlPoints[0],\n                    firstControlPoints[1],\n                    p[0],\n                    p[1]\n                ]);\n\n            return tp;\n        },\n        getWidth: function () {\n            return this.getSelfRect().width;\n        },\n        getHeight: function () {\n            return this.getSelfRect().height;\n        },\n        // overload size detection\n        getSelfRect: function () {\n            var points;\n            if (this.getTension() !== 0) {\n                points = this._getTensionPoints();\n            } else {\n                points = this.getPoints();\n            }\n            var minX = points[0];\n            var maxX = points[0];\n            var minY = points[1];\n            var maxY = points[1];\n            var x, y;\n            for (var i = 0; i < points.length / 2; i++) {\n                x = points[i * 2];\n                y = points[i * 2 + 1];\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n            return {\n                x: Math.round(minX),\n                y: Math.round(minY),\n                width: Math.round(maxX - minX),\n                height: Math.round(maxY - minY)\n            };\n        }\n    };\n    Konva.Util.extend(Konva.Line, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\n    /**\n     * get/set closed flag.  The default is false\n     * @name closed\n     * @method\n     * @memberof Konva.Line.prototype\n     * @param {Boolean} closed\n     * @returns {Boolean}\n     * @example\n     * // get closed flag\n     * var closed = line.closed();\n     *\n     * // close the shape\n     * line.closed(true);\n     *\n     * // open the shape\n     * line.closed(false);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Line, 'tension', 0);\n\n    /**\n     * get/set tension\n     * @name tension\n     * @method\n     * @memberof Konva.Line.prototype\n     * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n     *   The default is 0\n     * @returns {Number}\n     * @example\n     * // get tension\n     * var tension = line.tension();\n     *\n     * // set tension\n     * line.tension(3);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Line, 'points', []);\n    /**\n     * get/set points array\n     * @name points\n     * @method\n     * @memberof Konva.Line.prototype\n     * @param {Array} points\n     * @returns {Array}\n     * @example\n     * // get points\n     * var points = line.points();\n     *\n     * // set points\n     * line.points([10, 20, 30, 40, 50, 60]);\n     *\n     * // push a new point\n     * line.points(line.points().concat([70, 80]));\n     */\n\n    Konva.Collection.mapMethods(Konva.Line);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Sprite constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} config.animation animation key\n     * @param {Object} config.animations animation map\n     * @param {Integer} [config.frameIndex] animation frame index\n     * @param {Image} config.image image object\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   var sprite = new Konva.Sprite({\n     *     x: 200,\n     *     y: 100,\n     *     image: imageObj,\n     *     animation: 'standing',\n     *     animations: {\n     *       standing: [\n     *         // x, y, width, height (6 frames)\n     *         0, 0, 49, 109,\n     *         52, 0, 49, 109,\n     *         105, 0, 49, 109,\n     *         158, 0, 49, 109,\n     *         210, 0, 49, 109,\n     *         262, 0, 49, 109\n     *       ],\n     *       kicking: [\n     *         // x, y, width, height (6 frames)\n     *         0, 109, 45, 98,\n     *         45, 109, 45, 98,\n     *         95, 109, 63, 98,\n     *         156, 109, 70, 98,\n     *         229, 109, 60, 98,\n     *         287, 109, 41, 98\n     *       ]\n     *     },\n     *     frameRate: 7,\n     *     frameIndex: 0\n     *   });\n     * };\n     * imageObj.src = '/path/to/image.jpg'\n     */\n    Konva.Sprite = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Sprite.prototype = {\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Sprite';\n\n            this._updated = true;\n            var that = this;\n            this.anim = new Konva.Animation(function() {\n                // if we don't need to redraw layer we should return false\n                var updated = that._updated;\n                that._updated = false;\n                return updated;\n            });\n            this.on('animationChange.konva', function() {\n                // reset index when animation changes\n                this.frameIndex(0);\n            });\n            this.on('frameIndexChange.konva', function() {\n                this._updated = true;\n            });\n            // smooth change for frameRate\n            this.on('frameRateChange.konva', function() {\n                if (!this.anim.isRunning()) {\n                    return;\n                }\n                clearInterval(this.interval);\n                this._setInterval();\n            });\n\n            this.sceneFunc(this._sceneFunc);\n            this.hitFunc(this._hitFunc);\n        },\n        _sceneFunc: function(context) {\n            var anim = this.getAnimation(),\n                index = this.frameIndex(),\n                ix4 = index * 4,\n                set = this.getAnimations()[anim],\n                offsets = this.frameOffsets(),\n                x = set[ix4 + 0],\n                y = set[ix4 + 1],\n                width = set[ix4 + 2],\n                height = set[ix4 + 3],\n                image = this.getImage();\n\n            if (this.hasFill() || this.hasStroke()) {\n                context.beginPath();\n                context.rect(0, 0, width, height);\n                context.closePath();\n                context.fillStrokeShape(this);\n            }\n\n            if(image) {\n                if (offsets) {\n                    var offset = offsets[anim],\n                    ix2 = index * 2;\n                    context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n                } else {\n                    context.drawImage(image, x, y, width, height, 0, 0, width, height);\n                }\n            }\n        },\n        _hitFunc: function(context) {\n            var anim = this.getAnimation(),\n                index = this.frameIndex(),\n                ix4 = index * 4,\n                set = this.getAnimations()[anim],\n                offsets = this.frameOffsets(),\n                width = set[ix4 + 2],\n                height = set[ix4 + 3];\n\n            context.beginPath();\n            if (offsets) {\n                var offset = offsets[anim];\n                var ix2 = index * 2;\n                context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n            } else {\n                context.rect(0, 0, width, height);\n            }\n            context.closePath();\n            context.fillShape(this);\n        },\n        _useBufferCanvas: function() {\n            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasStroke();\n        },\n        _setInterval: function() {\n            var that = this;\n            this.interval = setInterval(function() {\n                that._updateIndex();\n            }, 1000 / this.getFrameRate());\n        },\n        /**\n         * start sprite animation\n         * @method\n         * @memberof Konva.Sprite.prototype\n         */\n        start: function() {\n            var layer = this.getLayer();\n\n            /*\n             * animation object has no executable function because\n             *  the updates are done with a fixed FPS with the setInterval\n             *  below.  The anim object only needs the layer reference for\n             *  redraw\n             */\n            this.anim.setLayers(layer);\n            this._setInterval();\n            this.anim.start();\n        },\n        /**\n         * stop sprite animation\n         * @method\n         * @memberof Konva.Sprite.prototype\n         */\n        stop: function() {\n            this.anim.stop();\n            clearInterval(this.interval);\n        },\n        /**\n         * determine if animation of sprite is running or not.  returns true or false\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @returns {Boolean}\n         */\n        isRunning: function() {\n            return this.anim.isRunning();\n        },\n        _updateIndex: function() {\n            var index = this.frameIndex(),\n                animation = this.getAnimation(),\n                animations = this.getAnimations(),\n                anim = animations[animation],\n                len = anim.length / 4;\n\n            if(index < len - 1) {\n                this.frameIndex(index + 1);\n            }\n            else {\n                this.frameIndex(0);\n            }\n        }\n    };\n    Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\n    /**\n     * get/set animation key\n     * @name animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {String} anim animation key\n     * @returns {String}\n     * @example\n     * // get animation key\n     * var animation = sprite.animation();\n     *\n     * // set animation key\n     * sprite.animation('kicking');\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\n    /**\n     * get/set animations map\n     * @name animations\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Object} animations\n     * @returns {Object}\n     * @example\n     * // get animations map\n     * var animations = sprite.animations();\n     *\n     * // set animations map\n     * sprite.animations({\n     *   standing: [\n     *     // x, y, width, height (6 frames)\n     *     0, 0, 49, 109,\n     *     52, 0, 49, 109,\n     *     105, 0, 49, 109,\n     *     158, 0, 49, 109,\n     *     210, 0, 49, 109,\n     *     262, 0, 49, 109\n     *   ],\n     *   kicking: [\n     *     // x, y, width, height (6 frames)\n     *     0, 109, 45, 98,\n     *     45, 109, 45, 98,\n     *     95, 109, 63, 98,\n     *     156, 109, 70, 98,\n     *     229, 109, 60, 98,\n     *     287, 109, 41, 98\n     *   ]\n     * });\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\n    /**\n    * get/set offsets map\n    * @name offsets\n    * @method\n    * @memberof Konva.Sprite.prototype\n    * @param {Object} offsets\n    * @returns {Object}\n    * @example\n    * // get offsets map\n    * var offsets = sprite.offsets();\n    *\n    * // set offsets map\n    * sprite.offsets({\n    *   standing: [\n    *     // x, y (6 frames)\n    *     0, 0,\n    *     0, 0,\n    *     5, 0,\n    *     0, 0,\n    *     0, 3,\n    *     2, 0\n    *   ],\n    *   kicking: [\n    *     // x, y (6 frames)\n    *     0, 5,\n    *     5, 0,\n    *     10, 0,\n    *     0, 0,\n    *     2, 1,\n    *     0, 0\n    *   ]\n    * });\n    */\n\n    Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\n    /**\n     * get/set image\n     * @name image\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Image} image\n     * @returns {Image}\n     * @example\n     * // get image\n     * var image = sprite.image();\n     *\n     * // set image\n     * sprite.image(imageObj);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Sprite, 'frameIndex', 0);\n\n    /**\n     * set/set animation frame index\n     * @name frameIndex\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Integer} frameIndex\n     * @returns {Integer}\n     * @example\n     * // get animation frame index\n     * var frameIndex = sprite.frameIndex();\n     *\n     * // set animation frame index\n     * sprite.frameIndex(3);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Sprite, 'frameRate', 17);\n\n    /**\n     * get/set frame rate in frames per second.  Increase this number to make the sprite\n     *  animation run faster, and decrease the number to make the sprite animation run slower\n     *  The default is 17 frames per second\n     * @name frameRate\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Integer} frameRate\n     * @returns {Integer}\n     * @example\n     * // get frame rate\n     * var frameRate = sprite.frameRate();\n     *\n     * // set frame rate to 2 frames per second\n     * sprite.frameRate(2);\n     */\n\n    Konva.Factory.backCompat(Konva.Sprite, {\n        index: 'frameIndex',\n        getIndex: 'getFrameIndex',\n        setIndex: 'setFrameIndex'\n    });\n\n    Konva.Collection.mapMethods(Konva.Sprite);\n})();\n\n/*eslint-disable  no-shadow, max-len, max-depth */\n(function () {\n    'use strict';\n    /**\n     * Path constructor.\n     * @author Jason Follas\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} config.data SVG data string\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var path = new Konva.Path({\n     *   x: 240,\n     *   y: 40,\n     *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n     *   fill: 'green',\n     *   scale: 2\n     * });\n     */\n    Konva.Path = function (config) {\n        this.___init(config);\n    };\n\n    Konva.Path.prototype = {\n        ___init: function (config) {\n            this.dataArray = [];\n            var that = this;\n\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Path';\n\n            this.dataArray = Konva.Path.parsePathData(this.getData());\n            this.on('dataChange.konva', function () {\n                that.dataArray = Konva.Path.parsePathData(this.getData());\n            });\n\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var ca = this.dataArray;\n\n            // context position\n            context.beginPath();\n            for (var n = 0; n < ca.length; n++) {\n                var c = ca[n].command;\n                var p = ca[n].points;\n                switch (c) {\n                    case 'L':\n                        context.lineTo(p[0], p[1]);\n                        break;\n                    case 'M':\n                        context.moveTo(p[0], p[1]);\n                        break;\n                    case 'C':\n                        context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                        break;\n                    case 'Q':\n                        context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                        break;\n                    case 'A':\n                        var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n\n                        context.translate(cx, cy);\n                        context.rotate(psi);\n                        context.scale(scaleX, scaleY);\n                        context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                        context.scale(1 / scaleX, 1 / scaleY);\n                        context.rotate(-psi);\n                        context.translate(-cx, -cy);\n\n                        break;\n                    case 'z':\n                        context.closePath();\n                        break;\n                }\n            }\n\n            context.fillStrokeShape(this);\n        },\n        getSelfRect: function() {\n            var points = [];\n            this.dataArray.forEach(function(data) {\n                points = points.concat(data.points);\n            });\n            var minX = points[0];\n            var maxX = points[0];\n            var minY = points[1];\n            var maxY = points[1];\n            var x, y;\n            for (var i = 0; i < points.length / 2; i++) {\n                x = points[i * 2]; y = points[i * 2 + 1];\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n            return {\n                x: Math.round(minX),\n                y: Math.round(minY),\n                width: Math.round(maxX - minX),\n                height: Math.round(maxY - minY)\n            };\n        }\n    };\n    Konva.Util.extend(Konva.Path, Konva.Shape);\n\n    Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    };\n    Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if(fromX === undefined) {\n            fromX = P1x;\n        }\n        if(fromY === undefined) {\n            fromY = P1y;\n        }\n\n        var m = (P2y - P1y) / ((P2x - P1x) + 0.00000001);\n        var run = Math.sqrt(dist * dist / (1 + m * m));\n        if(P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n\n        if (P2x === P1x) { // vertical line\n            pt = {\n                x: fromX,\n                y: fromY + rise\n            };\n        } else if((fromY - P1y) / ((fromX - P1x) + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise\n            };\n        }\n        else {\n            var ix, iy;\n\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            if(len < 0.00000001) {\n                return undefined;\n            }\n            var u = (((fromX - P1x) * (P2x - P1x)) + ((fromY - P1y) * (P2y - P1y)));\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt(pRun * pRun / (1 + m * m));\n            if(P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise\n            };\n        }\n\n        return pt;\n    };\n\n    Konva.Path.getPointOnCubicBezier = function(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\n        return {\n            x: x,\n            y: y\n        };\n    };\n    Konva.Path.getPointOnQuadraticBezier = function(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\n        return {\n            x: x,\n            y: y\n        };\n    };\n    Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta)\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n        };\n    };\n    /*\n     * get parsed data array from the data\n     *  string.  V, v, H, h, and l data are converted to\n     *  L data for the purpose of high performance Path\n     *  rendering\n     */\n    Konva.Path.parsePathData = function(data) {\n        // Path Data Segment must begin with a moveTo\n        //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n        //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n        //l (x y)+  Relative lineTo\n        //L (x y)+  Absolute LineTo\n        //h (x)+    Relative horizontal lineTo\n        //H (x)+    Absolute horizontal lineTo\n        //v (y)+    Relative vertical lineTo\n        //V (y)+    Absolute vertical lineTo\n        //z (closepath)\n        //Z (closepath)\n        //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n        //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n        //q (x1 y1 x y)+       Relative Quadratic Bezier\n        //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n        //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n        //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n        //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n        //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n        //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n        //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\n        // return early if data is not defined\n        if(!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data;\n\n        // command chars\n        var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n        // convert white spaces to commas\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        // create pipes so that we can split the data\n        for(var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        // create array\n        var arr = cs.split('|');\n        var ca = [];\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n        for( n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            // remove ,- for consistency\n            str = str.replace(new RegExp(',-', 'g'), '-');\n            // add commas so that it's easy to split\n            str = str.replace(new RegExp('-', 'g'), ',-');\n            str = str.replace(new RegExp('e,-', 'g'), 'e-');\n            var p = str.split(',');\n            if(p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n            // convert strings to floats\n            for(var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while(p.length > 0) {\n                if(isNaN(p[0])) {// case for a trailing comma before next command\n                    break;\n                }\n\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                // Move var from within the switch to up here (jshint)\n                var prevCmd, ctlPtx, ctlPty;     // Ss, Tt\n                var rx, ry, psi, fa, fs, x1, y1; // Aa\n\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n\n                    // Note: Keep the lineTo's above the moveTo's in this switch\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n\n                    // Note: lineTo handlers need to be above this point\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        // After closing the path move the current position\n                        // to the the first point of the path (if any).\n                        if(ca.length > 2 && ca[ca.length - 1].command === 'z'){\n                            for(var idx = ca.length - 2; idx >= 0; idx--){\n                                if(ca[idx].command === 'M'){\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        // subsequent points are treated as relative lineTo\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        // subsequent points are treated as absolute lineTo\n                        break;\n\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if(prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if(prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if(prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if(prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy; cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points)\n                });\n            }\n\n            if(c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0\n                });\n            }\n        }\n\n        return ca;\n    };\n    Konva.Path.calcLength = function(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Konva.Path;\n\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                // Approximates by breaking curve into 100 line segments\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for( t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                // Approximates by breaking curve into 100 line segments\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for( t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                // Approximates by breaking curve into line segments\n                len = 0.0;\n                var start = points[4];\n                // 4 = theta\n                var dTheta = points[5];\n                // 5 = dTheta\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                // 1 degree resolution\n                if(Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if(dTheta < 0) {// clockwise\n                    for( t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {// counter-clockwise\n                    for( t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\n                return len;\n        }\n\n        return 0;\n    };\n    Konva.Path.convertEndpointToCenterParameterization = function(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if(lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n\n        var f = Math.sqrt((((rx * rx) * (ry * ry)) - ((rx * rx) * (yp * yp)) - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp) + (ry * ry) * (xp * xp)));\n\n        if(fa === fs) {\n            f *= -1;\n        }\n        if(isNaN(f)) {\n            f = 0;\n        }\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n        var vMag = function(v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function(u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function(u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n\n        if(vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if(vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if(fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if(fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    };\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\n    /**\n     * set SVG path data string.  This method\n     *  also automatically parses the data string\n     *  into a data array.  Currently supported SVG data:\n     *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n     * @name setData\n     * @method\n     * @memberof Konva.Path.prototype\n     * @param {String} SVG path command string\n     */\n\n    /**\n     * get SVG path data string\n     * @name getData\n     * @method\n     * @memberof Konva.Path.prototype\n     */\n\n    Konva.Collection.mapMethods(Konva.Path);\n})();\n\n(function() {\n    'use strict';\n    var EMPTY_STRING = '',\n        //CALIBRI = 'Calibri',\n        NORMAL = 'normal';\n\n    /**\n     * Path constructor.\n     * @author Jason Follas\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} [config.fontFamily] default is Calibri\n     * @param {Number} [config.fontSize] default is 12\n     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n     * @param {String} config.text\n     * @param {String} config.data SVG data string\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var textpath = new Konva.TextPath({\n     *   x: 100,\n     *   y: 50,\n     *   fill: '#333',\n     *   fontSize: '24',\n     *   fontFamily: 'Arial',\n     *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n     *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50'\n     * });\n     */\n    Konva.TextPath = function(config) {\n        this.___init(config);\n    };\n\n    function _fillFunc(context) {\n        context.fillText(this.partialText, 0, 0);\n    }\n    function _strokeFunc(context) {\n        context.strokeText(this.partialText, 0, 0);\n    }\n\n    Konva.TextPath.prototype = {\n        ___init: function(config) {\n            var that = this;\n            this.dummyCanvas = Konva.Util.createCanvasElement();\n            this.dataArray = [];\n\n            // call super constructor\n            Konva.Shape.call(this, config);\n\n            // overrides\n            // TODO: shouldn't this be on the prototype?\n            this._fillFunc = _fillFunc;\n            this._strokeFunc = _strokeFunc;\n            this._fillFuncHit = _fillFunc;\n            this._strokeFuncHit = _strokeFunc;\n\n            this.className = 'TextPath';\n\n            this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n            this.on('dataChange.konva', function() {\n                that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n                that._setTextData();\n            });\n\n            // update text data for certain attr changes\n            this.on('textChange.konva letterSpacingChange.konva', that._setTextData);\n            that._setTextData();\n            this.sceneFunc(this._sceneFunc);\n            this.hitFunc(this._hitFunc);\n        },\n        _sceneFunc: function(context) {\n            context.setAttr('font', this._getContextFont());\n            context.setAttr(this.getTextBaseline(), 'middle');\n            context.setAttr('textAlign', 'left');\n            context.save();\n\n            var glyphInfo = this.glyphInfo;\n            for(var i = 0; i < glyphInfo.length; i++) {\n                context.save();\n\n                var p0 = glyphInfo[i].p0;\n\n                context.translate(p0.x, p0.y);\n                context.rotate(glyphInfo[i].rotation);\n                this.partialText = glyphInfo[i].text;\n\n                context.fillStrokeShape(this);\n                context.restore();\n\n                //// To assist with debugging visually, uncomment following\n                // context.beginPath();\n                // if (i % 2)\n                // context.strokeStyle = 'cyan';\n                // else\n                // context.strokeStyle = 'green';\n                // var p1 = glyphInfo[i].p1;\n                // context.moveTo(p0.x, p0.y);\n                // context.lineTo(p1.x, p1.y);\n                // context.stroke();\n            }\n            context.restore();\n        },\n        _hitFunc: function(context) {\n          context.beginPath();\n\n          var glyphInfo = this.glyphInfo;\n          if (glyphInfo.length >= 1) {\n            var p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n          }\n          for(var i = 0; i < glyphInfo.length; i++) {\n              var p1 = glyphInfo[i].p1;\n              context.lineTo(p1.x, p1.y);\n          }\n          context.setAttr('lineWidth', this.getFontSize());\n          context.setAttr('strokeStyle', this.colorKey);\n          context.stroke();\n        },\n        /**\n         * get text width in pixels\n         * @method\n         * @memberof Konva.TextPath.prototype\n         */\n        getTextWidth: function() {\n            return this.textWidth;\n        },\n        /**\n         * get text height in pixels\n         * @method\n         * @memberof Konva.TextPath.prototype\n         */\n        getTextHeight: function() {\n            return this.textHeight;\n        },\n        /**\n         * set text\n         * @method\n         * @memberof Konva.TextPath.prototype\n         * @param {String} text\n         */\n        setText: function(text) {\n            Konva.Text.prototype.setText.call(this, text);\n        },\n        _getTextSize: function(text) {\n            var dummyCanvas = this.dummyCanvas;\n            var _context = dummyCanvas.getContext('2d');\n\n            _context.save();\n\n            _context.font = this._getContextFont();\n            var metrics = _context.measureText(text);\n\n            _context.restore();\n\n            return {\n                width: metrics.width,\n                height: parseInt(this.attrs.fontSize, 10)\n            };\n        },\n        _setTextData: function() {\n\n            var that = this;\n            var size = this._getTextSize(this.attrs.text);\n            var letterSpacing = this.getLetterSpacing();\n\n            this.textWidth = size.width;\n            this.textHeight = size.height;\n\n            this.glyphInfo = [];\n\n            var charArr = this.getText().split('');\n\n            var p0, p1, pathCmd;\n\n            var pIndex = -1;\n            var currentT = 0;\n\n            var getNextPathSegment = function() {\n                currentT = 0;\n                var pathData = that.dataArray;\n\n                for(var j = pIndex + 1; j < pathData.length; j++) {\n                    if(pathData[j].pathLength > 0) {\n                        pIndex = j;\n\n                        return pathData[j];\n                    }\n                    else if(pathData[j].command === 'M') {\n                        p0 = {\n                            x: pathData[j].points[0],\n                            y: pathData[j].points[1]\n                        };\n                    }\n                }\n\n                return {};\n            };\n            var findSegmentToFitCharacter = function(c) {\n\n                var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\n                var currLen = 0;\n                var attempts = 0;\n\n                p1 = undefined;\n                while(Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 && attempts < 25) {\n                    attempts++;\n                    var cumulativePathLength = currLen;\n                    while(pathCmd === undefined) {\n                        pathCmd = getNextPathSegment();\n\n                        if(pathCmd && cumulativePathLength + pathCmd.pathLength < glyphWidth) {\n                            cumulativePathLength += pathCmd.pathLength;\n                            pathCmd = undefined;\n                        }\n                    }\n\n                    if(pathCmd === {} || p0 === undefined) {\n                        return undefined;\n                    }\n\n                    var needNewSegment = false;\n\n                    switch (pathCmd.command) {\n                        case 'L':\n                            if(Konva.Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {\n                                p1 = Konva.Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);\n                            }\n                            else {\n                                pathCmd = undefined;\n                            }\n                            break;\n                        case 'A':\n\n                            var start = pathCmd.points[4];\n                            // 4 = theta\n                            var dTheta = pathCmd.points[5];\n                            // 5 = dTheta\n                            var end = pathCmd.points[4] + dTheta;\n\n                            if(currentT === 0){\n                                currentT = start + 0.00000001;\n                            }\n                            // Just in case start is 0\n                            else if(glyphWidth > currLen) {\n                                currentT += (Math.PI / 180.0) * dTheta / Math.abs(dTheta);\n                            }\n                            else {\n                                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);\n                            }\n\n                            // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n                            // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n                            if(dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {\n                                currentT = end;\n                                needNewSegment = true;\n                            }\n                            p1 = Konva.Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);\n                            break;\n                        case 'C':\n                            if(currentT === 0) {\n                                if(glyphWidth > pathCmd.pathLength) {\n                                    currentT = 0.00000001;\n                                }\n                                else {\n                                    currentT = glyphWidth / pathCmd.pathLength;\n                                }\n                            }\n                            else if(glyphWidth > currLen) {\n                                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n                            }\n                            else {\n                                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n                            }\n\n                            if(currentT > 1.0) {\n                                currentT = 1.0;\n                                needNewSegment = true;\n                            }\n                            p1 = Konva.Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);\n                            break;\n                        case 'Q':\n                            if(currentT === 0) {\n                                currentT = glyphWidth / pathCmd.pathLength;\n                            }\n                            else if(glyphWidth > currLen) {\n                                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n                            }\n                            else {\n                                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n                            }\n\n                            if(currentT > 1.0) {\n                                currentT = 1.0;\n                                needNewSegment = true;\n                            }\n                            p1 = Konva.Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);\n                            break;\n\n                    }\n\n                    if(p1 !== undefined) {\n                        currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n                    }\n\n                    if(needNewSegment) {\n                        needNewSegment = false;\n                        pathCmd = undefined;\n                    }\n                }\n            };\n            for(var i = 0; i < charArr.length; i++) {\n\n                // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n                findSegmentToFitCharacter(charArr[i]);\n\n                if(p0 === undefined || p1 === undefined) {\n                    break;\n                }\n\n                var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\n                // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n                // Can foresee having a rough pair table built in that the developer can override as needed.\n\n                var kern = 0;\n                // placeholder for future implementation\n\n                var midpoint = Konva.Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);\n\n                var rotation = Math.atan2((p1.y - p0.y), (p1.x - p0.x));\n                this.glyphInfo.push({\n                    transposeX: midpoint.x,\n                    transposeY: midpoint.y,\n                    text: charArr[i],\n                    rotation: rotation,\n                    p0: p0,\n                    p1: p1\n                });\n                p0 = p1;\n            }\n        },\n        getSelfRect: function() {\n            var points = [];\n            var fontSize = this.fontSize();\n\n            this.glyphInfo.forEach(function(info) {\n                points.push(info.p0.x);\n                points.push(info.p0.y);\n                points.push(info.p1.x);\n                points.push(info.p1.y);\n            });\n            var minX = points[0];\n            var maxX = points[0];\n            var minY = points[0];\n            var maxY = points[0];\n            var x, y;\n            for (var i = 0; i < points.length / 2; i++) {\n                x = points[i * 2]; y = points[i * 2 + 1];\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n            return {\n                x: Math.round(minX) - fontSize,\n                y: Math.round(minY) - fontSize,\n                width: Math.round(maxX - minX) + fontSize * 2,\n                height: Math.round(maxY - minY) + fontSize * 2\n            };\n        }\n    };\n\n    // map TextPath methods to Text\n    Konva.TextPath.prototype._getContextFont = Konva.Text.prototype._getContextFont;\n\n    Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\n    // add setters and getters\n    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\n    /**\n     * set font family\n     * @name setFontFamily\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} fontFamily\n     */\n\n     /**\n     * get font family\n     * @name getFontFamily\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontSize', 12);\n\n    /**\n     * set font size\n     * @name setFontSize\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {int} fontSize\n     */\n\n     /**\n     * get font size\n     * @name getFontSize\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\n    /**\n     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n     * @name setFontStyle\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} fontStyle\n     */\n\n    Konva.Factory.addGetterSetter(Konva.TextPath, 'letterSpacing', 0);\n\n     /**\n      * set letter spacing property. Default value is 0.\n      * @name letterSpacing\n      * @method\n      * @memberof Konva.TextPath.prototype\n      * @param {Number} letterSpacing\n      */\n\n    Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\n     /**\n      * set textBaseline property. Default value is 'middle'.\n      * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n      * @name textBaseline\n      * @method\n      * @memberof Konva.TextPath.prototype\n      * @param {Number} textBaseline\n      */\n\n     /**\n     * get font style\n     * @name getFontStyle\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\n\n\n    /**\n     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n     * @name setFontVariant\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} fontVariant\n     */\n\n    /**\n     * @get font variant\n     * @name getFontVariant\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n    Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\n    /**\n     * get text\n     * @name getText\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n    Konva.Collection.mapMethods(Konva.TextPath);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.sides\n     * @param {Number} config.radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var hexagon = new Konva.RegularPolygon({\n     *   x: 100,\n     *   y: 200,\n     *   sides: 6,\n     *   radius: 70,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 4\n     * });\n     */\n    Konva.RegularPolygon = function(config) {\n        this.___init(config);\n    };\n\n    Konva.RegularPolygon.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'RegularPolygon';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var sides = this.attrs.sides,\n                radius = this.attrs.radius,\n                n, x, y;\n\n            context.beginPath();\n            context.moveTo(0, 0 - radius);\n\n            for(n = 1; n < sides; n++) {\n                x = radius * Math.sin(n * 2 * Math.PI / sides);\n                y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n                context.lineTo(x, y);\n            }\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        getWidth: function() {\n            return this.getRadius() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getRadius() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            if (this.radius() !== width / 2) {\n                this.setRadius(width / 2);\n            }\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            if (this.radius() !== height / 2) {\n                this.setRadius(height / 2);\n            }\n        }\n    };\n    Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'radius', 0);\n\n    /**\n     * set radius\n     * @name setRadius\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     * @param {Number} radius\n     */\n\n     /**\n     * get radius\n     * @name getRadius\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'sides', 0);\n\n    /**\n     * set number of sides\n     * @name setSides\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     * @param {int} sides\n     */\n\n    /**\n     * get number of sides\n     * @name getSides\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     */\n\n    Konva.Collection.mapMethods(Konva.RegularPolygon);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Star constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Integer} config.numPoints\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var star = new Konva.Star({\n     *   x: 100,\n     *   y: 200,\n     *   numPoints: 5,\n     *   innerRadius: 70,\n     *   outerRadius: 70,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 4\n     * });\n     */\n    Konva.Star = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Star.prototype = {\n        _centroid: true,\n        ___init: function(config) {\n            // call super constructor\n            Konva.Shape.call(this, config);\n            this.className = 'Star';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var innerRadius = this.innerRadius(),\n                outerRadius = this.outerRadius(),\n                numPoints = this.numPoints();\n\n            context.beginPath();\n            context.moveTo(0, 0 - outerRadius);\n\n            for(var n = 1; n < numPoints * 2; n++) {\n                var radius = n % 2 === 0 ? outerRadius : innerRadius;\n                var x = radius * Math.sin(n * Math.PI / numPoints);\n                var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n                context.lineTo(x, y);\n            }\n            context.closePath();\n\n            context.fillStrokeShape(this);\n        },\n        // implements Shape.prototype.getWidth()\n        getWidth: function() {\n            return this.getOuterRadius() * 2;\n        },\n        // implements Shape.prototype.getHeight()\n        getHeight: function() {\n            return this.getOuterRadius() * 2;\n        },\n        // implements Shape.prototype.setWidth()\n        setWidth: function(width) {\n            Konva.Node.prototype.setWidth.call(this, width);\n            if (this.outerRadius() !== width / 2) {\n                this.setOuterRadius(width / 2);\n            }\n        },\n        // implements Shape.prototype.setHeight()\n        setHeight: function(height) {\n            Konva.Node.prototype.setHeight.call(this, height);\n            if (this.outerRadius() !== height / 2) {\n                this.setOuterRadius(height / 2);\n            }\n        }\n    };\n    Konva.Util.extend(Konva.Star, Konva.Shape);\n\n    // add getters setters\n    Konva.Factory.addGetterSetter(Konva.Star, 'numPoints', 5);\n\n    /**\n     * set number of points\n     * @name setNumPoints\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Integer} points\n     */\n\n     /**\n     * get number of points\n     * @name getNumPoints\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Star, 'innerRadius', 0);\n\n    /**\n     * set inner radius\n     * @name setInnerRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Number} radius\n     */\n\n     /**\n     * get inner radius\n     * @name getInnerRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Star, 'outerRadius', 0);\n\n    /**\n     * set outer radius\n     * @name setOuterRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Number} radius\n     */\n\n     /**\n     * get outer radius\n     * @name getOuterRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n    Konva.Collection.mapMethods(Konva.Star);\n})();\n\n(function() {\n    'use strict';\n    // constants\n    var ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text'],\n        CHANGE_KONVA = 'Change.konva',\n        NONE = 'none',\n        UP = 'up',\n        RIGHT = 'right',\n        DOWN = 'down',\n        LEFT = 'left',\n        LABEL = 'Label',\n\n     // cached variables\n     attrChangeListLen = ATTR_CHANGE_LIST.length;\n\n    /**\n     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n     * @constructor\n     * @memberof Konva\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // create label\n     * var label = new Konva.Label({\n     *   x: 100,\n     *   y: 100,\n     *   draggable: true\n     * });\n     *\n     * // add a tag to the label\n     * label.add(new Konva.Tag({\n     *   fill: '#bbb',\n     *   stroke: '#333',\n     *   shadowColor: 'black',\n     *   shadowBlur: 10,\n     *   shadowOffset: [10, 10],\n     *   shadowOpacity: 0.2,\n     *   lineJoin: 'round',\n     *   pointerDirection: 'up',\n     *   pointerWidth: 20,\n     *   pointerHeight: 20,\n     *   cornerRadius: 5\n     * }));\n     *\n     * // add text to the label\n     * label.add(new Konva.Text({\n     *   text: 'Hello World!',\n     *   fontSize: 50,\n     *   lineHeight: 1.2,\n     *   padding: 10,\n     *   fill: 'green'\n     *  }));\n     */\n    Konva.Label = function(config) {\n        this.____init(config);\n    };\n\n    Konva.Label.prototype = {\n        ____init: function(config) {\n            var that = this;\n\n            Konva.Group.call(this, config);\n            this.className = LABEL;\n\n            this.on('add.konva', function(evt) {\n                that._addListeners(evt.child);\n                that._sync();\n            });\n        },\n        /**\n         * get Text shape for the label.  You need to access the Text shape in order to update\n         * the text properties\n         * @name getText\n         * @method\n         * @memberof Konva.Label.prototype\n         */\n        getText: function() {\n            return this.find('Text')[0];\n        },\n        /**\n         * get Tag shape for the label.  You need to access the Tag shape in order to update\n         * the pointer properties and the corner radius\n         * @name getTag\n         * @method\n         * @memberof Konva.Label.prototype\n         */\n        getTag: function() {\n            return this.find('Tag')[0];\n        },\n        _addListeners: function(text) {\n            var that = this,\n                n;\n            var func = function(){\n                    that._sync();\n                };\n\n            // update text data for certain attr changes\n            for(n = 0; n < attrChangeListLen; n++) {\n                text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n            }\n        },\n        getWidth: function() {\n            return this.getText().getWidth();\n        },\n        getHeight: function() {\n            return this.getText().getHeight();\n        },\n        _sync: function() {\n            var text = this.getText(),\n                tag = this.getTag(),\n                width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n\n            if (text && tag) {\n                width = text.getWidth();\n                height = text.getHeight();\n                pointerDirection = tag.getPointerDirection();\n                pointerWidth = tag.getPointerWidth();\n                pointerHeight = tag.getPointerHeight();\n                x = 0;\n                y = 0;\n\n                switch(pointerDirection) {\n                    case UP:\n                        x = width / 2;\n                        y = -1 * pointerHeight;\n                        break;\n                    case RIGHT:\n                        x = width + pointerWidth;\n                        y = height / 2;\n                        break;\n                    case DOWN:\n                        x = width / 2;\n                        y = height + pointerHeight;\n                        break;\n                    case LEFT:\n                        x = -1 * pointerWidth;\n                        y = height / 2;\n                        break;\n                }\n\n                tag.setAttrs({\n                    x: -1 * x,\n                    y: -1 * y,\n                    width: width,\n                    height: height\n                });\n\n                text.setAttrs({\n                    x: -1 * x,\n                    y: -1 * y\n                });\n            }\n        }\n    };\n\n    Konva.Util.extend(Konva.Label, Konva.Group);\n\n    Konva.Collection.mapMethods(Konva.Label);\n\n    /**\n     * Tag constructor.&nbsp; A Tag can be configured\n     *  to have a pointer element that points up, right, down, or left\n     * @constructor\n     * @memberof Konva\n     * @param {Object} config\n     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n     * @param {Number} [config.pointerWidth]\n     * @param {Number} [config.pointerHeight]\n     * @param {Number} [config.cornerRadius]\n     */\n    Konva.Tag = function(config) {\n        this.___init(config);\n    };\n\n    Konva.Tag.prototype = {\n        ___init: function(config) {\n            Konva.Shape.call(this, config);\n            this.className = 'Tag';\n            this.sceneFunc(this._sceneFunc);\n        },\n        _sceneFunc: function(context) {\n            var width = this.getWidth(),\n                height = this.getHeight(),\n                pointerDirection = this.getPointerDirection(),\n                pointerWidth = this.getPointerWidth(),\n                pointerHeight = this.getPointerHeight(),\n                cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\n            context.beginPath();\n            if (!cornerRadius) {\n                context.moveTo(0, 0);\n            } else {\n                context.moveTo(cornerRadius, 0);\n            }\n\n            if (pointerDirection === UP) {\n                context.lineTo((width - pointerWidth) / 2, 0);\n                context.lineTo(width / 2, -1 * pointerHeight);\n                context.lineTo((width + pointerWidth) / 2, 0);\n            }\n\n            if(!cornerRadius) {\n                context.lineTo(width, 0);\n            } else {\n                context.lineTo(width - cornerRadius, 0);\n                context.arc(width - cornerRadius, cornerRadius, cornerRadius, Math.PI * 3 / 2, 0, false);\n            }\n\n            if (pointerDirection === RIGHT) {\n                context.lineTo(width, (height - pointerHeight) / 2);\n                context.lineTo(width + pointerWidth, height / 2);\n                context.lineTo(width, (height + pointerHeight) / 2);\n            }\n\n            if(!cornerRadius) {\n                context.lineTo(width, height);\n            } else {\n                context.lineTo(width, height - cornerRadius);\n                context.arc(width - cornerRadius, height - cornerRadius, cornerRadius, 0, Math.PI / 2, false);\n            }\n\n            if (pointerDirection === DOWN) {\n                context.lineTo((width + pointerWidth) / 2, height);\n                context.lineTo(width / 2, height + pointerHeight);\n                context.lineTo((width - pointerWidth) / 2, height);\n            }\n\n            if(!cornerRadius) {\n                context.lineTo(0, height);\n            } else {\n                context.lineTo(cornerRadius, height);\n                context.arc(cornerRadius, height - cornerRadius, cornerRadius, Math.PI / 2, Math.PI, false);\n            }\n\n            if (pointerDirection === LEFT) {\n                context.lineTo(0, (height + pointerHeight) / 2);\n                context.lineTo(-1 * pointerWidth, height / 2);\n                context.lineTo(0, (height - pointerHeight) / 2);\n            }\n\n            if(cornerRadius) {\n                context.lineTo(0, cornerRadius);\n                context.arc(cornerRadius, cornerRadius, cornerRadius, Math.PI, Math.PI * 3 / 2, false);\n            }\n\n            context.closePath();\n            context.fillStrokeShape(this);\n        },\n        getSelfRect: function() {\n            var x = 0,\n                y = 0,\n                pointerWidth = this.getPointerWidth(),\n                pointerHeight = this.getPointerHeight(),\n                direction = this.pointerDirection(),\n                width = this.getWidth(),\n                height = this.getHeight();\n\n            if (direction === UP) {\n                y -= pointerHeight;\n                height += pointerHeight;\n            } else if (direction === DOWN) {\n                height += pointerHeight;\n            } else if (direction === LEFT) {\n                // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n                x -= pointerWidth * 1.5;\n                width += pointerWidth;\n            } else if (direction === RIGHT) {\n                width += pointerWidth * 1.5;\n            }\n            return {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            };\n        }\n    };\n\n    Konva.Util.extend(Konva.Tag, Konva.Shape);\n    Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\n    /**\n     * set pointer Direction\n     * @name setPointerDirection\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {String} pointerDirection can be up, right, down, left, or none.  The\n     *  default is none\n     */\n\n     /**\n     * get pointer Direction\n     * @name getPointerDirection\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Tag, 'pointerWidth', 0);\n\n    /**\n     * set pointer width\n     * @name setPointerWidth\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} pointerWidth\n     */\n\n     /**\n     * get pointer width\n     * @name getPointerWidth\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Tag, 'pointerHeight', 0);\n\n    /**\n     * set pointer height\n     * @name setPointerHeight\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} pointerHeight\n     */\n\n     /**\n     * get pointer height\n     * @name getPointerHeight\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Tag, 'cornerRadius', 0);\n\n    /**\n     * set corner radius\n     * @name setCornerRadius\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} corner radius\n     */\n\n    /**\n     * get corner radius\n     * @name getCornerRadius\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n    Konva.Collection.mapMethods(Konva.Tag);\n})();\n\n(function() {\n    'use strict';\n    /**\n     * Arrow constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Array} config.points\n     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n     *   The default is 0\n     * @param {Number} config.pointerLength\n     * @param {Number} config.pointerWidth\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var line = new Konva.Line({\n     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n     *   stroke: 'red',\n     *   tension: 1,\n     *   pointerLength : 10,\n     *   pointerWidth : 12\n     * });\n     */\n    Konva.Arrow = function(config) {\n        this.____init(config);\n    };\n\n    Konva.Arrow.prototype = {\n        ____init: function(config) {\n            // call super constructor\n            Konva.Line.call(this, config);\n            this.className = 'Arrow';\n        },\n        _sceneFunc: function(ctx) {\n            Konva.Line.prototype._sceneFunc.apply(this, arguments);\n            var PI2 = Math.PI * 2;\n            var points = this.points();\n            var n = points.length;\n            var dx = points[n - 2] - points[n - 4];\n            var dy = points[n - 1] - points[n - 3];\n            var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n            var length = this.pointerLength();\n            var width = this.pointerWidth();\n\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n\n            if (this.pointerAtBeginning()) {\n                ctx.save();\n                ctx.translate(points[0], points[1]);\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n                ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n                ctx.moveTo(0, 0);\n                ctx.lineTo(-length, width / 2);\n                ctx.lineTo(-length, -width / 2);\n                ctx.closePath();\n                ctx.restore();\n            }\n            ctx.fillStrokeShape(this);\n        }\n    };\n\n    Konva.Util.extend(Konva.Arrow, Konva.Line);\n    /**\n     * get/set pointerLength\n     * @name pointerLength\n     * @method\n     * @memberof Konva.Arrow.prototype\n     * @param {Number} Length of pointer of arrow.\n     *   The default is 10.\n     * @returns {Number}\n     * @example\n     * // get tension\n     * var pointerLength = line.pointerLength();\n     *\n     * // set tension\n     * line.pointerLength(15);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerLength', 10);\n    /**\n     * get/set pointerWidth\n     * @name pointerWidth\n     * @method\n     * @memberof Konva.Arrow.prototype\n     * @param {Number} Width of pointer of arrow.\n     *   The default is 10.\n     * @returns {Number}\n     * @example\n     * // get tension\n     * var pointerWidth = line.pointerWidth();\n     *\n     * // set tension\n     * line.pointerWidth(15);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerWidth', 10);\n    /**\n     * get/set pointerAtBeginning\n     * @name pointerAtBeginning\n     * @method\n     * @memberof Konva.Arrow.prototype\n     * @param {Number} Should pointer displayed at beginning of arrow.\n     *   The default is false.\n     * @returns {Boolean}\n     * @example\n     * // get tension\n     * var pointerAtBeginning = line.pointerAtBeginning();\n     *\n     * // set tension\n     * line.pointerAtBeginning(true);\n     */\n\n    Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n    Konva.Collection.mapMethods(Konva.Arrow);\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/konva/konva.js\n ** module id = 32\n ** module chunks = 0\n **/","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_an-instance.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = false;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_library.js\n ** module id = 34\n ** module chunks = 0\n **/","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-create.js\n ** module id = 35\n ** module chunks = 0\n **/","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = require('./_object-keys-internal')\n  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gopn.js\n ** module id = 36\n ** module chunks = 0\n **/","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-keys.js\n ** module id = 37\n ** module chunks = 0\n **/","var redefine = require('./_redefine');\nmodule.exports = function(target, src, safe){\n  for(var key in src)redefine(target, key, src[key], safe);\n  return target;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_redefine-all.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\nvar global      = require('./_global')\n  , dP          = require('./_object-dp')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_set-species.js\n ** module id = 39\n ** module chunks = 0\n **/","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-index.js\n ** module id = 40\n ** module chunks = 0\n **/","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_uid.js\n ** module id = 41\n ** module chunks = 0\n **/","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables')\n  , ArrayProto  = Array.prototype;\nif(ArrayProto[UNSCOPABLES] == undefined)require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function(key){\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_add-to-unscopables.js\n ** module id = 42\n ** module chunks = 0\n **/","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method')\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_for-of.js\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iterators.js\n ** module id = 44\n ** module chunks = 0\n **/","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_set-to-string-tag.js\n ** module id = 45\n ** module chunks = 0\n **/","var $export = require('./_export')\n  , defined = require('./_defined')\n  , fails   = require('./_fails')\n  , spaces  = require('./_string-ws')\n  , space   = '[' + spaces + ']'\n  , non     = '\\u200b\\u0085'\n  , ltrim   = RegExp('^' + space + space + '*')\n  , rtrim   = RegExp(space + space + '*$');\n\nvar exporter = function(KEY, exec, ALIAS){\n  var exp   = {};\n  var FORCE = fails(function(){\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if(ALIAS)exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function(string, TYPE){\n  string = String(defined(string));\n  if(TYPE & 1)string = string.replace(ltrim, '');\n  if(TYPE & 2)string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-trim.js\n ** module id = 46\n ** module chunks = 0\n **/","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_classof.js\n ** module id = 47\n ** module chunks = 0\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iobject.js\n ** module id = 48\n ** module chunks = 0\n **/","exports.f = {}.propertyIsEnumerable;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-pie.js\n ** module id = 49\n ** module chunks = 0\n **/","import { Label, Text, Tag } from 'konva';\r\n\r\nclass Screen extends Label {\r\n\tconstructor(x, y, textColor, backgroundColor, text, scale = 1) {\r\n\t\tsuper({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\topacity: 1\r\n\t\t});\r\n\t\tconsole.log(`Creating ${this.className}`);\r\n\t\tthis.type = 'Screen';\r\n\t\tthis.id = this.type + ' #' + Math.floor(Math.random() * 1000);\r\n\t\tthis.add(new Tag({\r\n\t\t\tfill: backgroundColor,\r\n\t\t\tstroke: '#333',\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tpointerDirection: 'down',\r\n\t        pointerWidth: 10 * scale,\r\n\t        pointerHeight: 10 * scale,\r\n\t        lineJoin: 'round'\r\n\t\t}));\r\n\t\tthis.add(new Text({\r\n\t\t\ttext: text,\r\n\t\t\tfontFamily: 'Calibri',\r\n\t\t\tfontSize: 18 * scale,\r\n\t\t\tpadding: 5 * scale,\r\n\t\t\tfill: textColor\r\n\t\t}));\r\n\t}\r\n}\r\n\r\nexport default Screen;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Screen.js\n **/","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-includes.js\n ** module id = 51\n ** module chunks = 0\n **/","'use strict';\nvar global            = require('./_global')\n  , $export           = require('./_export')\n  , redefine          = require('./_redefine')\n  , redefineAll       = require('./_redefine-all')\n  , meta              = require('./_meta')\n  , forOf             = require('./_for-of')\n  , anInstance        = require('./_an-instance')\n  , isObject          = require('./_is-object')\n  , fails             = require('./_fails')\n  , $iterDetect       = require('./_iter-detect')\n  , setToStringTag    = require('./_set-to-string-tag')\n  , inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  var fixMethod = function(KEY){\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function(a){\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a){\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a){\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance             = new C\n      // early implementations not supports chaining\n      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance\n      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })\n      // most early implementations doesn't supports iterables, most modern - not close it correctly\n      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new\n      // for early implementations -0 and +0 not the same\n      , BUGGY_ZERO = !IS_WEAK && fails(function(){\n        // V8 ~ Chromium 42- fails only with 5+ elements\n        var $instance = new C()\n          , index     = 5;\n        while(index--)$instance[ADDER](index, index);\n        return !$instance.has(-0);\n      });\n    if(!ACCEPT_ITERABLES){ \n      C = wrapper(function(target, iterable){\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base, target, C);\n        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if(IS_WEAK && proto.clear)delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection.js\n ** module id = 52\n ** module chunks = 0\n **/","'use strict';\nvar hide     = require('./_hide')\n  , redefine = require('./_redefine')\n  , fails    = require('./_fails')\n  , defined  = require('./_defined')\n  , wks      = require('./_wks');\n\nmodule.exports = function(KEY, length, exec){\n  var SYMBOL   = wks(KEY)\n    , fns      = exec(defined, SYMBOL, ''[KEY])\n    , strfn    = fns[0]\n    , rxfn     = fns[1];\n  if(fails(function(){\n    var O = {};\n    O[SYMBOL] = function(){ return 7; };\n    return ''[KEY](O) != 7;\n  })){\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function(string, arg){ return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function(string){ return rxfn.call(string, this); }\n    );\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_fix-re-wks.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function(){\n  var that   = anObject(this)\n    , result = '';\n  if(that.global)     result += 'g';\n  if(that.ignoreCase) result += 'i';\n  if(that.multiline)  result += 'm';\n  if(that.unicode)    result += 'u';\n  if(that.sticky)     result += 'y';\n  return result;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_flags.js\n ** module id = 54\n ** module chunks = 0\n **/","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_invoke.js\n ** module id = 55\n ** module chunks = 0\n **/","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object')\n  , cof      = require('./_cof')\n  , MATCH    = require('./_wks')('match');\nmodule.exports = function(it){\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-regexp.js\n ** module id = 56\n ** module chunks = 0\n **/","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-detect.js\n ** module id = 57\n ** module chunks = 0\n **/","// Forced replacement prototype accessors methods\nmodule.exports = require('./_library')|| !require('./_fails')(function(){\n  var K = Math.random();\n  // In FF throws only define methods\n  __defineSetter__.call(null, K, function(){ /* empty */});\n  delete require('./_global')[K];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-forced-pam.js\n ** module id = 58\n ** module chunks = 0\n **/","exports.f = Object.getOwnPropertySymbols;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gops.js\n ** module id = 59\n ** module chunks = 0\n **/","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_shared.js\n ** module id = 60\n ** module chunks = 0\n **/","var global = require('./_global')\n  , hide   = require('./_hide')\n  , uid    = require('./_uid')\n  , TYPED  = uid('typed_array')\n  , VIEW   = uid('view')\n  , ABV    = !!(global.ArrayBuffer && global.DataView)\n  , CONSTR = ABV\n  , i = 0, l = 9, Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile(i < l){\n  if(Typed = global[TypedArrayConstructors[i++]]){\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV:    ABV,\n  CONSTR: CONSTR,\n  TYPED:  TYPED,\n  VIEW:   VIEW\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_typed.js\n ** module id = 61\n ** module chunks = 0\n **/","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object')\n  , toIndex  = require('./_to-index')\n  , toLength = require('./_to-length');\nmodule.exports = function fill(value /*, start = 0, end = @length */){\n  var O      = toObject(this)\n    , length = toLength(O.length)\n    , aLen   = arguments.length\n    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)\n    , end    = aLen > 2 ? arguments[2] : undefined\n    , endPos = end === undefined ? length : toIndex(end, length);\n  while(endPos > index)O[index++] = value;\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-fill.js\n ** module id = 62\n ** module chunks = 0\n **/","'use strict';\nvar $defineProperty = require('./_object-dp')\n  , createDesc      = require('./_property-desc');\n\nmodule.exports = function(object, index, value){\n  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_create-property.js\n ** module id = 63\n ** module chunks = 0\n **/","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_dom-create.js\n ** module id = 64\n ** module chunks = 0\n **/","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_enum-bug-keys.js\n ** module id = 65\n ** module chunks = 0\n **/","var MATCH = require('./_wks')('match');\nmodule.exports = function(KEY){\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch(e){\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch(f){ /* empty */ }\n  } return true;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_fails-is-regexp.js\n ** module id = 66\n ** module chunks = 0\n **/","module.exports = require('./_global').document && document.documentElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_html.js\n ** module id = 67\n ** module chunks = 0\n **/","var isObject       = require('./_is-object')\n  , setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function(that, target, C){\n  var P, S = target.constructor;\n  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){\n    setPrototypeOf(that, P);\n  } return that;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_inherit-if-required.js\n ** module id = 68\n ** module chunks = 0\n **/","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-array-iter.js\n ** module id = 69\n ** module chunks = 0\n **/","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-array.js\n ** module id = 70\n ** module chunks = 0\n **/","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-create.js\n ** module id = 71\n ** module chunks = 0\n **/","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-define.js\n ** module id = 72\n ** module chunks = 0\n **/","// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x){\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_math-expm1.js\n ** module id = 73\n ** module chunks = 0\n **/","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x){\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_math-sign.js\n ** module id = 74\n ** module chunks = 0\n **/","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_microtask.js\n ** module id = 75\n ** module chunks = 0\n **/","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_set-proto.js\n ** module id = 76\n ** module chunks = 0\n **/","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_shared-key.js\n ** module id = 77\n ** module chunks = 0\n **/","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_species-constructor.js\n ** module id = 78\n ** module chunks = 0\n **/","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-at.js\n ** module id = 79\n ** module chunks = 0\n **/","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp')\n  , defined  = require('./_defined');\n\nmodule.exports = function(that, searchString, NAME){\n  if(isRegExp(searchString))throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-context.js\n ** module id = 80\n ** module chunks = 0\n **/","'use strict';\nvar toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n\nmodule.exports = function repeat(count){\n  var str = String(defined(this))\n    , res = ''\n    , n   = toInteger(count);\n  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\n  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\n  return res;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-repeat.js\n ** module id = 81\n ** module chunks = 0\n **/","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-ws.js\n ** module id = 82\n ** module chunks = 0\n **/","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_task.js\n ** module id = 83\n ** module chunks = 0\n **/","'use strict';\nvar global         = require('./_global')\n  , DESCRIPTORS    = require('./_descriptors')\n  , LIBRARY        = require('./_library')\n  , $typed         = require('./_typed')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , fails          = require('./_fails')\n  , anInstance     = require('./_an-instance')\n  , toInteger      = require('./_to-integer')\n  , toLength       = require('./_to-length')\n  , gOPN           = require('./_object-gopn').f\n  , dP             = require('./_object-dp').f\n  , arrayFill      = require('./_array-fill')\n  , setToStringTag = require('./_set-to-string-tag')\n  , ARRAY_BUFFER   = 'ArrayBuffer'\n  , DATA_VIEW      = 'DataView'\n  , PROTOTYPE      = 'prototype'\n  , WRONG_LENGTH   = 'Wrong length!'\n  , WRONG_INDEX    = 'Wrong index!'\n  , $ArrayBuffer   = global[ARRAY_BUFFER]\n  , $DataView      = global[DATA_VIEW]\n  , Math           = global.Math\n  , RangeError     = global.RangeError\n  , Infinity       = global.Infinity\n  , BaseBuffer     = $ArrayBuffer\n  , abs            = Math.abs\n  , pow            = Math.pow\n  , floor          = Math.floor\n  , log            = Math.log\n  , LN2            = Math.LN2\n  , BUFFER         = 'buffer'\n  , BYTE_LENGTH    = 'byteLength'\n  , BYTE_OFFSET    = 'byteOffset'\n  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER\n  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH\n  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nvar packIEEE754 = function(value, mLen, nBytes){\n  var buffer = Array(nBytes)\n    , eLen   = nBytes * 8 - mLen - 1\n    , eMax   = (1 << eLen) - 1\n    , eBias  = eMax >> 1\n    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0\n    , i      = 0\n    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0\n    , e, m, c;\n  value = abs(value)\n  if(value != value || value === Infinity){\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if(value * (c = pow(2, -e)) < 1){\n      e--;\n      c *= 2;\n    }\n    if(e + eBias >= 1){\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if(value * c >= 2){\n      e++;\n      c /= 2;\n    }\n    if(e + eBias >= eMax){\n      m = 0;\n      e = eMax;\n    } else if(e + eBias >= 1){\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n};\nvar unpackIEEE754 = function(buffer, mLen, nBytes){\n  var eLen  = nBytes * 8 - mLen - 1\n    , eMax  = (1 << eLen) - 1\n    , eBias = eMax >> 1\n    , nBits = eLen - 7\n    , i     = nBytes - 1\n    , s     = buffer[i--]\n    , e     = s & 127\n    , m;\n  s >>= 7;\n  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if(e === 0){\n    e = 1 - eBias;\n  } else if(e === eMax){\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n};\n\nvar unpackI32 = function(bytes){\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n};\nvar packI8 = function(it){\n  return [it & 0xff];\n};\nvar packI16 = function(it){\n  return [it & 0xff, it >> 8 & 0xff];\n};\nvar packI32 = function(it){\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n};\nvar packF64 = function(it){\n  return packIEEE754(it, 52, 8);\n};\nvar packF32 = function(it){\n  return packIEEE754(it, 23, 4);\n};\n\nvar addGetter = function(C, key, internal){\n  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});\n};\n\nvar get = function(view, bytes, index, isLittleEndian){\n  var numIndex = +index\n    , intIndex = toInteger(numIndex);\n  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b\n    , start = intIndex + view[$OFFSET]\n    , pack  = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n};\nvar set = function(view, bytes, index, conversion, value, isLittleEndian){\n  var numIndex = +index\n    , intIndex = toInteger(numIndex);\n  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b\n    , start = intIndex + view[$OFFSET]\n    , pack  = conversion(+value);\n  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n};\n\nvar validateArrayBufferArguments = function(that, length){\n  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);\n  var numberLength = +length\n    , byteLength   = toLength(numberLength);\n  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);\n  return byteLength;\n};\n\nif(!$typed.ABV){\n  $ArrayBuffer = function ArrayBuffer(length){\n    var byteLength = validateArrayBufferArguments(this, length);\n    this._b       = arrayFill.call(Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength){\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH]\n      , offset       = toInteger(byteOffset);\n    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if(DESCRIPTORS){\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset){\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset){\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /*, littleEndian */){\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /*, littleEndian */){\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /*, littleEndian */){\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /*, littleEndian */){\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /*, littleEndian */){\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /*, littleEndian */){\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value){\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value){\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /*, littleEndian */){\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /*, littleEndian */){\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /*, littleEndian */){\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /*, littleEndian */){\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if(!fails(function(){\n    new $ArrayBuffer;     // eslint-disable-line no-new\n  }) || !fails(function(){\n    new $ArrayBuffer(.5); // eslint-disable-line no-new\n  })){\n    $ArrayBuffer = function ArrayBuffer(length){\n      return new BaseBuffer(validateArrayBufferArguments(this, length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){\n      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);\n    };\n    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2))\n    , $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value){\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value){\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_typed-buffer.js\n ** module id = 84\n ** module chunks = 0\n **/","var global         = require('./_global')\n  , core           = require('./_core')\n  , LIBRARY        = require('./_library')\n  , wksExt         = require('./_wks-ext')\n  , defineProperty = require('./_object-dp').f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_wks-define.js\n ** module id = 85\n ** module chunks = 0\n **/","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/core.get-iterator-method.js\n ** module id = 86\n ** module chunks = 0\n **/","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.iterator.js\n ** module id = 87\n ** module chunks = 0\n **/","import { Circle, Line } from 'konva';\r\nimport Wire from './Wire.js';\r\n\r\nclass Input extends Circle {\r\n\tconstructor(x, y, ctx) {\r\n\t\tsuper({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\tradius: 8,\r\n\t\t\tstrokeWidth: 2,\r\n\t\t\tfill: '#f2f2f2',\r\n\t\t\tstroke: 'black'\r\n\t\t});\r\n\t\t/* attributes */\r\n\t\tthis.x = this.attrs.x;\r\n\t\tthis.y = this.attrs.y;\r\n\t\tthis.radius = 10;\r\n\t\tthis.context = ctx;\r\n\r\n\t\t/* info */\r\n\t\tthis.type = 'Input';\r\n\t\tthis.id = this.type + ' #' + Math.floor(Math.random() * 1000);\r\n\t\tthis.used = false;\r\n\t\tthis.connectInput = null;\r\n\t\tthis.connecting = false;\r\n\r\n\t\t/* handlers */\r\n\t\tthis.on('mouseover', this.mouseOverHandler);\r\n\t\tthis.on('mouseout', this.mouseOutHandler);\r\n\t\tthis.on('dblclick', this.dblClickHandler);\r\n\t}\r\n\tconnect(input) {\r\n\t\tthis.used = true;\r\n\t\tthis.connectInput = input;\r\n\t\tthis.wire = input.wire;\r\n\t\tif(this.pointer) this.pointer.destroy();\r\n\t}\r\n\tdisconnect() {\r\n\t\tthis.used = false;\r\n\t\tthis.pointer = null;\r\n\t\tthis.connectInput = null;\r\n\t}\r\n\tmouseOverHandler(e) {\r\n\t\t//console.log(this.id + ' mouse over');\r\n\t\tif (!this.pointer && !this.used) {\r\n\t\t\tthis.fill('#f4d742');\r\n\t\t\tthis.context.draw();\r\n\t\t\tthis.pointer = new Circle({\r\n\t\t\t\tx: this.x,\r\n\t\t\t\ty: this.y,\r\n\t\t\t\tradius: 8,\r\n\t\t\t\tfill: 'red',\r\n\t\t\t\tdraggable: true\r\n\t\t\t});\r\n\t\t\tthis.context.addElement(this.pointer);\r\n\t\t\tthis.pointer.on('dragstart', this.startPointer.bind(this));\r\n\t\t\tthis.pointer.on('dragmove', this.updatePointer.bind(this));\r\n\t\t\tthis.pointer.on('dragend', this.connectPointer.bind(this));\r\n\t\t}\r\n\t}\r\n\tmouseOutHandler(e) {\r\n\t\tthis.fill('#f2f2f2');\r\n\t\tthis.context.draw();\r\n\t}\r\n\tdblClickHandler(e) {\r\n\t\tconsole.log('Double clicked...' + this.used);\r\n\t\tif (this.used) {\r\n\t\t\tthis.wire.destroy();\r\n\t\t\tthis.connectInput.disconnect();\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.context.draw();\r\n\t\t}\r\n\t}\r\n\tstartPointer(e) {\r\n\t\tlet x = e.evt.offsetX;\r\n\t\tlet y = e.evt.offsetY;\r\n\t\tconsole.log(`Start => x: ${x}, y: ${y}`);\r\n\t\tthis.wire = new Wire([\t\r\n\t\t\tthis.x,\r\n\t\t\tthis.y,\r\n\t\t\t(this.x + x) / 2,\r\n\t\t\tthis.y,\r\n\t\t\t(this.x + x) / 2,\r\n\t\t\ty,\t\t\r\n\t\t\tx,\r\n\t\t\ty\r\n\t\t\t],\r\n\t\t\tthis.context\r\n\t\t);\r\n\t\tthis.context.addElement(this.wire);\r\n\t\tthis.context.draw();\r\n\t}\r\n\tupdatePointer(e) {\r\n\t\tlet x = e.evt.offsetX;\r\n\t\tlet y = e.evt.offsetY;\r\n\t\tthis.wire.points(\r\n\t\t\tthis.wire.update([\t\r\n\t\t\t\tthis.x,\r\n\t\t\t\tthis.y,\r\n\t\t\t\t(this.x + x) / 2,\r\n\t\t\t\tthis.y,\r\n\t\t\t\t(this.x + x) / 2,\r\n\t\t\t\ty,\t\t\r\n\t\t\t\tx,\r\n\t\t\t\ty\r\n\t\t\t\t]\r\n\t\t\t)\r\n\t\t);\r\n\t\tthis.context.draw();\r\n\t}\r\n\r\n\tconnectPointer(e) {\r\n\t\tlet x = e.evt.offsetX;\r\n\t\tlet y = e.evt.offsetY;\r\n\t\tlet connected = false;\r\n\t\tconsole.log(`Connect => x: ${x}, y: ${y}`);\r\n\t\tthis.wire.points([\t\r\n\t\t\tthis.x,\r\n\t\t\tthis.y,\r\n\t\t\t(this.x + x) / 2,\r\n\t\t\tthis.y,\r\n\t\t\t(this.x + x) / 2,\r\n\t\t\ty,\t\t\r\n\t\t\tx,\r\n\t\t\ty\r\n\t\t\t]);\r\n\t\tconsole.log('Checking elements...');\r\n\t\tfor (let el of this.context.getElements()) {\r\n\t\t\tif (el.type === 'Input') {\r\n\t\t\t\tconsole.log(`${el.id} x:${el.x} \r\n\t\t\t\t\ty:${el.y} with r:${el.radius}`);\r\n\t\t\t\tif (el.x + el.radius*2 >= x && el.x - el.radius*2 <= x \r\n\t\t\t\t\t&& el.y - el.radius*2 <= y && el.y + el.radius*2 >= y)\r\n\t\t\t\t\t\tif (el.used === false) {\r\n\t\t\t\t\t\t\tel.connect(this);\r\n\t\t\t\t\t\t\tthis.connect(el);\r\n\t\t\t\t\t\t\tconnected = true;\r\n\t\t\t\t\t\t\tthis.wire.connected = true;\r\n\t\t\t\t\t\t\tthis.wire.points([\t\r\n\t\t\t\t\t\t\t\tthis.x,\r\n\t\t\t\t\t\t\t\tthis.y,\r\n\t\t\t\t\t\t\t\t(this.x + x) / 2,\r\n\t\t\t\t\t\t\t\tthis.y,\r\n\t\t\t\t\t\t\t\t(this.x + x) / 2,\r\n\t\t\t\t\t\t\t\ty,\t\t\r\n\t\t\t\t\t\t\t\tel.x,\r\n\t\t\t\t\t\t\t\tel.y\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\tthis.pointer.destroy();\r\n\t\t\t\t\t\t\tthis.context.draw();\r\n\t\t\t\t\t\t\tconsole.log(`Element - ${el.id}`);\r\n\t\t\t\t\t\t\tconsole.log('Connected... Success');\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log('Connection failure...');\r\n\t\tif (connected === false) {\r\n\t\t\tthis.wire.destroy();\r\n\t\t\tthis.pointer.destroy();\r\n\t\t\tthis.connecting = false;\r\n\t\t\tthis.used = false;\r\n\t\t\tthis.pointer = null;\r\n\t\t\tthis.context.draw();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Input;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Input.js\n **/","var cof = require('./_cof');\nmodule.exports = function(it, msg){\n  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);\n  return +it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_a-number-value.js\n ** module id = 89\n ** module chunks = 0\n **/","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object')\n  , toIndex  = require('./_to-index')\n  , toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){\n  var O     = toObject(this)\n    , len   = toLength(O.length)\n    , to    = toIndex(target, len)\n    , from  = toIndex(start, len)\n    , end   = arguments.length > 2 ? arguments[2] : undefined\n    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)\n    , inc   = 1;\n  if(from < to && to < from + count){\n    inc  = -1;\n    from += count - 1;\n    to   += count - 1;\n  }\n  while(count-- > 0){\n    if(from in O)O[to] = O[from];\n    else delete O[to];\n    to   += inc;\n    from += inc;\n  } return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-copy-within.js\n ** module id = 90\n ** module chunks = 0\n **/","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-from-iterable.js\n ** module id = 91\n ** module chunks = 0\n **/","var aFunction = require('./_a-function')\n  , toObject  = require('./_to-object')\n  , IObject   = require('./_iobject')\n  , toLength  = require('./_to-length');\n\nmodule.exports = function(that, callbackfn, aLen, memo, isRight){\n  aFunction(callbackfn);\n  var O      = toObject(that)\n    , self   = IObject(O)\n    , length = toLength(O.length)\n    , index  = isRight ? length - 1 : 0\n    , i      = isRight ? -1 : 1;\n  if(aLen < 2)for(;;){\n    if(index in self){\n      memo = self[index];\n      index += i;\n      break;\n    }\n    index += i;\n    if(isRight ? index < 0 : length <= index){\n      throw TypeError('Reduce of empty array with no initial value');\n    }\n  }\n  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){\n    memo = callbackfn(memo, self[index], index, O);\n  }\n  return memo;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-reduce.js\n ** module id = 92\n ** module chunks = 0\n **/","'use strict';\nvar aFunction  = require('./_a-function')\n  , isObject   = require('./_is-object')\n  , invoke     = require('./_invoke')\n  , arraySlice = [].slice\n  , factories  = {};\n\nvar construct = function(F, len, args){\n  if(!(len in factories)){\n    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /*, args... */){\n  var fn       = aFunction(this)\n    , partArgs = arraySlice.call(arguments, 1);\n  var bound = function(/* args... */){\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if(isObject(fn.prototype))bound.prototype = fn.prototype;\n  return bound;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_bind.js\n ** module id = 93\n ** module chunks = 0\n **/","'use strict';\nvar dP          = require('./_object-dp').f\n  , create      = require('./_object-create')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)dP(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection-strong.js\n ** module id = 94\n ** module chunks = 0\n **/","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection-to-json.js\n ** module id = 95\n ** module chunks = 0\n **/","'use strict';\nvar redefineAll       = require('./_redefine-all')\n  , getWeak           = require('./_meta').getWeak\n  , anObject          = require('./_an-object')\n  , isObject          = require('./_is-object')\n  , anInstance        = require('./_an-instance')\n  , forOf             = require('./_for-of')\n  , createArrayMethod = require('./_array-methods')\n  , $has              = require('./_has')\n  , arrayFind         = createArrayMethod(5)\n  , arrayFindIndex    = createArrayMethod(6)\n  , id                = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function(that){\n  return that._l || (that._l = new UncaughtFrozenStore);\n};\nvar UncaughtFrozenStore = function(){\n  this.a = [];\n};\nvar findUncaughtFrozen = function(store, key){\n  return arrayFind(store.a, function(it){\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function(key){\n    var entry = findUncaughtFrozen(this, key);\n    if(entry)return entry[1];\n  },\n  has: function(key){\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function(key, value){\n    var entry = findUncaughtFrozen(this, key);\n    if(entry)entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function(key){\n    var index = arrayFindIndex(this.a, function(it){\n      return it[0] === key;\n    });\n    if(~index)this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function(key){\n        if(!isObject(key))return false;\n        var data = getWeak(key);\n        if(data === true)return uncaughtFrozenStore(this)['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key){\n        if(!isObject(key))return false;\n        var data = getWeak(key);\n        if(data === true)return uncaughtFrozenStore(this).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var data = getWeak(anObject(key), true);\n    if(data === true)uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection-weak.js\n ** module id = 96\n ** module chunks = 0\n **/","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_ie8-dom-define.js\n ** module id = 97\n ** module chunks = 0\n **/","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object')\n  , floor    = Math.floor;\nmodule.exports = function isInteger(it){\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-integer.js\n ** module id = 98\n ** module chunks = 0\n **/","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-call.js\n ** module id = 99\n ** module chunks = 0\n **/","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-step.js\n ** module id = 100\n ** module chunks = 0\n **/","// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x){\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_math-log1p.js\n ** module id = 101\n ** module chunks = 0\n **/","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-assign.js\n ** module id = 102\n ** module chunks = 0\n **/","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-dps.js\n ** module id = 103\n ** module chunks = 0\n **/","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject')\n  , gOPN      = require('./_object-gopn').f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gopn-ext.js\n ** module id = 104\n ** module chunks = 0\n **/","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-keys-internal.js\n ** module id = 105\n ** module chunks = 0\n **/","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject')\n  , isEnum    = require('./_object-pie').f;\nmodule.exports = function(isEntries){\n  return function(it){\n    var O      = toIObject(it)\n      , keys   = getKeys(O)\n      , length = keys.length\n      , i      = 0\n      , result = []\n      , key;\n    while(length > i)if(isEnum.call(O, key = keys[i++])){\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-to-array.js\n ** module id = 106\n ** module chunks = 0\n **/","// all object keys, includes non-enumerable and symbols\nvar gOPN     = require('./_object-gopn')\n  , gOPS     = require('./_object-gops')\n  , anObject = require('./_an-object')\n  , Reflect  = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it){\n  var keys       = gOPN.f(anObject(it))\n    , getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_own-keys.js\n ** module id = 107\n ** module chunks = 0\n **/","var $parseFloat = require('./_global').parseFloat\n  , $trim       = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str){\n  var string = $trim(String(str), 3)\n    , result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_parse-float.js\n ** module id = 108\n ** module chunks = 0\n **/","var $parseInt = require('./_global').parseInt\n  , $trim     = require('./_string-trim').trim\n  , ws        = require('./_string-ws')\n  , hex       = /^[\\-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_parse-int.js\n ** module id = 109\n ** module chunks = 0\n **/","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y){\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_same-value.js\n ** module id = 110\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length')\n  , repeat   = require('./_string-repeat')\n  , defined  = require('./_defined');\n\nmodule.exports = function(that, maxLength, fillString, left){\n  var S            = String(defined(that))\n    , stringLength = S.length\n    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n    , intMaxLength = toLength(maxLength);\n  if(intMaxLength <= stringLength || fillStr == '')return S;\n  var fillLen = intMaxLength - stringLength\n    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-pad.js\n ** module id = 111\n ** module chunks = 0\n **/","exports.f = require('./_wks');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_wks-ext.js\n ** module id = 112\n ** module chunks = 0\n **/","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.map.js\n ** module id = 113\n ** module chunks = 0\n **/","// 21.2.5.3 get RegExp.prototype.flags()\nif(require('./_descriptors') && /./g.flags != 'g')require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.flags.js\n ** module id = 114\n ** module chunks = 0\n **/","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.set.js\n ** module id = 115\n ** module chunks = 0\n **/","'use strict';\nvar each         = require('./_array-methods')(0)\n  , redefine     = require('./_redefine')\n  , meta         = require('./_meta')\n  , assign       = require('./_object-assign')\n  , weak         = require('./_collection-weak')\n  , isObject     = require('./_is-object')\n  , getWeak      = meta.getWeak\n  , isExtensible = Object.isExtensible\n  , uncaughtFrozenStore = weak.ufstore\n  , tmp          = {}\n  , InternalMap;\n\nvar wrapper = function(get){\n  return function WeakMap(){\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key){\n    if(isObject(key)){\n      var data = getWeak(key);\n      if(data === true)return uncaughtFrozenStore(this).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value){\n    return weak.def(this, key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')('WeakMap', wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){\n  InternalMap = weak.getConstructor(wrapper);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function(key){\n    var proto  = $WeakMap.prototype\n      , method = proto[key];\n    redefine(proto, key, function(a, b){\n      // store frozen objects on internal weakmap shim\n      if(isObject(a) && !isExtensible(a)){\n        if(!this._f)this._f = new InternalMap;\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.weak-map.js\n ** module id = 116\n ** module chunks = 0\n **/","import { Rect } from 'konva';\r\n\r\nclass Capacity extends Rect {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.inputs = [\r\n\t\t\tnew Input(this.x - 20, this.y + 12.5, this.context),\r\n\t\t\tnew Input(this.x + 70, this.y + 12.5, this.context)\r\n\t\t];\r\n\t\tthis.context.addElements(this.inputs);\r\n\t}\r\n}\r\n\r\nexport default Capacity;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Capacity.js\n **/","import { Rect } from 'konva';\r\n\r\nclass Inductivity extends Rect {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.inputs = [\r\n\t\t\tnew Input(this.x - 20, this.y + 12.5, this.context),\r\n\t\t\tnew Input(this.x + 70, this.y + 12.5, this.context)\r\n\t\t];\r\n\t\tthis.context.addElements(this.inputs);\r\n\t}\r\n}\r\n\r\nexport default Inductivity;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Inductivity.js\n **/","import { Line, Circle, Label } from 'konva';\r\nimport Screen from './Screen.js';\r\n\r\nclass Regulator extends Circle {\r\n\tconstructor(x, y, data, ctx) {\r\n\t\tsuper({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\t//width: 120,\r\n\t\t\t//height: 120,\r\n\t\t\tradius: 20,\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tfill: 'rgba(12,12,12,0.1)',\r\n\t\t\tstroke: 'black'\r\n\t\t});\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.context = ctx;\r\n\t\tthis.pointer = new Line({\r\n\t\t\tpoints: [this.x, this.y, this.x, this.y - 20],\r\n\t\t\tstroke: 'black',\r\n\t\t\tstrokeWidth: 1\r\n\t\t});\r\n\t\tthis.data = data;\r\n\t\tthis.states = this.data.map((el, index) => {\r\n\t\t\tlet label = new Screen(this.x + Math.cos(index * 180 / this.data.length) * 20, this.y + Math.sin(index * 180 / this.data.length) * 20, 'yellow', 'black', el, 0.8);\r\n\t\t\tlabel.rotate(index * 180 / this.data.length);\r\n\t\t\tthis.context.addElement(label);\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t'rotation': index * 180 / this.data.length,\r\n\t\t\t\t'data': el,\r\n\t\t\t\t'label': label\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.stateId = 2;\r\n\t\tthis.curState = this.states[this.stateId];\r\n\t\tconsole.log(`Curstate ${JSON.stringify(this.curState)}`);\r\n\t\tthis.context.addElement(this.pointer);\r\n\t\tthis.spining = false;\r\n\t\tconsole.log(`states - ${JSON.stringify(this.states)}`);\r\n\t\t\r\n\r\n\t \tthis.on('mousedown', (e) => {\r\n\t \t\tthis.spining = true;\r\n        });\r\n\r\n\t \tthis.on('mousemove', (e) => {\r\n\t \t\tif (this.spining === true) {\r\n\t \t\t\tif (e.evt.offsetX >= this.x) {\r\n\t \t\t\t\tthis.spinRight();\r\n\t \t\t\t} else {\r\n\t \t\t\t\tthis.spinLeft();\r\n\t \t\t\t}\r\n\t \t\t}\r\n\t \t});\r\n\r\n        this.on('mouseup', (e) => {\r\n        \tthis.spining = false;\r\n        });\r\n    }\r\n\r\n    spinRight() {\r\n    \tconsole.log('Spining right');\r\n    \tif (!this.stateId == this.data.length - 1) {\r\n    \t\tthis.curState = this.states[++this.stateId];\r\n    \t\t/*this.pointer.points([this.x, this.y, Math.sin(this.curState.rotation) * 20, Math.cos(this.curState.rotation) * 20]);*/\r\n    \t\tthis.rotate(this.curState.rotation);\r\n    \t\tthis.context.draw();\r\n    \t} else {\r\n    \t\treturn false;\r\n    \t}\r\n    \t\r\n    }\r\n    spinLeft() {\r\n    \tconsole.log('Spining left');\r\n    \tif (!this.stateId == 0) {\r\n    \t\tthis.curState = this.states[--this.stateId];\r\n    \t\tthis.rotate(this.curState.rotation);\r\n    \t\t    \t\tthis.context.draw();\r\n\r\n    \t} else {\r\n    \t\treturn false;\r\n    \t}\r\n    }\r\n    check() {\r\n    \tconsole.log(`${this.spining}`);\r\n    }\r\n}\r\n\r\nexport default Regulator;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Regulator.js\n **/","import { Rect } from 'konva';\r\nimport Screen from './Screen.js';\r\nimport Input from './Input.js';\r\n\r\nclass Resistor extends Rect {\r\n\tconstructor(x, y, resistance, ctx) {\r\n\t\tsuper({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: 50,\r\n\t\t\theight: 25,\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tfill: 'rgba(12,12,12,0.1)',\r\n\t\t\tstroke: 'black'\r\n\t\t});\r\n\t\tthis.tooltip = null;\r\n\t\tthis.context = ctx;\r\n\t\tthis.resistance = resistance;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\tthis.inputs = [\r\n\t\t\tnew Input(this.x - 20, this.y + 12.5, this.context),\r\n\t\t\tnew Input(this.x + 70, this.y + 12.5, this.context)\r\n\t\t];\r\n\t\tthis.context.addElements(this.inputs);\r\n\t\tthis.on('mouseover', this.mouseOverHandler.bind(this));\r\n\t\tthis.on('mouseout', this.mouseOutHandler.bind(this));\r\n\t}\r\n\r\n\tmouseOverHandler(e) {\r\n\t\tif (!this.tooltip) {\r\n\t\t\tthis.tooltip = new Screen(this.x + 25, this.y + 12.5, 'black', '#f2f2f2', `${this.resistance} Ом`, 0.8);\r\n\t\t\tthis.context.addElement(this.tooltip);\r\n\t\t}\r\n\t}\r\n\tmouseOutHandler(e) {\r\n\t\tif (this.tooltip) {\r\n\t\t\tthis.tooltip.destroy();\r\n\t\t\tthis.tooltip = null;\r\n\t\t\tthis.context.draw();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default Resistor;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Resistor.js\n **/","import { Layer, Stage } from 'konva';\r\n\r\nclass Stand extends Layer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet container = document.querySelector('#stand');\r\n\t\tlet width = container.offsetWidth;\r\n\t    let height = container.offsetHeight;\r\n\t\tthis.stage = new Stage({\r\n\t\t\tcontainer: 'stand',\r\n\t      \twidth: width,\r\n\t      \theight: height\r\n\t\t});\r\n\t\tthis.elements = [];\r\n\t}\r\n\r\n\taddElement(element) {\r\n\t\tthis.add(element);\r\n\t\tthis.stage.add(this);\r\n\t\tthis.elements.push(element);\r\n\t}\r\n\taddElements(elements) {\r\n\t\tfor (let element of elements) {\r\n\t\t\tthis.add(element);\r\n\t\t\tthis.elements.push(element);\r\n\t\t}\r\n\t\tthis.stage.add(this);\r\n\t}\r\n\tgetElements() {\r\n\t\treturn this.elements;\r\n\t}\r\n}\r\n\r\nexport default Stand;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Stand.js\n **/","import { Line, Circle } from 'konva';\r\nimport Screen from './Screen.js';\r\n\r\nclass Wire extends Line {\r\n\tconstructor(points, ctx) {\r\n\t\tsuper({\r\n\t\t\tpoints: points,\r\n\t\t\tstroke: 'red',\r\n\t\t\tstokeWidth: 3\r\n\t\t});\r\n\t\tthis.type = 'Wire';\r\n\t\tthis.connected = false;\r\n\t\tthis.x = (points[2] + points[0]) / 2;\r\n\t\tthis.y = (points[3] + points[1]) / 2;\r\n\t\tthis.id = this.type + ' #' + Math.floor(Math.random() * 1000);\r\n\t\tthis.context = ctx;\r\n\t\tthis.tooltip = null;\r\n\t\tthis.on('mouseover', this.mouseOverHandler.bind(this));\r\n\t\tthis.on('mouseout', this.mouseOutHandler.bind(this));\r\n\t}\r\n\tmouseOverHandler(e) {\r\n\t\tif (this.connected && !this.tooltip) {\r\n\t\t\tthis.tooltip = new Screen(this.x, this.y, 'black', '#f2f2f2', '12 A');\r\n\t\t\tthis.context.addElement(this.tooltip);\r\n\t\t}\r\n\t}\r\n\tmouseOutHandler(e) {\r\n\t\tif (this.tooltip) {\r\n\t\t\tthis.tooltip.destroy();\r\n\t\t\tthis.tooltip = null;\r\n\t\t\tthis.context.draw();\r\n\t\t}\r\n\t}\r\n\tupdate(points) {\r\n\t\tthis.x = (points[4] + points[0]) / 2;\r\n\t\tthis.y = (points[5] + points[1]) / 2;\r\n\t\treturn points;\r\n\t}\r\n}\r\n\r\nexport default Wire;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/StandComponents/Wire.js\n **/","'use strict';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nimport 'babel-polyfill';\nimport '../styles/index.scss';\nimport StandBuilder from './standBuilder.js';\n\nconst standBuilder = new StandBuilder();\nlet labs = {\n\t\"Lab_1\": {\n\t\t\"elements\": [\n\t\t\t{\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 100,\n\t\t\t\t\"y\": 100\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 100,\n\t\t\t\t\"y\": 200\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"Resistor\",\n\t\t\t\t\"x\": 250,\n\t\t\t\t\"y\": 300,\n\t\t\t\t\"resistance\": 100,\n\t\t\t}\n\t\t]\n\t},\n\t\"Lab_2\": {\n\t\t\"elements\": [\n\t\t\t{\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 300,\n\t\t\t\t\"y\": 100\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"Input\",\n\t\t\t\t\"x\": 100,\n\t\t\t\t\"y\": 200\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"Resistor\",\n\t\t\t\t\"x\": 250,\n\t\t\t\t\"y\": 300,\n\t\t\t\t\"resistance\": 100,\n\t\t\t}\n\t\t]\n\t}\n};\nlet LabList = document.getElementById(\"selectLab\");\nlet sendBtn = document.getElementById(\"sendBtn\");\nsendBtn.addEventListener('click', (e) => {\n\tconsole.log(standBuilder.toJSON());\n\tlet data =\t[\n\t\t\t{\n\t\t\t\ttype: \"Input\",\n\t\t\t\tx: 300,\n\t\t\t\ty: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"Input\",\n\t\t\t\tx: 100,\n\t\t\t\ty: 200\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"Wire\",\n\t\t\t\tinput_1_id: '1',\n\t\t\t\tinput_2_id: '2'\n\t\t\t}\n\t\t];\n\t$.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"http://localhost:3000/check\",\n\t\txhrFields: {\n        \twithCredentials: false\n\t    },\n\t    crossDomain: true,\n\t    contentType: 'application/json',\n\t\tdata: JSON.stringify(data)\n\t}).done((msg) => {\n\t\talert(\"Answer = \" + JSON.stringify(msg));\n\t});\n});\nLabList.addEventListener('change', (e) => {\n\tchangeStand();\n});\nchangeStand();\n\nfunction changeStand() {\n\tif (standBuilder.isDirty === true) {\n\t\tstandBuilder.clear();\n\t}\n\tlet selectId = LabList.options.selectedIndex;\n\tlet labId = LabList.options[selectId].value;\n\tlet selectedLab = labs[labId];\n\tlet data = selectedLab;\n\tstandBuilder.build(data);\n}\n\n/* about page scroliing */\n\n\t\t\n\t\t/* Write JavaScript here */\n\n\t\t\n//Detecting MSIE versions\n/*var msIE = function(){\n\tvar ieVersion = 0;\n\tif (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;\n\t\tieVersion=new Number(RegExp.$1) // capture x.x portion and store as a number\n\t}\t\n\treturn {\n\t\tisIE: function(){\n\t\t\treturn ieVersion ? true : false;\n\t\t},\n\t\tisOldIE: function(){\n\t\t\treturn (ieVersion>0 && ieVersion<9);\n\t\t},\n\t\tgetIEVersion: function(){\n\t\t\treturn ieVersion;\n\t\t}\n\t}\n}();*/\n//console fix for IE8\nif (typeof console === \"undefined\" || typeof console.log === \"undefined\") {\n     console = {};\n     console.log = function() {};\n};\n\n\n/*\nvar currentPageIndex = 0;\nvar numberOfPages = 5;\nvar pageHeight = 800;\n\nvar currentSubPageIndex = 0;\nvar numberOfSubPages = 2;\nvar subPageHeight = 400;\n\nvar transitionDuration = 2000;\nvar quietPeriodBetweenTwoScrollEvents = 400;\nvar lastTransitionTime = 0;\nvar lastScrollEventTime = 0;\n\n\nfunction pageScroll(element, position) {\n\tif(msIE.isOldIE()){\n\t\t$(element).animate({scrollTop:(position)}, 800, 'swing', function(){});\n\t\treturn;\n\t}\n\tvar translation = \"translate3d(0,\"+(-(position))+\"px,0)\";\n\tif(msIE.isIE()){\n\t\tif(msIE.getIEVersion()==9 ){\n\t\t\ttranslation = \"translate(0,\"+(-(position))+\"px)\";\n\t\t}\n\t}\n\t$(element).css({\n\t\t'transform': translation,\n\t\t'-webkit-transform': translation,\n\t\t'-moz-transform': translation,\n\t\t'-o-transform': translation,\n\t\t'-ms-transform': translation\n\t});\n}\n\nfunction next(e){\n  if(!(currentPageIndex == (numberOfPages - 1))){\n\t\tcurrentPageIndex++;\n\t\tpageScroll(\"body\",currentPageIndex * pageHeight);\n\t}\n}\nfunction prev(e){\n\tif(!(currentPageIndex == 0)){\n\t\tcurrentPageIndex--;\n\t\tpageScroll(\"body\",currentPageIndex * pageHeight);\n\t}\n}\nfunction nextSubPage(e){\n\tif(!(currentSubPageIndex == (numberOfSubPages - 1))){\n\t\tcurrentSubPageIndex++;\n\t\tpageScroll(\".subScrollPage\", currentSubPageIndex * subPageHeight);\n\t\te.stopPropagation();\n\t}else{\n\t\t//next(e);\n\t\te.stopPropagation();\n\t}\n}\nfunction prevSubPage(e){\n\tif(!(currentSubPageIndex == 0)){\n\t\tcurrentSubPageIndex--;\n\t\tpageScroll(\".subScrollPage\", currentSubPageIndex * subPageHeight);\n\t\te.stopPropagation();\n\t}else{\n\t\t//prev(e);\n\t\te.stopPropagation();\n\t}\n}\n\n\n\n$( document ).ready(function() {\n\n\t$(\"body\").scrollsteps({\n\t\tup: prev,\n\t\tdown: next\n\t});\n\t$(\"#subScrollFrame\").scrollsteps({\n\t\tup: prevSubPage,\n\t\tdown: nextSubPage\n\t});\n\n\n\tpageHeight = window.innerHeight;\n\t$(\".fullScreenPage\").css(\"height\",pageHeight);\n\n});\n\n$( window ).resize(function() {\n\tpageHeight = window.innerHeight;\n\t$(\".fullScreenPage\").css(\"height\",pageHeight);\n\tpageScroll();\n});\n\n\t\t\n\t\t\n\t*/\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/index.js\n **/","import Stand from './StandComponents/Stand.js';\r\nimport Input from './StandComponents/Input.js';\r\nimport Screen from './StandComponents/Screen.js';\r\nimport Regulator from './StandComponents/Regulator.js';\r\nimport Resistor from './StandComponents/Resistor.js';\r\nimport Inductivity from './StandComponents/Inductivity.js';\r\nimport Capacity from './StandComponents/Capacity.js';\r\n\r\nclass StandBuilder {\r\n\tconstructor() {\r\n\t\tthis.stand = new Stand();\r\n\t\tthis.isDirty = false;\r\n\t}\r\n\r\n\tbuild(data) {\r\n\t\tthis.isDirty = true;\r\n\t\tfor (let el of data.elements) {\r\n\t\t\tthis.stand.addElement(this.createElement(el));\r\n\t\t}\r\n\t}\r\n\tclear() {\r\n\t\tthis.isDirty = false;\r\n\t\tthis.stand.elements.map((e) => {\r\n\t\t\te.destroy();\r\n\t\t});\r\n\t}\r\n\tcreateElement(el) {\r\n\t\tlet element;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'Input':\r\n\t\t\t\telement = new Input(el.x, el.y, this.stand);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Screen':\r\n\t\t\t\telement = new Screen(el.x, el.y, el.textColor, el.backgroundColor, el.text);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Regulator':\r\n\t\t\t\telement = new Regulator(el.x, el.y, el.data, this.stand);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Resistor':\r\n\t\t\t\telement = new Resistor(el.x, el.y, el.resistance, this.stand);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\ttoJSON() {\r\n\t\tlet elements = this.stand.getElements();\r\n\t\tlet standJSON = [];\r\n\t\tfor (let element of elements) {\r\n\t\t\tstandJSON.push({\r\n\t\t\t\ttype: element.type ? element.type : 'null',\r\n\t\t\t\tid: element.id ? element.id : 'null',\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn (standJSON);\r\n\t}\r\n}\r\n\r\nexport default StandBuilder;\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/standBuilder.js\n **/","\"use strict\";\n\nrequire(\"core-js/shim\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nrequire(\"core-js/fn/regexp/escape\");\n\n/* eslint max-len: 0 */\n\nif (global._babelPolyfill) {\n  throw new Error(\"only one instance of babel-polyfill is allowed\");\n}\nglobal._babelPolyfill = true;\n\n// Should be removed in the next major release:\n\nvar DEFINE_PROPERTY = \"defineProperty\";\nfunction define(O, key, value) {\n  O[key] || Object[DEFINE_PROPERTY](O, key, {\n    writable: true,\n    configurable: true,\n    value: value\n  });\n}\n\ndefine(String.prototype, \"padLeft\", \"\".padStart);\ndefine(String.prototype, \"padRight\", \"\".padEnd);\n\n\"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill\".split(\",\").forEach(function (key) {\n  [][key] && define(Array, key, Function.call.bind([][key]));\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-polyfill/lib/index.js\n ** module id = 125\n ** module chunks = 0\n **/","require('../../modules/core.regexp.escape');\nmodule.exports = require('../../modules/_core').RegExp.escape;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/fn/regexp/escape.js\n ** module id = 126\n ** module chunks = 0\n **/","var isObject = require('./_is-object')\n  , isArray  = require('./_is-array')\n  , SPECIES  = require('./_wks')('species');\n\nmodule.exports = function(original){\n  var C;\n  if(isArray(original)){\n    C = original.constructor;\n    // cross-realm fallback\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n    if(isObject(C)){\n      C = C[SPECIES];\n      if(C === null)C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-species-constructor.js\n ** module id = 127\n ** module chunks = 0\n **/","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-species-create.js\n ** module id = 128\n ** module chunks = 0\n **/","'use strict';\nvar anObject    = require('./_an-object')\n  , toPrimitive = require('./_to-primitive')\n  , NUMBER      = 'number';\n\nmodule.exports = function(hint){\n  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');\n  return toPrimitive(anObject(this), hint != NUMBER);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_date-to-primitive.js\n ** module id = 129\n ** module chunks = 0\n **/","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys')\n  , gOPS    = require('./_object-gops')\n  , pIE     = require('./_object-pie');\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_enum-keys.js\n ** module id = 130\n ** module chunks = 0\n **/","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject');\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_keyof.js\n ** module id = 131\n ** module chunks = 0\n **/","'use strict';\nvar path      = require('./_path')\n  , invoke    = require('./_invoke')\n  , aFunction = require('./_a-function');\nmodule.exports = function(/* ...pargs */){\n  var fn     = aFunction(this)\n    , length = arguments.length\n    , pargs  = Array(length)\n    , i      = 0\n    , _      = path._\n    , holder = false;\n  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;\n  return function(/* ...args */){\n    var that = this\n      , aLen = arguments.length\n      , j = 0, k = 0, args;\n    if(!holder && !aLen)return invoke(fn, pargs, that);\n    args = pargs.slice();\n    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];\n    while(aLen > k)args.push(arguments[k++]);\n    return invoke(fn, args, that);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_partial.js\n ** module id = 132\n ** module chunks = 0\n **/","module.exports = require('./_global');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_path.js\n ** module id = 133\n ** module chunks = 0\n **/","module.exports = function(regExp, replace){\n  var replacer = replace === Object(replace) ? function(part){\n    return replace[part];\n  } : replace;\n  return function(it){\n    return String(it).replace(regExp, replacer);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_replacer.js\n ** module id = 134\n ** module chunks = 0\n **/","// https://github.com/benjamingr/RexExp.escape\nvar $export = require('./_export')\n  , $re     = require('./_replacer')(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/core.regexp.escape.js\n ** module id = 135\n ** module chunks = 0\n **/","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', {copyWithin: require('./_array-copy-within')});\n\nrequire('./_add-to-unscopables')('copyWithin');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.copy-within.js\n ** module id = 136\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $every  = require('./_array-methods')(4);\n\n$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {\n  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\n  every: function every(callbackfn /* , thisArg */){\n    return $every(this, callbackfn, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.every.js\n ** module id = 137\n ** module chunks = 0\n **/","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', {fill: require('./_array-fill')});\n\nrequire('./_add-to-unscopables')('fill');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.fill.js\n ** module id = 138\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $filter = require('./_array-methods')(2);\n\n$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {\n  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n  filter: function filter(callbackfn /* , thisArg */){\n    return $filter(this, callbackfn, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.filter.js\n ** module id = 139\n ** module chunks = 0\n **/","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(6)\n  , KEY     = 'findIndex'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.find-index.js\n ** module id = 140\n ** module chunks = 0\n **/","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(5)\n  , KEY     = 'find'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.find.js\n ** module id = 141\n ** module chunks = 0\n **/","'use strict';\nvar $export  = require('./_export')\n  , $forEach = require('./_array-methods')(0)\n  , STRICT   = require('./_strict-method')([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */){\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.for-each.js\n ** module id = 142\n ** module chunks = 0\n **/","'use strict';\nvar ctx            = require('./_ctx')\n  , $export        = require('./_export')\n  , toObject       = require('./_to-object')\n  , call           = require('./_iter-call')\n  , isArrayIter    = require('./_is-array-iter')\n  , toLength       = require('./_to-length')\n  , createProperty = require('./_create-property')\n  , getIterFn      = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.from.js\n ** module id = 143\n ** module chunks = 0\n **/","'use strict';\nvar $export       = require('./_export')\n  , $indexOf      = require('./_array-includes')(false)\n  , $native       = [].indexOf\n  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? $native.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.index-of.js\n ** module id = 144\n ** module chunks = 0\n **/","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', {isArray: require('./_is-array')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.is-array.js\n ** module id = 145\n ** module chunks = 0\n **/","'use strict';\n// 22.1.3.13 Array.prototype.join(separator)\nvar $export   = require('./_export')\n  , toIObject = require('./_to-iobject')\n  , arrayJoin = [].join;\n\n// fallback for not array-like strings\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\n  join: function join(separator){\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.join.js\n ** module id = 146\n ** module chunks = 0\n **/","'use strict';\nvar $export       = require('./_export')\n  , toIObject     = require('./_to-iobject')\n  , toInteger     = require('./_to-integer')\n  , toLength      = require('./_to-length')\n  , $native       = [].lastIndexOf\n  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){\n    // convert -0 to +0\n    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;\n    var O      = toIObject(this)\n      , length = toLength(O.length)\n      , index  = length - 1;\n    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));\n    if(index < 0)index = length + index;\n    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;\n    return -1;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.last-index-of.js\n ** module id = 147\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $map    = require('./_array-methods')(1);\n\n$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n  map: function map(callbackfn /* , thisArg */){\n    return $map(this, callbackfn, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.map.js\n ** module id = 148\n ** module chunks = 0\n **/","'use strict';\nvar $export        = require('./_export')\n  , createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function(){\n  function F(){}\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */){\n    var index  = 0\n      , aLen   = arguments.length\n      , result = new (typeof this == 'function' ? this : Array)(aLen);\n    while(aLen > index)createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.of.js\n ** module id = 149\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */){\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.reduce-right.js\n ** module id = 150\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {\n  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\n  reduce: function reduce(callbackfn /* , initialValue */){\n    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.reduce.js\n ** module id = 151\n ** module chunks = 0\n **/","'use strict';\nvar $export    = require('./_export')\n  , html       = require('./_html')\n  , cof        = require('./_cof')\n  , toIndex    = require('./_to-index')\n  , toLength   = require('./_to-length')\n  , arraySlice = [].slice;\n\n// fallback for not array-like ES3 strings and DOM objects\n$export($export.P + $export.F * require('./_fails')(function(){\n  if(html)arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end){\n    var len   = toLength(this.length)\n      , klass = cof(this);\n    end = end === undefined ? len : end;\n    if(klass == 'Array')return arraySlice.call(this, begin, end);\n    var start  = toIndex(begin, len)\n      , upTo   = toIndex(end, len)\n      , size   = toLength(upTo - start)\n      , cloned = Array(size)\n      , i      = 0;\n    for(; i < size; i++)cloned[i] = klass == 'String'\n      ? this.charAt(start + i)\n      : this[start + i];\n    return cloned;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.slice.js\n ** module id = 152\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $some   = require('./_array-methods')(3);\n\n$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {\n  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\n  some: function some(callbackfn /* , thisArg */){\n    return $some(this, callbackfn, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.some.js\n ** module id = 153\n ** module chunks = 0\n **/","'use strict';\nvar $export   = require('./_export')\n  , aFunction = require('./_a-function')\n  , toObject  = require('./_to-object')\n  , fails     = require('./_fails')\n  , $sort     = [].sort\n  , test      = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function(){\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function(){\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn){\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.sort.js\n ** module id = 154\n ** module chunks = 0\n **/","require('./_set-species')('Array');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.species.js\n ** module id = 155\n ** module chunks = 0\n **/","// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = require('./_export');\n\n$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.now.js\n ** module id = 156\n ** module chunks = 0\n **/","'use strict';\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar $export = require('./_export')\n  , fails   = require('./_fails')\n  , getTime = Date.prototype.getTime;\n\nvar lz = function(num){\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\n$export($export.P + $export.F * (fails(function(){\n  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';\n}) || !fails(function(){\n  new Date(NaN).toISOString();\n})), 'Date', {\n  toISOString: function toISOString(){\n    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');\n    var d = this\n      , y = d.getUTCFullYear()\n      , m = d.getUTCMilliseconds()\n      , s = y < 0 ? '-' : y > 9999 ? '+' : '';\n    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-iso-string.js\n ** module id = 157\n ** module chunks = 0\n **/","'use strict';\nvar $export     = require('./_export')\n  , toObject    = require('./_to-object')\n  , toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function(){\n  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;\n}), 'Date', {\n  toJSON: function toJSON(key){\n    var O  = toObject(this)\n      , pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-json.js\n ** module id = 158\n ** module chunks = 0\n **/","var TO_PRIMITIVE = require('./_wks')('toPrimitive')\n  , proto        = Date.prototype;\n\nif(!(TO_PRIMITIVE in proto))require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-primitive.js\n ** module id = 159\n ** module chunks = 0\n **/","var DateProto    = Date.prototype\n  , INVALID_DATE = 'Invalid Date'\n  , TO_STRING    = 'toString'\n  , $toString    = DateProto[TO_STRING]\n  , getTime      = DateProto.getTime;\nif(new Date(NaN) + '' != INVALID_DATE){\n  require('./_redefine')(DateProto, TO_STRING, function toString(){\n    var value = getTime.call(this);\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-string.js\n ** module id = 160\n ** module chunks = 0\n **/","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', {bind: require('./_bind')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.function.bind.js\n ** module id = 161\n ** module chunks = 0\n **/","'use strict';\nvar isObject       = require('./_is-object')\n  , getPrototypeOf = require('./_object-gpo')\n  , HAS_INSTANCE   = require('./_wks')('hasInstance')\n  , FunctionProto  = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif(!(HAS_INSTANCE in FunctionProto))require('./_object-dp').f(FunctionProto, HAS_INSTANCE, {value: function(O){\n  if(typeof this != 'function' || !isObject(O))return false;\n  if(!isObject(this.prototype))return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while(O = getPrototypeOf(O))if(this.prototype === O)return true;\n  return false;\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.function.has-instance.js\n ** module id = 162\n ** module chunks = 0\n **/","var dP         = require('./_object-dp').f\n  , createDesc = require('./_property-desc')\n  , has        = require('./_has')\n  , FProto     = Function.prototype\n  , nameRE     = /^\\s*function ([^ (]*)/\n  , NAME       = 'name';\n\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function(){\n    try {\n      var that = this\n        , name = ('' + that).match(nameRE)[1];\n      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));\n      return name;\n    } catch(e){\n      return '';\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.function.name.js\n ** module id = 163\n ** module chunks = 0\n **/","// 20.2.2.3 Math.acosh(x)\nvar $export = require('./_export')\n  , log1p   = require('./_math-log1p')\n  , sqrt    = Math.sqrt\n  , $acosh  = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN \n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x){\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.acosh.js\n ** module id = 164\n ** module chunks = 0\n **/","// 20.2.2.5 Math.asinh(x)\nvar $export = require('./_export')\n  , $asinh  = Math.asinh;\n\nfunction asinh(x){\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0 \n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.asinh.js\n ** module id = 165\n ** module chunks = 0\n **/","// 20.2.2.7 Math.atanh(x)\nvar $export = require('./_export')\n  , $atanh  = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0 \n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x){\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.atanh.js\n ** module id = 166\n ** module chunks = 0\n **/","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export')\n  , sign    = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x){\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.cbrt.js\n ** module id = 167\n ** module chunks = 0\n **/","// 20.2.2.11 Math.clz32(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x){\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.clz32.js\n ** module id = 168\n ** module chunks = 0\n **/","// 20.2.2.12 Math.cosh(x)\nvar $export = require('./_export')\n  , exp     = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x){\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.cosh.js\n ** module id = 169\n ** module chunks = 0\n **/","// 20.2.2.14 Math.expm1(x)\nvar $export = require('./_export')\n  , $expm1  = require('./_math-expm1');\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.expm1.js\n ** module id = 170\n ** module chunks = 0\n **/","// 20.2.2.16 Math.fround(x)\nvar $export   = require('./_export')\n  , sign      = require('./_math-sign')\n  , pow       = Math.pow\n  , EPSILON   = pow(2, -52)\n  , EPSILON32 = pow(2, -23)\n  , MAX32     = pow(2, 127) * (2 - EPSILON32)\n  , MIN32     = pow(2, -126);\n\nvar roundTiesToEven = function(n){\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\n\n$export($export.S, 'Math', {\n  fround: function fround(x){\n    var $abs  = Math.abs(x)\n      , $sign = sign(x)\n      , a, result;\n    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n    a = (1 + EPSILON32 / EPSILON) * $abs;\n    result = a - (a - $abs);\n    if(result > MAX32 || result != result)return $sign * Infinity;\n    return $sign * result;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.fround.js\n ** module id = 171\n ** module chunks = 0\n **/","// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export')\n  , abs     = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n    var sum  = 0\n      , i    = 0\n      , aLen = arguments.length\n      , larg = 0\n      , arg, div;\n    while(i < aLen){\n      arg = abs(arguments[i++]);\n      if(larg < arg){\n        div  = larg / arg;\n        sum  = sum * div * div + 1;\n        larg = arg;\n      } else if(arg > 0){\n        div  = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.hypot.js\n ** module id = 172\n ** module chunks = 0\n **/","// 20.2.2.18 Math.imul(x, y)\nvar $export = require('./_export')\n  , $imul   = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * require('./_fails')(function(){\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y){\n    var UINT16 = 0xffff\n      , xn = +x\n      , yn = +y\n      , xl = UINT16 & xn\n      , yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.imul.js\n ** module id = 173\n ** module chunks = 0\n **/","// 20.2.2.21 Math.log10(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log10: function log10(x){\n    return Math.log(x) / Math.LN10;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.log10.js\n ** module id = 174\n ** module chunks = 0\n **/","// 20.2.2.20 Math.log1p(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {log1p: require('./_math-log1p')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.log1p.js\n ** module id = 175\n ** module chunks = 0\n **/","// 20.2.2.22 Math.log2(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log2: function log2(x){\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.log2.js\n ** module id = 176\n ** module chunks = 0\n **/","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {sign: require('./_math-sign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.sign.js\n ** module id = 177\n ** module chunks = 0\n **/","// 20.2.2.30 Math.sinh(x)\nvar $export = require('./_export')\n  , expm1   = require('./_math-expm1')\n  , exp     = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * require('./_fails')(function(){\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x){\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.sinh.js\n ** module id = 178\n ** module chunks = 0\n **/","// 20.2.2.33 Math.tanh(x)\nvar $export = require('./_export')\n  , expm1   = require('./_math-expm1')\n  , exp     = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x){\n    var a = expm1(x = +x)\n      , b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.tanh.js\n ** module id = 179\n ** module chunks = 0\n **/","// 20.2.2.34 Math.trunc(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it){\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.trunc.js\n ** module id = 180\n ** module chunks = 0\n **/","'use strict';\nvar global            = require('./_global')\n  , has               = require('./_has')\n  , cof               = require('./_cof')\n  , inheritIfRequired = require('./_inherit-if-required')\n  , toPrimitive       = require('./_to-primitive')\n  , fails             = require('./_fails')\n  , gOPN              = require('./_object-gopn').f\n  , gOPD              = require('./_object-gopd').f\n  , dP                = require('./_object-dp').f\n  , $trim             = require('./_string-trim').trim\n  , NUMBER            = 'Number'\n  , $Number           = global[NUMBER]\n  , Base              = $Number\n  , proto             = $Number.prototype\n  // Opera ~12 has broken Object#toString\n  , BROKEN_COF        = cof(require('./_object-create')(proto)) == NUMBER\n  , TRIM              = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function(argument){\n  var it = toPrimitive(argument, false);\n  if(typeof it == 'string' && it.length > 2){\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0)\n      , third, radix, maxCode;\n    if(first === 43 || first === 45){\n      third = it.charCodeAt(2);\n      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if(first === 48){\n      switch(it.charCodeAt(1)){\n        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default : return +it;\n      }\n      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if(code < 48 || code > maxCode)return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){\n  $Number = function Number(value){\n    var it = arguments.length < 1 ? 0 : value\n      , that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for(var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++){\n    if(has(Base, key = keys[j]) && !has($Number, key)){\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.constructor.js\n ** module id = 181\n ** module chunks = 0\n **/","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.epsilon.js\n ** module id = 182\n ** module chunks = 0\n **/","// 20.1.2.2 Number.isFinite(number)\nvar $export   = require('./_export')\n  , _isFinite = require('./_global').isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it){\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-finite.js\n ** module id = 183\n ** module chunks = 0\n **/","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {isInteger: require('./_is-integer')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-integer.js\n ** module id = 184\n ** module chunks = 0\n **/","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number){\n    return number != number;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-nan.js\n ** module id = 185\n ** module chunks = 0\n **/","// 20.1.2.5 Number.isSafeInteger(number)\nvar $export   = require('./_export')\n  , isInteger = require('./_is-integer')\n  , abs       = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number){\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-safe-integer.js\n ** module id = 186\n ** module chunks = 0\n **/","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.max-safe-integer.js\n ** module id = 187\n ** module chunks = 0\n **/","// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.min-safe-integer.js\n ** module id = 188\n ** module chunks = 0\n **/","var $export     = require('./_export')\n  , $parseFloat = require('./_parse-float');\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.parse-float.js\n ** module id = 189\n ** module chunks = 0\n **/","var $export   = require('./_export')\n  , $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.parse-int.js\n ** module id = 190\n ** module chunks = 0\n **/","'use strict';\nvar $export      = require('./_export')\n  , toInteger    = require('./_to-integer')\n  , aNumberValue = require('./_a-number-value')\n  , repeat       = require('./_string-repeat')\n  , $toFixed     = 1..toFixed\n  , floor        = Math.floor\n  , data         = [0, 0, 0, 0, 0, 0]\n  , ERROR        = 'Number.toFixed: incorrect invocation!'\n  , ZERO         = '0';\n\nvar multiply = function(n, c){\n  var i  = -1\n    , c2 = c;\n  while(++i < 6){\n    c2 += n * data[i];\n    data[i] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function(n){\n  var i = 6\n    , c = 0;\n  while(--i >= 0){\n    c += data[i];\n    data[i] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\nvar numToString = function(){\n  var i = 6\n    , s = '';\n  while(--i >= 0){\n    if(s !== '' || i === 0 || data[i] !== 0){\n      var t = String(data[i]);\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n    }\n  } return s;\n};\nvar pow = function(x, n, acc){\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function(x){\n  var n  = 0\n    , x2 = x;\n  while(x2 >= 4096){\n    n += 12;\n    x2 /= 4096;\n  }\n  while(x2 >= 2){\n    n  += 1;\n    x2 /= 2;\n  } return n;\n};\n\n$export($export.P + $export.F * (!!$toFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128..toFixed(0) !== '1000000000000000128'\n) || !require('./_fails')(function(){\n  // V8 ~ Android 4.3-\n  $toFixed.call({});\n})), 'Number', {\n  toFixed: function toFixed(fractionDigits){\n    var x = aNumberValue(this, ERROR)\n      , f = toInteger(fractionDigits)\n      , s = ''\n      , m = ZERO\n      , e, z, j, k;\n    if(f < 0 || f > 20)throw RangeError(ERROR);\n    if(x != x)return 'NaN';\n    if(x <= -1e21 || x >= 1e21)return String(x);\n    if(x < 0){\n      s = '-';\n      x = -x;\n    }\n    if(x > 1e-21){\n      e = log(x * pow(2, 69, 1)) - 69;\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if(e > 0){\n        multiply(0, z);\n        j = f;\n        while(j >= 7){\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while(j >= 23){\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        m = numToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        m = numToString() + repeat.call(ZERO, f);\n      }\n    }\n    if(f > 0){\n      k = m.length;\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n    } else {\n      m = s + m;\n    } return m;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.to-fixed.js\n ** module id = 191\n ** module chunks = 0\n **/","'use strict';\nvar $export      = require('./_export')\n  , $fails       = require('./_fails')\n  , aNumberValue = require('./_a-number-value')\n  , $toPrecision = 1..toPrecision;\n\n$export($export.P + $export.F * ($fails(function(){\n  // IE7-\n  return $toPrecision.call(1, undefined) !== '1';\n}) || !$fails(function(){\n  // V8 ~ Android 4.3-\n  $toPrecision.call({});\n})), 'Number', {\n  toPrecision: function toPrecision(precision){\n    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\n    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); \n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.to-precision.js\n ** module id = 192\n ** module chunks = 0\n **/","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.assign.js\n ** module id = 193\n ** module chunks = 0\n **/","var $export = require('./_export')\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: require('./_object-create')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.create.js\n ** module id = 194\n ** module chunks = 0\n **/","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperties: require('./_object-dps')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.define-properties.js\n ** module id = 195\n ** module chunks = 0\n **/","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.define-property.js\n ** module id = 196\n ** module chunks = 0\n **/","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object')\n  , meta     = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function($freeze){\n  return function freeze(it){\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.freeze.js\n ** module id = 197\n ** module chunks = 0\n **/","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject                 = require('./_to-iobject')\n  , $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function(){\n  return function getOwnPropertyDescriptor(it, key){\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.get-own-property-descriptor.js\n ** module id = 198\n ** module chunks = 0\n **/","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function(){\n  return require('./_object-gopn-ext').f;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.get-own-property-names.js\n ** module id = 199\n ** module chunks = 0\n **/","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = require('./_to-object')\n  , $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.get-prototype-of.js\n ** module id = 200\n ** module chunks = 0\n **/","// 19.1.2.11 Object.isExtensible(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isExtensible', function($isExtensible){\n  return function isExtensible(it){\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is-extensible.js\n ** module id = 201\n ** module chunks = 0\n **/","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function($isFrozen){\n  return function isFrozen(it){\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is-frozen.js\n ** module id = 202\n ** module chunks = 0\n **/","// 19.1.2.13 Object.isSealed(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isSealed', function($isSealed){\n  return function isSealed(it){\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is-sealed.js\n ** module id = 203\n ** module chunks = 0\n **/","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', {is: require('./_same-value')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is.js\n ** module id = 204\n ** module chunks = 0\n **/","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.keys.js\n ** module id = 205\n ** module chunks = 0\n **/","// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = require('./_is-object')\n  , meta     = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('preventExtensions', function($preventExtensions){\n  return function preventExtensions(it){\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.prevent-extensions.js\n ** module id = 206\n ** module chunks = 0\n **/","// 19.1.2.17 Object.seal(O)\nvar isObject = require('./_is-object')\n  , meta     = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('seal', function($seal){\n  return function seal(it){\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.seal.js\n ** module id = 207\n ** module chunks = 0\n **/","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.set-prototype-of.js\n ** module id = 208\n ** module chunks = 0\n **/","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof')\n  , test    = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif(test + '' != '[object z]'){\n  require('./_redefine')(Object.prototype, 'toString', function toString(){\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.to-string.js\n ** module id = 209\n ** module chunks = 0\n **/","var $export     = require('./_export')\n  , $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.parse-float.js\n ** module id = 210\n ** module chunks = 0\n **/","var $export   = require('./_export')\n  , $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.parse-int.js\n ** module id = 211\n ** module chunks = 0\n **/","'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.promise.js\n ** module id = 212\n ** module chunks = 0\n **/","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export   = require('./_export')\n  , aFunction = require('./_a-function')\n  , anObject  = require('./_an-object')\n  , rApply    = (require('./_global').Reflect || {}).apply\n  , fApply    = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !require('./_fails')(function(){\n  rApply(function(){});\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList){\n    var T = aFunction(target)\n      , L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.apply.js\n ** module id = 213\n ** module chunks = 0\n **/","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export    = require('./_export')\n  , create     = require('./_object-create')\n  , aFunction  = require('./_a-function')\n  , anObject   = require('./_an-object')\n  , isObject   = require('./_is-object')\n  , fails      = require('./_fails')\n  , bind       = require('./_bind')\n  , rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function(){\n  function F(){}\n  return !(rConstruct(function(){}, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function(){\n  rConstruct(function(){});\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /*, newTarget*/){\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);\n    if(Target == newTarget){\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch(args.length){\n        case 0: return new Target;\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args));\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto    = newTarget.prototype\n      , instance = create(isObject(proto) ? proto : Object.prototype)\n      , result   = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.construct.js\n ** module id = 214\n ** module chunks = 0\n **/","// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP          = require('./_object-dp')\n  , $export     = require('./_export')\n  , anObject    = require('./_an-object')\n  , toPrimitive = require('./_to-primitive');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * require('./_fails')(function(){\n  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes){\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch(e){\n      return false;\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.define-property.js\n ** module id = 215\n ** module chunks = 0\n **/","// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export  = require('./_export')\n  , gOPD     = require('./_object-gopd').f\n  , anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey){\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.delete-property.js\n ** module id = 216\n ** module chunks = 0\n **/","'use strict';\n// 26.1.5 Reflect.enumerate(target)\nvar $export  = require('./_export')\n  , anObject = require('./_an-object');\nvar Enumerate = function(iterated){\n  this._t = anObject(iterated); // target\n  this._i = 0;                  // next index\n  var keys = this._k = []       // keys\n    , key;\n  for(key in iterated)keys.push(key);\n};\nrequire('./_iter-create')(Enumerate, 'Object', function(){\n  var that = this\n    , keys = that._k\n    , key;\n  do {\n    if(that._i >= keys.length)return {value: undefined, done: true};\n  } while(!((key = keys[that._i++]) in that._t));\n  return {value: key, done: false};\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target){\n    return new Enumerate(target);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.enumerate.js\n ** module id = 217\n ** module chunks = 0\n **/","// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD     = require('./_object-gopd')\n  , $export  = require('./_export')\n  , anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.get-own-property-descriptor.js\n ** module id = 218\n ** module chunks = 0\n **/","// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export  = require('./_export')\n  , getProto = require('./_object-gpo')\n  , anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target){\n    return getProto(anObject(target));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.get-prototype-of.js\n ** module id = 219\n ** module chunks = 0\n **/","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD           = require('./_object-gopd')\n  , getPrototypeOf = require('./_object-gpo')\n  , has            = require('./_has')\n  , $export        = require('./_export')\n  , isObject       = require('./_is-object')\n  , anObject       = require('./_an-object');\n\nfunction get(target, propertyKey/*, receiver*/){\n  var receiver = arguments.length < 3 ? target : arguments[2]\n    , desc, proto;\n  if(anObject(target) === receiver)return target[propertyKey];\n  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', {get: get});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.get.js\n ** module id = 220\n ** module chunks = 0\n **/","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey){\n    return propertyKey in target;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.has.js\n ** module id = 221\n ** module chunks = 0\n **/","// 26.1.10 Reflect.isExtensible(target)\nvar $export       = require('./_export')\n  , anObject      = require('./_an-object')\n  , $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target){\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.is-extensible.js\n ** module id = 222\n ** module chunks = 0\n **/","// 26.1.11 Reflect.ownKeys(target)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {ownKeys: require('./_own-keys')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.own-keys.js\n ** module id = 223\n ** module chunks = 0\n **/","// 26.1.12 Reflect.preventExtensions(target)\nvar $export            = require('./_export')\n  , anObject           = require('./_an-object')\n  , $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target){\n    anObject(target);\n    try {\n      if($preventExtensions)$preventExtensions(target);\n      return true;\n    } catch(e){\n      return false;\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.prevent-extensions.js\n ** module id = 224\n ** module chunks = 0\n **/","// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export  = require('./_export')\n  , setProto = require('./_set-proto');\n\nif(setProto)$export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto){\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch(e){\n      return false;\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.set-prototype-of.js\n ** module id = 225\n ** module chunks = 0\n **/","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP             = require('./_object-dp')\n  , gOPD           = require('./_object-gopd')\n  , getPrototypeOf = require('./_object-gpo')\n  , has            = require('./_has')\n  , $export        = require('./_export')\n  , createDesc     = require('./_property-desc')\n  , anObject       = require('./_an-object')\n  , isObject       = require('./_is-object');\n\nfunction set(target, propertyKey, V/*, receiver*/){\n  var receiver = arguments.length < 4 ? target : arguments[3]\n    , ownDesc  = gOPD.f(anObject(target), propertyKey)\n    , existingDescriptor, proto;\n  if(!ownDesc){\n    if(isObject(proto = getPrototypeOf(target))){\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if(has(ownDesc, 'value')){\n    if(ownDesc.writable === false || !isObject(receiver))return false;\n    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);\n    existingDescriptor.value = V;\n    dP.f(receiver, propertyKey, existingDescriptor);\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', {set: set});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.set.js\n ** module id = 226\n ** module chunks = 0\n **/","var global            = require('./_global')\n  , inheritIfRequired = require('./_inherit-if-required')\n  , dP                = require('./_object-dp').f\n  , gOPN              = require('./_object-gopn').f\n  , isRegExp          = require('./_is-regexp')\n  , $flags            = require('./_flags')\n  , $RegExp           = global.RegExp\n  , Base              = $RegExp\n  , proto             = $RegExp.prototype\n  , re1               = /a/g\n  , re2               = /a/g\n  // \"new\" creates a new object, old webkit buggy here\n  , CORRECT_NEW       = new $RegExp(re1) !== re1;\n\nif(require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function(){\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))){\n  $RegExp = function RegExp(p, f){\n    var tiRE = this instanceof $RegExp\n      , piRE = isRegExp(p)\n      , fiU  = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function(key){\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function(){ return Base[key]; },\n      set: function(it){ Base[key] = it; }\n    });\n  };\n  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.constructor.js\n ** module id = 227\n ** module chunks = 0\n **/","// @@match logic\nrequire('./_fix-re-wks')('match', 1, function(defined, MATCH, $match){\n  // 21.1.3.11 String.prototype.match(regexp)\n  return [function match(regexp){\n    'use strict';\n    var O  = defined(this)\n      , fn = regexp == undefined ? undefined : regexp[MATCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n  }, $match];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.match.js\n ** module id = 228\n ** module chunks = 0\n **/","// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function(defined, REPLACE, $replace){\n  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n  return [function replace(searchValue, replaceValue){\n    'use strict';\n    var O  = defined(this)\n      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined\n      ? fn.call(searchValue, O, replaceValue)\n      : $replace.call(String(O), searchValue, replaceValue);\n  }, $replace];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.replace.js\n ** module id = 229\n ** module chunks = 0\n **/","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function(defined, SEARCH, $search){\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp){\n    'use strict';\n    var O  = defined(this)\n      , fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.search.js\n ** module id = 230\n ** module chunks = 0\n **/","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  'use strict';\n  var isRegExp   = require('./_is-regexp')\n    , _split     = $split\n    , $push      = [].push\n    , $SPLIT     = 'split'\n    , LENGTH     = 'length'\n    , LAST_INDEX = 'lastIndex';\n  if(\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ){\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function(separator, limit){\n      var string = String(this);\n      if(separator === undefined && limit === 0)return [];\n      // If `separator` is not a regex, use native split\n      if(!isRegExp(separator))return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while(match = separatorCopy.exec(string)){\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if(lastIndex > lastLastIndex){\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){\n            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;\n          });\n          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if(output[LENGTH] >= splitLimit)break;\n        }\n        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if(lastLastIndex === string[LENGTH]){\n        if(lastLength || !separatorCopy.test(''))output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){\n    $split = function(separator, limit){\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit){\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.split.js\n ** module id = 231\n ** module chunks = 0\n **/","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject    = require('./_an-object')\n  , $flags      = require('./_flags')\n  , DESCRIPTORS = require('./_descriptors')\n  , TO_STRING   = 'toString'\n  , $toString   = /./[TO_STRING];\n\nvar define = function(fn){\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif(require('./_fails')(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){\n  define(function toString(){\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if($toString.name != TO_STRING){\n  define(function toString(){\n    return $toString.call(this);\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.to-string.js\n ** module id = 232\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function(createHTML){\n  return function anchor(name){\n    return createHTML(this, 'a', 'name', name);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.anchor.js\n ** module id = 233\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function(createHTML){\n  return function big(){\n    return createHTML(this, 'big', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.big.js\n ** module id = 234\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.4 String.prototype.blink()\nrequire('./_string-html')('blink', function(createHTML){\n  return function blink(){\n    return createHTML(this, 'blink', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.blink.js\n ** module id = 235\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function(createHTML){\n  return function bold(){\n    return createHTML(this, 'b', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.bold.js\n ** module id = 236\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $at     = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos){\n    return $at(this, pos);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.code-point-at.js\n ** module id = 237\n ** module chunks = 0\n **/","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export   = require('./_export')\n  , toLength  = require('./_to-length')\n  , context   = require('./_string-context')\n  , ENDS_WITH = 'endsWith'\n  , $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /*, endPosition = @length */){\n    var that = context(this, searchString, ENDS_WITH)\n      , endPosition = arguments.length > 1 ? arguments[1] : undefined\n      , len    = toLength(that.length)\n      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)\n      , search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.ends-with.js\n ** module id = 238\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function(createHTML){\n  return function fixed(){\n    return createHTML(this, 'tt', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.fixed.js\n ** module id = 239\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.7 String.prototype.fontcolor(color)\nrequire('./_string-html')('fontcolor', function(createHTML){\n  return function fontcolor(color){\n    return createHTML(this, 'font', 'color', color);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.fontcolor.js\n ** module id = 240\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.8 String.prototype.fontsize(size)\nrequire('./_string-html')('fontsize', function(createHTML){\n  return function fontsize(size){\n    return createHTML(this, 'font', 'size', size);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.fontsize.js\n ** module id = 241\n ** module chunks = 0\n **/","var $export        = require('./_export')\n  , toIndex        = require('./_to-index')\n  , fromCharCode   = String.fromCharCode\n  , $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars\n    var res  = []\n      , aLen = arguments.length\n      , i    = 0\n      , code;\n    while(aLen > i){\n      code = +arguments[i++];\n      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.from-code-point.js\n ** module id = 242\n ** module chunks = 0\n **/","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export  = require('./_export')\n  , context  = require('./_string-context')\n  , INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /*, position = 0 */){\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.includes.js\n ** module id = 243\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.9 String.prototype.italics()\nrequire('./_string-html')('italics', function(createHTML){\n  return function italics(){\n    return createHTML(this, 'i', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.italics.js\n ** module id = 244\n ** module chunks = 0\n **/","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.iterator.js\n ** module id = 245\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function(createHTML){\n  return function link(url){\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.link.js\n ** module id = 246\n ** module chunks = 0\n **/","var $export   = require('./_export')\n  , toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite){\n    var tpl  = toIObject(callSite.raw)\n      , len  = toLength(tpl.length)\n      , aLen = arguments.length\n      , res  = []\n      , i    = 0;\n    while(len > i){\n      res.push(String(tpl[i++]));\n      if(i < aLen)res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.raw.js\n ** module id = 247\n ** module chunks = 0\n **/","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.repeat.js\n ** module id = 248\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function(createHTML){\n  return function small(){\n    return createHTML(this, 'small', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.small.js\n ** module id = 249\n ** module chunks = 0\n **/","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export     = require('./_export')\n  , toLength    = require('./_to-length')\n  , context     = require('./_string-context')\n  , STARTS_WITH = 'startsWith'\n  , $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /*, position = 0 */){\n    var that   = context(this, searchString, STARTS_WITH)\n      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))\n      , search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.starts-with.js\n ** module id = 250\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.12 String.prototype.strike()\nrequire('./_string-html')('strike', function(createHTML){\n  return function strike(){\n    return createHTML(this, 'strike', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.strike.js\n ** module id = 251\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function(createHTML){\n  return function sub(){\n    return createHTML(this, 'sub', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.sub.js\n ** module id = 252\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function(createHTML){\n  return function sup(){\n    return createHTML(this, 'sup', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.sup.js\n ** module id = 253\n ** module chunks = 0\n **/","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function($trim){\n  return function trim(){\n    return $trim(this, 3);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.trim.js\n ** module id = 254\n ** module chunks = 0\n **/","'use strict';\n// ECMAScript 6 symbols shim\nvar global         = require('./_global')\n  , has            = require('./_has')\n  , DESCRIPTORS    = require('./_descriptors')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , META           = require('./_meta').KEY\n  , $fails         = require('./_fails')\n  , shared         = require('./_shared')\n  , setToStringTag = require('./_set-to-string-tag')\n  , uid            = require('./_uid')\n  , wks            = require('./_wks')\n  , wksExt         = require('./_wks-ext')\n  , wksDefine      = require('./_wks-define')\n  , keyOf          = require('./_keyof')\n  , enumKeys       = require('./_enum-keys')\n  , isArray        = require('./_is-array')\n  , anObject       = require('./_an-object')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , createDesc     = require('./_property-desc')\n  , _create        = require('./_object-create')\n  , gOPNExt        = require('./_object-gopn-ext')\n  , $GOPD          = require('./_object-gopd')\n  , $DP            = require('./_object-dp')\n  , $keys          = require('./_object-keys')\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f  = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !require('./_library')){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.symbol.js\n ** module id = 255\n ** module chunks = 0\n **/","'use strict';\nvar $export      = require('./_export')\n  , $typed       = require('./_typed')\n  , buffer       = require('./_typed-buffer')\n  , anObject     = require('./_an-object')\n  , toIndex      = require('./_to-index')\n  , toLength     = require('./_to-length')\n  , isObject     = require('./_is-object')\n  , ArrayBuffer  = require('./_global').ArrayBuffer\n  , speciesConstructor = require('./_species-constructor')\n  , $ArrayBuffer = buffer.ArrayBuffer\n  , $DataView    = buffer.DataView\n  , $isView      = $typed.ABV && ArrayBuffer.isView\n  , $slice       = $ArrayBuffer.prototype.slice\n  , VIEW         = $typed.VIEW\n  , ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it){\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function(){\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end){\n    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix\n    var len    = anObject(this).byteLength\n      , first  = toIndex(start, len)\n      , final  = toIndex(end === undefined ? len : end, len)\n      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))\n      , viewS  = new $DataView(this)\n      , viewT  = new $DataView(result)\n      , index  = 0;\n    while(first < final){\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.array-buffer.js\n ** module id = 256\n ** module chunks = 0\n **/","var $export = require('./_export');\n$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {\n  DataView: require('./_typed-buffer').DataView\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.data-view.js\n ** module id = 257\n ** module chunks = 0\n **/","require('./_typed-array')('Float32', 4, function(init){\n  return function Float32Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.float32-array.js\n ** module id = 258\n ** module chunks = 0\n **/","require('./_typed-array')('Float64', 8, function(init){\n  return function Float64Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.float64-array.js\n ** module id = 259\n ** module chunks = 0\n **/","require('./_typed-array')('Int16', 2, function(init){\n  return function Int16Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.int16-array.js\n ** module id = 260\n ** module chunks = 0\n **/","require('./_typed-array')('Int32', 4, function(init){\n  return function Int32Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.int32-array.js\n ** module id = 261\n ** module chunks = 0\n **/","require('./_typed-array')('Int8', 1, function(init){\n  return function Int8Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.int8-array.js\n ** module id = 262\n ** module chunks = 0\n **/","require('./_typed-array')('Uint16', 2, function(init){\n  return function Uint16Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint16-array.js\n ** module id = 263\n ** module chunks = 0\n **/","require('./_typed-array')('Uint32', 4, function(init){\n  return function Uint32Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint32-array.js\n ** module id = 264\n ** module chunks = 0\n **/","require('./_typed-array')('Uint8', 1, function(init){\n  return function Uint8Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint8-array.js\n ** module id = 265\n ** module chunks = 0\n **/","require('./_typed-array')('Uint8', 1, function(init){\n  return function Uint8ClampedArray(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint8-clamped-array.js\n ** module id = 266\n ** module chunks = 0\n **/","'use strict';\nvar weak = require('./_collection-weak');\n\n// 23.4 WeakSet Objects\nrequire('./_collection')('WeakSet', function(get){\n  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value){\n    return weak.def(this, value, true);\n  }\n}, weak, false, true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.weak-set.js\n ** module id = 267\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export   = require('./_export')\n  , $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /*, fromIndex = 0 */){\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.array.includes.js\n ** module id = 268\n ** module chunks = 0\n **/","// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask\nvar $export   = require('./_export')\n  , microtask = require('./_microtask')()\n  , process   = require('./_global').process\n  , isNode    = require('./_cof')(process) == 'process';\n\n$export($export.G, {\n  asap: function asap(fn){\n    var domain = isNode && process.domain;\n    microtask(domain ? domain.bind(fn) : fn);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.asap.js\n ** module id = 269\n ** module chunks = 0\n **/","// https://github.com/ljharb/proposal-is-error\nvar $export = require('./_export')\n  , cof     = require('./_cof');\n\n$export($export.S, 'Error', {\n  isError: function isError(it){\n    return cof(it) === 'Error';\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.error.is-error.js\n ** module id = 270\n ** module chunks = 0\n **/","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.map.to-json.js\n ** module id = 271\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  iaddh: function iaddh(x0, x1, y0, y1){\n    var $x0 = x0 >>> 0\n      , $x1 = x1 >>> 0\n      , $y0 = y0 >>> 0;\n    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.iaddh.js\n ** module id = 272\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  imulh: function imulh(u, v){\n    var UINT16 = 0xffff\n      , $u = +u\n      , $v = +v\n      , u0 = $u & UINT16\n      , v0 = $v & UINT16\n      , u1 = $u >> 16\n      , v1 = $v >> 16\n      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.imulh.js\n ** module id = 273\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  isubh: function isubh(x0, x1, y0, y1){\n    var $x0 = x0 >>> 0\n      , $x1 = x1 >>> 0\n      , $y0 = y0 >>> 0;\n    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.isubh.js\n ** module id = 274\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  umulh: function umulh(u, v){\n    var UINT16 = 0xffff\n      , $u = +u\n      , $v = +v\n      , u0 = $u & UINT16\n      , v0 = $v & UINT16\n      , u1 = $u >>> 16\n      , v1 = $v >>> 16\n      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.umulh.js\n ** module id = 275\n ** module chunks = 0\n **/","'use strict';\nvar $export         = require('./_export')\n  , toObject        = require('./_to-object')\n  , aFunction       = require('./_a-function')\n  , $defineProperty = require('./_object-dp');\n\n// B.2.2.2 Object.prototype.__defineGetter__(P, getter)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __defineGetter__: function __defineGetter__(P, getter){\n    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.define-getter.js\n ** module id = 276\n ** module chunks = 0\n **/","'use strict';\nvar $export         = require('./_export')\n  , toObject        = require('./_to-object')\n  , aFunction       = require('./_a-function')\n  , $defineProperty = require('./_object-dp');\n\n// B.2.2.3 Object.prototype.__defineSetter__(P, setter)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __defineSetter__: function __defineSetter__(P, setter){\n    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.define-setter.js\n ** module id = 277\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-object-values-entries\nvar $export  = require('./_export')\n  , $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it){\n    return $entries(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.entries.js\n ** module id = 278\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export        = require('./_export')\n  , ownKeys        = require('./_own-keys')\n  , toIObject      = require('./_to-iobject')\n  , gOPD           = require('./_object-gopd')\n  , createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){\n    var O       = toIObject(object)\n      , getDesc = gOPD.f\n      , keys    = ownKeys(O)\n      , result  = {}\n      , i       = 0\n      , key;\n    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));\n    return result;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.get-own-property-descriptors.js\n ** module id = 279\n ** module chunks = 0\n **/","'use strict';\nvar $export                  = require('./_export')\n  , toObject                 = require('./_to-object')\n  , toPrimitive              = require('./_to-primitive')\n  , getPrototypeOf           = require('./_object-gpo')\n  , getOwnPropertyDescriptor = require('./_object-gopd').f;\n\n// B.2.2.4 Object.prototype.__lookupGetter__(P)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __lookupGetter__: function __lookupGetter__(P){\n    var O = toObject(this)\n      , K = toPrimitive(P, true)\n      , D;\n    do {\n      if(D = getOwnPropertyDescriptor(O, K))return D.get;\n    } while(O = getPrototypeOf(O));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.lookup-getter.js\n ** module id = 280\n ** module chunks = 0\n **/","'use strict';\nvar $export                  = require('./_export')\n  , toObject                 = require('./_to-object')\n  , toPrimitive              = require('./_to-primitive')\n  , getPrototypeOf           = require('./_object-gpo')\n  , getOwnPropertyDescriptor = require('./_object-gopd').f;\n\n// B.2.2.5 Object.prototype.__lookupSetter__(P)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __lookupSetter__: function __lookupSetter__(P){\n    var O = toObject(this)\n      , K = toPrimitive(P, true)\n      , D;\n    do {\n      if(D = getOwnPropertyDescriptor(O, K))return D.set;\n    } while(O = getPrototypeOf(O));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.lookup-setter.js\n ** module id = 281\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export')\n  , $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it){\n    return $values(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.values.js\n ** module id = 282\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/zenparsing/es-observable\nvar $export     = require('./_export')\n  , global      = require('./_global')\n  , core        = require('./_core')\n  , microtask   = require('./_microtask')()\n  , OBSERVABLE  = require('./_wks')('observable')\n  , aFunction   = require('./_a-function')\n  , anObject    = require('./_an-object')\n  , anInstance  = require('./_an-instance')\n  , redefineAll = require('./_redefine-all')\n  , hide        = require('./_hide')\n  , forOf       = require('./_for-of')\n  , RETURN      = forOf.RETURN;\n\nvar getMethod = function(fn){\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function(subscription){\n  var cleanup = subscription._c;\n  if(cleanup){\n    subscription._c = undefined;\n    cleanup();\n  }\n};\n\nvar subscriptionClosed = function(subscription){\n  return subscription._o === undefined;\n};\n\nvar closeSubscription = function(subscription){\n  if(!subscriptionClosed(subscription)){\n    subscription._o = undefined;\n    cleanupSubscription(subscription);\n  }\n};\n\nvar Subscription = function(observer, subscriber){\n  anObject(observer);\n  this._c = undefined;\n  this._o = observer;\n  observer = new SubscriptionObserver(this);\n  try {\n    var cleanup      = subscriber(observer)\n      , subscription = cleanup;\n    if(cleanup != null){\n      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };\n      else aFunction(cleanup);\n      this._c = cleanup;\n    }\n  } catch(e){\n    observer.error(e);\n    return;\n  } if(subscriptionClosed(this))cleanupSubscription(this);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe(){ closeSubscription(this); }\n});\n\nvar SubscriptionObserver = function(subscription){\n  this._s = subscription;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value){\n    var subscription = this._s;\n    if(!subscriptionClosed(subscription)){\n      var observer = subscription._o;\n      try {\n        var m = getMethod(observer.next);\n        if(m)return m.call(observer, value);\n      } catch(e){\n        try {\n          closeSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      }\n    }\n  },\n  error: function error(value){\n    var subscription = this._s;\n    if(subscriptionClosed(subscription))throw value;\n    var observer = subscription._o;\n    subscription._o = undefined;\n    try {\n      var m = getMethod(observer.error);\n      if(!m)throw value;\n      value = m.call(observer, value);\n    } catch(e){\n      try {\n        cleanupSubscription(subscription);\n      } finally {\n        throw e;\n      }\n    } cleanupSubscription(subscription);\n    return value;\n  },\n  complete: function complete(value){\n    var subscription = this._s;\n    if(!subscriptionClosed(subscription)){\n      var observer = subscription._o;\n      subscription._o = undefined;\n      try {\n        var m = getMethod(observer.complete);\n        value = m ? m.call(observer, value) : undefined;\n      } catch(e){\n        try {\n          cleanupSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      } cleanupSubscription(subscription);\n      return value;\n    }\n  }\n});\n\nvar $Observable = function Observable(subscriber){\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer){\n    return new Subscription(observer, this._f);\n  },\n  forEach: function forEach(fn){\n    var that = this;\n    return new (core.Promise || global.Promise)(function(resolve, reject){\n      aFunction(fn);\n      var subscription = that.subscribe({\n        next : function(value){\n          try {\n            return fn(value);\n          } catch(e){\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  }\n});\n\nredefineAll($Observable, {\n  from: function from(x){\n    var C = typeof this === 'function' ? this : $Observable;\n    var method = getMethod(anObject(x)[OBSERVABLE]);\n    if(method){\n      var observable = anObject(method.call(x));\n      return observable.constructor === C ? observable : new C(function(observer){\n        return observable.subscribe(observer);\n      });\n    }\n    return new C(function(observer){\n      var done = false;\n      microtask(function(){\n        if(!done){\n          try {\n            if(forOf(x, false, function(it){\n              observer.next(it);\n              if(done)return RETURN;\n            }) === RETURN)return;\n          } catch(e){\n            if(done)throw e;\n            observer.error(e);\n            return;\n          } observer.complete();\n        }\n      });\n      return function(){ done = true; };\n    });\n  },\n  of: function of(){\n    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];\n    return new (typeof this === 'function' ? this : $Observable)(function(observer){\n      var done = false;\n      microtask(function(){\n        if(!done){\n          for(var i = 0; i < items.length; ++i){\n            observer.next(items[i]);\n            if(done)return;\n          } observer.complete();\n        }\n      });\n      return function(){ done = true; };\n    });\n  }\n});\n\nhide($Observable.prototype, OBSERVABLE, function(){ return this; });\n\n$export($export.G, {Observable: $Observable});\n\nrequire('./_set-species')('Observable');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.observable.js\n ** module id = 283\n ** module chunks = 0\n **/","var metadata                  = require('./_metadata')\n  , anObject                  = require('./_an-object')\n  , toMetaKey                 = metadata.key\n  , ordinaryDefineOwnMetadata = metadata.set;\n\nmetadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){\n  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.define-metadata.js\n ** module id = 284\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , toMetaKey              = metadata.key\n  , getOrCreateMetadataMap = metadata.map\n  , store                  = metadata.store;\n\nmetadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){\n  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])\n    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;\n  if(metadataMap.size)return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.delete-metadata.js\n ** module id = 285\n ** module chunks = 0\n **/","var Set                     = require('./es6.set')\n  , from                    = require('./_array-from-iterable')\n  , metadata                = require('./_metadata')\n  , anObject                = require('./_an-object')\n  , getPrototypeOf          = require('./_object-gpo')\n  , ordinaryOwnMetadataKeys = metadata.keys\n  , toMetaKey               = metadata.key;\n\nvar ordinaryMetadataKeys = function(O, P){\n  var oKeys  = ordinaryOwnMetadataKeys(O, P)\n    , parent = getPrototypeOf(O);\n  if(parent === null)return oKeys;\n  var pKeys  = ordinaryMetadataKeys(parent, P);\n  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n};\n\nmetadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){\n  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-metadata-keys.js\n ** module id = 286\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , getPrototypeOf         = require('./_object-gpo')\n  , ordinaryHasOwnMetadata = metadata.has\n  , ordinaryGetOwnMetadata = metadata.get\n  , toMetaKey              = metadata.key;\n\nvar ordinaryGetMetadata = function(MetadataKey, O, P){\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);\n  var parent = getPrototypeOf(O);\n  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;\n};\n\nmetadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-metadata.js\n ** module id = 287\n ** module chunks = 0\n **/","var metadata                = require('./_metadata')\n  , anObject                = require('./_an-object')\n  , ordinaryOwnMetadataKeys = metadata.keys\n  , toMetaKey               = metadata.key;\n\nmetadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){\n  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-own-metadata-keys.js\n ** module id = 288\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , ordinaryGetOwnMetadata = metadata.get\n  , toMetaKey              = metadata.key;\n\nmetadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryGetOwnMetadata(metadataKey, anObject(target)\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-own-metadata.js\n ** module id = 289\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , getPrototypeOf         = require('./_object-gpo')\n  , ordinaryHasOwnMetadata = metadata.has\n  , toMetaKey              = metadata.key;\n\nvar ordinaryHasMetadata = function(MetadataKey, O, P){\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n  if(hasOwn)return true;\n  var parent = getPrototypeOf(O);\n  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;\n};\n\nmetadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.has-metadata.js\n ** module id = 290\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , ordinaryHasOwnMetadata = metadata.has\n  , toMetaKey              = metadata.key;\n\nmetadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryHasOwnMetadata(metadataKey, anObject(target)\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.has-own-metadata.js\n ** module id = 291\n ** module chunks = 0\n **/","var metadata                  = require('./_metadata')\n  , anObject                  = require('./_an-object')\n  , aFunction                 = require('./_a-function')\n  , toMetaKey                 = metadata.key\n  , ordinaryDefineOwnMetadata = metadata.set;\n\nmetadata.exp({metadata: function metadata(metadataKey, metadataValue){\n  return function decorator(target, targetKey){\n    ordinaryDefineOwnMetadata(\n      metadataKey, metadataValue,\n      (targetKey !== undefined ? anObject : aFunction)(target),\n      toMetaKey(targetKey)\n    );\n  };\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.metadata.js\n ** module id = 292\n ** module chunks = 0\n **/","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: require('./_collection-to-json')('Set')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.set.to-json.js\n ** module id = 293\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/mathiasbynens/String.prototype.at\nvar $export = require('./_export')\n  , $at     = require('./_string-at')(true);\n\n$export($export.P, 'String', {\n  at: function at(pos){\n    return $at(this, pos);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.at.js\n ** module id = 294\n ** module chunks = 0\n **/","'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export     = require('./_export')\n  , defined     = require('./_defined')\n  , toLength    = require('./_to-length')\n  , isRegExp    = require('./_is-regexp')\n  , getFlags    = require('./_flags')\n  , RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function(regexp, string){\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next(){\n  var match = this._r.exec(this._s);\n  return {value: match, done: match === null};\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp){\n    defined(this);\n    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');\n    var S     = String(this)\n      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)\n      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.match-all.js\n ** module id = 295\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.pad-end.js\n ** module id = 296\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padStart: function padStart(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.pad-start.js\n ** module id = 297\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function($trim){\n  return function trimLeft(){\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.trim-left.js\n ** module id = 298\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function($trim){\n  return function trimRight(){\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.trim-right.js\n ** module id = 299\n ** module chunks = 0\n **/","require('./_wks-define')('asyncIterator');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.symbol.async-iterator.js\n ** module id = 300\n ** module chunks = 0\n **/","require('./_wks-define')('observable');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.symbol.observable.js\n ** module id = 301\n ** module chunks = 0\n **/","// https://github.com/ljharb/proposal-global\nvar $export = require('./_export');\n\n$export($export.S, 'System', {global: require('./_global')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.system.global.js\n ** module id = 302\n ** module chunks = 0\n **/","var $iterators    = require('./es6.array.iterator')\n  , redefine      = require('./_redefine')\n  , global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , wks           = require('./_wks')\n  , ITERATOR      = wks('iterator')\n  , TO_STRING_TAG = wks('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype\n    , key;\n  if(proto){\n    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);\n    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/web.dom.iterable.js\n ** module id = 303\n ** module chunks = 0\n **/","var $export = require('./_export')\n  , $task   = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate:   $task.set,\n  clearImmediate: $task.clear\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/web.immediate.js\n ** module id = 304\n ** module chunks = 0\n **/","// ie9- setTimeout & setInterval additional parameters fix\nvar global     = require('./_global')\n  , $export    = require('./_export')\n  , invoke     = require('./_invoke')\n  , partial    = require('./_partial')\n  , navigator  = global.navigator\n  , MSIE       = !!navigator && /MSIE .\\./.test(navigator.userAgent); // <- dirty ie9- check\nvar wrap = function(set){\n  return MSIE ? function(fn, time /*, ...args */){\n    return set(invoke(\n      partial,\n      [].slice.call(arguments, 2),\n      typeof fn == 'function' ? fn : Function(fn)\n    ), time);\n  } : set;\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout:  wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/web.timers.js\n ** module id = 305\n ** module chunks = 0\n **/","require('./modules/es6.symbol');\nrequire('./modules/es6.object.create');\nrequire('./modules/es6.object.define-property');\nrequire('./modules/es6.object.define-properties');\nrequire('./modules/es6.object.get-own-property-descriptor');\nrequire('./modules/es6.object.get-prototype-of');\nrequire('./modules/es6.object.keys');\nrequire('./modules/es6.object.get-own-property-names');\nrequire('./modules/es6.object.freeze');\nrequire('./modules/es6.object.seal');\nrequire('./modules/es6.object.prevent-extensions');\nrequire('./modules/es6.object.is-frozen');\nrequire('./modules/es6.object.is-sealed');\nrequire('./modules/es6.object.is-extensible');\nrequire('./modules/es6.object.assign');\nrequire('./modules/es6.object.is');\nrequire('./modules/es6.object.set-prototype-of');\nrequire('./modules/es6.object.to-string');\nrequire('./modules/es6.function.bind');\nrequire('./modules/es6.function.name');\nrequire('./modules/es6.function.has-instance');\nrequire('./modules/es6.parse-int');\nrequire('./modules/es6.parse-float');\nrequire('./modules/es6.number.constructor');\nrequire('./modules/es6.number.to-fixed');\nrequire('./modules/es6.number.to-precision');\nrequire('./modules/es6.number.epsilon');\nrequire('./modules/es6.number.is-finite');\nrequire('./modules/es6.number.is-integer');\nrequire('./modules/es6.number.is-nan');\nrequire('./modules/es6.number.is-safe-integer');\nrequire('./modules/es6.number.max-safe-integer');\nrequire('./modules/es6.number.min-safe-integer');\nrequire('./modules/es6.number.parse-float');\nrequire('./modules/es6.number.parse-int');\nrequire('./modules/es6.math.acosh');\nrequire('./modules/es6.math.asinh');\nrequire('./modules/es6.math.atanh');\nrequire('./modules/es6.math.cbrt');\nrequire('./modules/es6.math.clz32');\nrequire('./modules/es6.math.cosh');\nrequire('./modules/es6.math.expm1');\nrequire('./modules/es6.math.fround');\nrequire('./modules/es6.math.hypot');\nrequire('./modules/es6.math.imul');\nrequire('./modules/es6.math.log10');\nrequire('./modules/es6.math.log1p');\nrequire('./modules/es6.math.log2');\nrequire('./modules/es6.math.sign');\nrequire('./modules/es6.math.sinh');\nrequire('./modules/es6.math.tanh');\nrequire('./modules/es6.math.trunc');\nrequire('./modules/es6.string.from-code-point');\nrequire('./modules/es6.string.raw');\nrequire('./modules/es6.string.trim');\nrequire('./modules/es6.string.iterator');\nrequire('./modules/es6.string.code-point-at');\nrequire('./modules/es6.string.ends-with');\nrequire('./modules/es6.string.includes');\nrequire('./modules/es6.string.repeat');\nrequire('./modules/es6.string.starts-with');\nrequire('./modules/es6.string.anchor');\nrequire('./modules/es6.string.big');\nrequire('./modules/es6.string.blink');\nrequire('./modules/es6.string.bold');\nrequire('./modules/es6.string.fixed');\nrequire('./modules/es6.string.fontcolor');\nrequire('./modules/es6.string.fontsize');\nrequire('./modules/es6.string.italics');\nrequire('./modules/es6.string.link');\nrequire('./modules/es6.string.small');\nrequire('./modules/es6.string.strike');\nrequire('./modules/es6.string.sub');\nrequire('./modules/es6.string.sup');\nrequire('./modules/es6.date.now');\nrequire('./modules/es6.date.to-json');\nrequire('./modules/es6.date.to-iso-string');\nrequire('./modules/es6.date.to-string');\nrequire('./modules/es6.date.to-primitive');\nrequire('./modules/es6.array.is-array');\nrequire('./modules/es6.array.from');\nrequire('./modules/es6.array.of');\nrequire('./modules/es6.array.join');\nrequire('./modules/es6.array.slice');\nrequire('./modules/es6.array.sort');\nrequire('./modules/es6.array.for-each');\nrequire('./modules/es6.array.map');\nrequire('./modules/es6.array.filter');\nrequire('./modules/es6.array.some');\nrequire('./modules/es6.array.every');\nrequire('./modules/es6.array.reduce');\nrequire('./modules/es6.array.reduce-right');\nrequire('./modules/es6.array.index-of');\nrequire('./modules/es6.array.last-index-of');\nrequire('./modules/es6.array.copy-within');\nrequire('./modules/es6.array.fill');\nrequire('./modules/es6.array.find');\nrequire('./modules/es6.array.find-index');\nrequire('./modules/es6.array.species');\nrequire('./modules/es6.array.iterator');\nrequire('./modules/es6.regexp.constructor');\nrequire('./modules/es6.regexp.to-string');\nrequire('./modules/es6.regexp.flags');\nrequire('./modules/es6.regexp.match');\nrequire('./modules/es6.regexp.replace');\nrequire('./modules/es6.regexp.search');\nrequire('./modules/es6.regexp.split');\nrequire('./modules/es6.promise');\nrequire('./modules/es6.map');\nrequire('./modules/es6.set');\nrequire('./modules/es6.weak-map');\nrequire('./modules/es6.weak-set');\nrequire('./modules/es6.typed.array-buffer');\nrequire('./modules/es6.typed.data-view');\nrequire('./modules/es6.typed.int8-array');\nrequire('./modules/es6.typed.uint8-array');\nrequire('./modules/es6.typed.uint8-clamped-array');\nrequire('./modules/es6.typed.int16-array');\nrequire('./modules/es6.typed.uint16-array');\nrequire('./modules/es6.typed.int32-array');\nrequire('./modules/es6.typed.uint32-array');\nrequire('./modules/es6.typed.float32-array');\nrequire('./modules/es6.typed.float64-array');\nrequire('./modules/es6.reflect.apply');\nrequire('./modules/es6.reflect.construct');\nrequire('./modules/es6.reflect.define-property');\nrequire('./modules/es6.reflect.delete-property');\nrequire('./modules/es6.reflect.enumerate');\nrequire('./modules/es6.reflect.get');\nrequire('./modules/es6.reflect.get-own-property-descriptor');\nrequire('./modules/es6.reflect.get-prototype-of');\nrequire('./modules/es6.reflect.has');\nrequire('./modules/es6.reflect.is-extensible');\nrequire('./modules/es6.reflect.own-keys');\nrequire('./modules/es6.reflect.prevent-extensions');\nrequire('./modules/es6.reflect.set');\nrequire('./modules/es6.reflect.set-prototype-of');\nrequire('./modules/es7.array.includes');\nrequire('./modules/es7.string.at');\nrequire('./modules/es7.string.pad-start');\nrequire('./modules/es7.string.pad-end');\nrequire('./modules/es7.string.trim-left');\nrequire('./modules/es7.string.trim-right');\nrequire('./modules/es7.string.match-all');\nrequire('./modules/es7.symbol.async-iterator');\nrequire('./modules/es7.symbol.observable');\nrequire('./modules/es7.object.get-own-property-descriptors');\nrequire('./modules/es7.object.values');\nrequire('./modules/es7.object.entries');\nrequire('./modules/es7.object.define-getter');\nrequire('./modules/es7.object.define-setter');\nrequire('./modules/es7.object.lookup-getter');\nrequire('./modules/es7.object.lookup-setter');\nrequire('./modules/es7.map.to-json');\nrequire('./modules/es7.set.to-json');\nrequire('./modules/es7.system.global');\nrequire('./modules/es7.error.is-error');\nrequire('./modules/es7.math.iaddh');\nrequire('./modules/es7.math.isubh');\nrequire('./modules/es7.math.imulh');\nrequire('./modules/es7.math.umulh');\nrequire('./modules/es7.reflect.define-metadata');\nrequire('./modules/es7.reflect.delete-metadata');\nrequire('./modules/es7.reflect.get-metadata');\nrequire('./modules/es7.reflect.get-metadata-keys');\nrequire('./modules/es7.reflect.get-own-metadata');\nrequire('./modules/es7.reflect.get-own-metadata-keys');\nrequire('./modules/es7.reflect.has-metadata');\nrequire('./modules/es7.reflect.has-own-metadata');\nrequire('./modules/es7.reflect.metadata');\nrequire('./modules/es7.asap');\nrequire('./modules/es7.observable');\nrequire('./modules/web.timers');\nrequire('./modules/web.immediate');\nrequire('./modules/web.dom.iterable');\nmodule.exports = require('./modules/_core');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/shim.js\n ** module id = 306\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 308\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value instanceof AwaitArgument) {\n          return Promise.resolve(value.arg).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/regenerator-runtime/runtime.js\n ** module id = 309\n ** module chunks = 0\n **/"],"sourceRoot":""}